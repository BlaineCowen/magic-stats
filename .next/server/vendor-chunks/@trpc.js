"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@trpc";
exports.ids = ["vendor-chunks/@trpc"];
exports.modules = {

/***/ "(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-CjKyS10w.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/TRPCClientError-CjKyS10w.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCClientError: () => (/* binding */ TRPCClientError),\n/* harmony export */   isTRPCClientError: () => (/* binding */ isTRPCClientError)\n/* harmony export */ });\n/* harmony import */ var _objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objectSpread2-BvkFp-_Y.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/objectSpread2-BvkFp-_Y.mjs\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/server/unstable-core-do-not-import */ \"(ssr)/./node_modules/@trpc/server/dist/utils-DdbbrDku.mjs\");\n\n\n\n//#region src/TRPCClientError.ts\nvar import_defineProperty = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_defineProperty)(), 1);\nvar import_objectSpread2 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\nfunction isTRPCClientError(cause) {\n\treturn cause instanceof TRPCClientError;\n}\nfunction isTRPCErrorResponse(obj) {\n\treturn (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_1__.isObject)(obj) && (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_1__.isObject)(obj[\"error\"]) && typeof obj[\"error\"][\"code\"] === \"number\" && typeof obj[\"error\"][\"message\"] === \"string\";\n}\nfunction getMessageFromUnknownError(err, fallback) {\n\tif (typeof err === \"string\") return err;\n\tif ((0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_1__.isObject)(err) && typeof err[\"message\"] === \"string\") return err[\"message\"];\n\treturn fallback;\n}\nvar TRPCClientError = class TRPCClientError extends Error {\n\tconstructor(message, opts) {\n\t\tvar _opts$result, _opts$result2;\n\t\tconst cause = opts === null || opts === void 0 ? void 0 : opts.cause;\n\t\tsuper(message, { cause });\n\t\t(0, import_defineProperty.default)(this, \"cause\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"shape\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"data\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"meta\", void 0);\n\t\tthis.meta = opts === null || opts === void 0 ? void 0 : opts.meta;\n\t\tthis.cause = cause;\n\t\tthis.shape = opts === null || opts === void 0 || (_opts$result = opts.result) === null || _opts$result === void 0 ? void 0 : _opts$result.error;\n\t\tthis.data = opts === null || opts === void 0 || (_opts$result2 = opts.result) === null || _opts$result2 === void 0 ? void 0 : _opts$result2.error.data;\n\t\tthis.name = \"TRPCClientError\";\n\t\tObject.setPrototypeOf(this, TRPCClientError.prototype);\n\t}\n\tstatic from(_cause, opts = {}) {\n\t\tconst cause = _cause;\n\t\tif (isTRPCClientError(cause)) {\n\t\t\tif (opts.meta) cause.meta = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, cause.meta), opts.meta);\n\t\t\treturn cause;\n\t\t}\n\t\tif (isTRPCErrorResponse(cause)) return new TRPCClientError(cause.error.message, (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, { result: cause }));\n\t\treturn new TRPCClientError(getMessageFromUnknownError(cause, \"Unknown error\"), (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, { cause }));\n\t}\n};\n\n//#endregion\n\n//# sourceMappingURL=TRPCClientError-CjKyS10w.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvVFJQQ0NsaWVudEVycm9yLUNqS3lTMTB3Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNHO0FBQ2xDOztBQUVwRTtBQUNBLDRCQUE0QixtRUFBTyxDQUFDLGtGQUFzQjtBQUMxRCwyQkFBMkIsbUVBQU8sQ0FBQyxpRkFBcUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtGQUFRLFNBQVMsa0ZBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0EsS0FBSyxrRkFBUTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixPQUFPO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBLHFHQUFxRztBQUNyRztBQUNBO0FBQ0Esd0pBQXdKLFdBQVcsSUFBSSxlQUFlO0FBQ3RMLHVKQUF1SixXQUFXLElBQUksT0FBTztBQUM3SztBQUNBOztBQUVBO0FBQzhDO0FBQzlDIiwic291cmNlcyI6WyIvVXNlcnMvYmxhaW5lY293ZW4vRG9jdW1lbnRzL1Byb2plY3RzL05GTC1TdGF0LVF1ZXJ5L25vZGVfbW9kdWxlcy9AdHJwYy9jbGllbnQvZGlzdC9UUlBDQ2xpZW50RXJyb3ItQ2pLeVMxMHcubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fdG9FU00sIHJlcXVpcmVfZGVmaW5lUHJvcGVydHksIHJlcXVpcmVfb2JqZWN0U3ByZWFkMiB9IGZyb20gXCIuL29iamVjdFNwcmVhZDItQnZrRnAtX1kubWpzXCI7XG5pbXBvcnQgeyBpc09iamVjdCB9IGZyb20gXCJAdHJwYy9zZXJ2ZXIvdW5zdGFibGUtY29yZS1kby1ub3QtaW1wb3J0XCI7XG5cbi8vI3JlZ2lvbiBzcmMvVFJQQ0NsaWVudEVycm9yLnRzXG52YXIgaW1wb3J0X2RlZmluZVByb3BlcnR5ID0gX190b0VTTShyZXF1aXJlX2RlZmluZVByb3BlcnR5KCksIDEpO1xudmFyIGltcG9ydF9vYmplY3RTcHJlYWQyID0gX190b0VTTShyZXF1aXJlX29iamVjdFNwcmVhZDIoKSwgMSk7XG5mdW5jdGlvbiBpc1RSUENDbGllbnRFcnJvcihjYXVzZSkge1xuXHRyZXR1cm4gY2F1c2UgaW5zdGFuY2VvZiBUUlBDQ2xpZW50RXJyb3I7XG59XG5mdW5jdGlvbiBpc1RSUENFcnJvclJlc3BvbnNlKG9iaikge1xuXHRyZXR1cm4gaXNPYmplY3Qob2JqKSAmJiBpc09iamVjdChvYmpbXCJlcnJvclwiXSkgJiYgdHlwZW9mIG9ialtcImVycm9yXCJdW1wiY29kZVwiXSA9PT0gXCJudW1iZXJcIiAmJiB0eXBlb2Ygb2JqW1wiZXJyb3JcIl1bXCJtZXNzYWdlXCJdID09PSBcInN0cmluZ1wiO1xufVxuZnVuY3Rpb24gZ2V0TWVzc2FnZUZyb21Vbmtub3duRXJyb3IoZXJyLCBmYWxsYmFjaykge1xuXHRpZiAodHlwZW9mIGVyciA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGVycjtcblx0aWYgKGlzT2JqZWN0KGVycikgJiYgdHlwZW9mIGVycltcIm1lc3NhZ2VcIl0gPT09IFwic3RyaW5nXCIpIHJldHVybiBlcnJbXCJtZXNzYWdlXCJdO1xuXHRyZXR1cm4gZmFsbGJhY2s7XG59XG52YXIgVFJQQ0NsaWVudEVycm9yID0gY2xhc3MgVFJQQ0NsaWVudEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuXHRjb25zdHJ1Y3RvcihtZXNzYWdlLCBvcHRzKSB7XG5cdFx0dmFyIF9vcHRzJHJlc3VsdCwgX29wdHMkcmVzdWx0Mjtcblx0XHRjb25zdCBjYXVzZSA9IG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy5jYXVzZTtcblx0XHRzdXBlcihtZXNzYWdlLCB7IGNhdXNlIH0pO1xuXHRcdCgwLCBpbXBvcnRfZGVmaW5lUHJvcGVydHkuZGVmYXVsdCkodGhpcywgXCJjYXVzZVwiLCB2b2lkIDApO1xuXHRcdCgwLCBpbXBvcnRfZGVmaW5lUHJvcGVydHkuZGVmYXVsdCkodGhpcywgXCJzaGFwZVwiLCB2b2lkIDApO1xuXHRcdCgwLCBpbXBvcnRfZGVmaW5lUHJvcGVydHkuZGVmYXVsdCkodGhpcywgXCJkYXRhXCIsIHZvaWQgMCk7XG5cdFx0KDAsIGltcG9ydF9kZWZpbmVQcm9wZXJ0eS5kZWZhdWx0KSh0aGlzLCBcIm1ldGFcIiwgdm9pZCAwKTtcblx0XHR0aGlzLm1ldGEgPSBvcHRzID09PSBudWxsIHx8IG9wdHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdHMubWV0YTtcblx0XHR0aGlzLmNhdXNlID0gY2F1c2U7XG5cdFx0dGhpcy5zaGFwZSA9IG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwIHx8IChfb3B0cyRyZXN1bHQgPSBvcHRzLnJlc3VsdCkgPT09IG51bGwgfHwgX29wdHMkcmVzdWx0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfb3B0cyRyZXN1bHQuZXJyb3I7XG5cdFx0dGhpcy5kYXRhID0gb3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgfHwgKF9vcHRzJHJlc3VsdDIgPSBvcHRzLnJlc3VsdCkgPT09IG51bGwgfHwgX29wdHMkcmVzdWx0MiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdHMkcmVzdWx0Mi5lcnJvci5kYXRhO1xuXHRcdHRoaXMubmFtZSA9IFwiVFJQQ0NsaWVudEVycm9yXCI7XG5cdFx0T2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIFRSUENDbGllbnRFcnJvci5wcm90b3R5cGUpO1xuXHR9XG5cdHN0YXRpYyBmcm9tKF9jYXVzZSwgb3B0cyA9IHt9KSB7XG5cdFx0Y29uc3QgY2F1c2UgPSBfY2F1c2U7XG5cdFx0aWYgKGlzVFJQQ0NsaWVudEVycm9yKGNhdXNlKSkge1xuXHRcdFx0aWYgKG9wdHMubWV0YSkgY2F1c2UubWV0YSA9ICgwLCBpbXBvcnRfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSgoMCwgaW1wb3J0X29iamVjdFNwcmVhZDIuZGVmYXVsdCkoe30sIGNhdXNlLm1ldGEpLCBvcHRzLm1ldGEpO1xuXHRcdFx0cmV0dXJuIGNhdXNlO1xuXHRcdH1cblx0XHRpZiAoaXNUUlBDRXJyb3JSZXNwb25zZShjYXVzZSkpIHJldHVybiBuZXcgVFJQQ0NsaWVudEVycm9yKGNhdXNlLmVycm9yLm1lc3NhZ2UsICgwLCBpbXBvcnRfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSgoMCwgaW1wb3J0X29iamVjdFNwcmVhZDIuZGVmYXVsdCkoe30sIG9wdHMpLCB7fSwgeyByZXN1bHQ6IGNhdXNlIH0pKTtcblx0XHRyZXR1cm4gbmV3IFRSUENDbGllbnRFcnJvcihnZXRNZXNzYWdlRnJvbVVua25vd25FcnJvcihjYXVzZSwgXCJVbmtub3duIGVycm9yXCIpLCAoMCwgaW1wb3J0X29iamVjdFNwcmVhZDIuZGVmYXVsdCkoKDAsIGltcG9ydF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKHt9LCBvcHRzKSwge30sIHsgY2F1c2UgfSkpO1xuXHR9XG59O1xuXG4vLyNlbmRyZWdpb25cbmV4cG9ydCB7IFRSUENDbGllbnRFcnJvciwgaXNUUlBDQ2xpZW50RXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRSUENDbGllbnRFcnJvci1Dakt5UzEwdy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-CjKyS10w.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/httpBatchLink-CA96-gnJ.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/httpBatchLink-CA96-gnJ.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   abortSignalToPromise: () => (/* binding */ abortSignalToPromise),\n/* harmony export */   allAbortSignals: () => (/* binding */ allAbortSignals),\n/* harmony export */   dataLoader: () => (/* binding */ dataLoader),\n/* harmony export */   httpBatchLink: () => (/* binding */ httpBatchLink),\n/* harmony export */   raceAbortSignals: () => (/* binding */ raceAbortSignals)\n/* harmony export */ });\n/* harmony import */ var _objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objectSpread2-BvkFp-_Y.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/objectSpread2-BvkFp-_Y.mjs\");\n/* harmony import */ var _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TRPCClientError-CjKyS10w.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-CjKyS10w.mjs\");\n/* harmony import */ var _httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./httpUtils-Bkv1johT.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpUtils-Bkv1johT.mjs\");\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @trpc/server/unstable-core-do-not-import */ \"(ssr)/./node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\");\n\n\n\n\n\n\n//#region src/internals/dataLoader.ts\n/**\n* A function that should never be called unless we messed something up.\n*/\nconst throwFatalError = () => {\n\tthrow new Error(\"Something went wrong. Please submit an issue at https://github.com/trpc/trpc/issues/new\");\n};\n/**\n* Dataloader that's very inspired by https://github.com/graphql/dataloader\n* Less configuration, no caching, and allows you to cancel requests\n* When cancelling a single fetch the whole batch will be cancelled only when _all_ items are cancelled\n*/\nfunction dataLoader(batchLoader) {\n\tlet pendingItems = null;\n\tlet dispatchTimer = null;\n\tconst destroyTimerAndPendingItems = () => {\n\t\tclearTimeout(dispatchTimer);\n\t\tdispatchTimer = null;\n\t\tpendingItems = null;\n\t};\n\t/**\n\t* Iterate through the items and split them into groups based on the `batchLoader`'s validate function\n\t*/\n\tfunction groupItems(items) {\n\t\tconst groupedItems = [[]];\n\t\tlet index = 0;\n\t\twhile (true) {\n\t\t\tconst item = items[index];\n\t\t\tif (!item) break;\n\t\t\tconst lastGroup = groupedItems[groupedItems.length - 1];\n\t\t\tif (item.aborted) {\n\t\t\t\tvar _item$reject;\n\t\t\t\t(_item$reject = item.reject) === null || _item$reject === void 0 || _item$reject.call(item, new Error(\"Aborted\"));\n\t\t\t\tindex++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst isValid = batchLoader.validate(lastGroup.concat(item).map((it) => it.key));\n\t\t\tif (isValid) {\n\t\t\t\tlastGroup.push(item);\n\t\t\t\tindex++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (lastGroup.length === 0) {\n\t\t\t\tvar _item$reject2;\n\t\t\t\t(_item$reject2 = item.reject) === null || _item$reject2 === void 0 || _item$reject2.call(item, new Error(\"Input is too big for a single dispatch\"));\n\t\t\t\tindex++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgroupedItems.push([]);\n\t\t}\n\t\treturn groupedItems;\n\t}\n\tfunction dispatch() {\n\t\tconst groupedItems = groupItems(pendingItems);\n\t\tdestroyTimerAndPendingItems();\n\t\tfor (const items of groupedItems) {\n\t\t\tif (!items.length) continue;\n\t\t\tconst batch = { items };\n\t\t\tfor (const item of items) item.batch = batch;\n\t\t\tconst promise = batchLoader.fetch(batch.items.map((_item) => _item.key));\n\t\t\tpromise.then(async (result) => {\n\t\t\t\tawait Promise.all(result.map(async (valueOrPromise, index) => {\n\t\t\t\t\tconst item = batch.items[index];\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar _item$resolve;\n\t\t\t\t\t\tconst value = await Promise.resolve(valueOrPromise);\n\t\t\t\t\t\t(_item$resolve = item.resolve) === null || _item$resolve === void 0 || _item$resolve.call(item, value);\n\t\t\t\t\t} catch (cause) {\n\t\t\t\t\t\tvar _item$reject3;\n\t\t\t\t\t\t(_item$reject3 = item.reject) === null || _item$reject3 === void 0 || _item$reject3.call(item, cause);\n\t\t\t\t\t}\n\t\t\t\t\titem.batch = null;\n\t\t\t\t\titem.reject = null;\n\t\t\t\t\titem.resolve = null;\n\t\t\t\t}));\n\t\t\t\tfor (const item of batch.items) {\n\t\t\t\t\tvar _item$reject4;\n\t\t\t\t\t(_item$reject4 = item.reject) === null || _item$reject4 === void 0 || _item$reject4.call(item, new Error(\"Missing result\"));\n\t\t\t\t\titem.batch = null;\n\t\t\t\t}\n\t\t\t}).catch((cause) => {\n\t\t\t\tfor (const item of batch.items) {\n\t\t\t\t\tvar _item$reject5;\n\t\t\t\t\t(_item$reject5 = item.reject) === null || _item$reject5 === void 0 || _item$reject5.call(item, cause);\n\t\t\t\t\titem.batch = null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\tfunction load(key) {\n\t\tvar _dispatchTimer;\n\t\tconst item = {\n\t\t\taborted: false,\n\t\t\tkey,\n\t\t\tbatch: null,\n\t\t\tresolve: throwFatalError,\n\t\t\treject: throwFatalError\n\t\t};\n\t\tconst promise = new Promise((resolve, reject) => {\n\t\t\tvar _pendingItems;\n\t\t\titem.reject = reject;\n\t\t\titem.resolve = resolve;\n\t\t\t(_pendingItems = pendingItems) !== null && _pendingItems !== void 0 || (pendingItems = []);\n\t\t\tpendingItems.push(item);\n\t\t});\n\t\t(_dispatchTimer = dispatchTimer) !== null && _dispatchTimer !== void 0 || (dispatchTimer = setTimeout(dispatch));\n\t\treturn promise;\n\t}\n\treturn { load };\n}\n\n//#endregion\n//#region src/internals/signals.ts\n/**\n* Like `Promise.all()` but for abort signals\n* - When all signals have been aborted, the merged signal will be aborted\n* - If one signal is `null`, no signal will be aborted\n*/\nfunction allAbortSignals(...signals) {\n\tconst ac = new AbortController();\n\tconst count = signals.length;\n\tlet abortedCount = 0;\n\tconst onAbort = () => {\n\t\tif (++abortedCount === count) ac.abort();\n\t};\n\tfor (const signal of signals) if (signal === null || signal === void 0 ? void 0 : signal.aborted) onAbort();\n\telse signal === null || signal === void 0 || signal.addEventListener(\"abort\", onAbort, { once: true });\n\treturn ac.signal;\n}\n/**\n* Like `Promise.race` but for abort signals\n*\n* Basically, a ponyfill for\n* [`AbortSignal.any`](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/any_static).\n*/\nfunction raceAbortSignals(...signals) {\n\tconst ac = new AbortController();\n\tfor (const signal of signals) if (signal === null || signal === void 0 ? void 0 : signal.aborted) ac.abort();\n\telse signal === null || signal === void 0 || signal.addEventListener(\"abort\", () => ac.abort(), { once: true });\n\treturn ac.signal;\n}\nfunction abortSignalToPromise(signal) {\n\treturn new Promise((_, reject) => {\n\t\tif (signal.aborted) {\n\t\t\treject(signal.reason);\n\t\t\treturn;\n\t\t}\n\t\tsignal.addEventListener(\"abort\", () => {\n\t\t\treject(signal.reason);\n\t\t}, { once: true });\n\t});\n}\n\n//#endregion\n//#region src/links/httpBatchLink.ts\nvar import_objectSpread2 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\n/**\n* @see https://trpc.io/docs/client/links/httpBatchLink\n*/\nfunction httpBatchLink(opts) {\n\tvar _opts$maxURLLength, _opts$maxItems;\n\tconst resolvedOpts = (0,_httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_2__.resolveHTTPLinkOptions)(opts);\n\tconst maxURLLength = (_opts$maxURLLength = opts.maxURLLength) !== null && _opts$maxURLLength !== void 0 ? _opts$maxURLLength : Infinity;\n\tconst maxItems = (_opts$maxItems = opts.maxItems) !== null && _opts$maxItems !== void 0 ? _opts$maxItems : Infinity;\n\treturn () => {\n\t\tconst batchLoader = (type) => {\n\t\t\treturn {\n\t\t\t\tvalidate(batchOps) {\n\t\t\t\t\tif (maxURLLength === Infinity && maxItems === Infinity) return true;\n\t\t\t\t\tif (batchOps.length > maxItems) return false;\n\t\t\t\t\tconst path = batchOps.map((op) => op.path).join(\",\");\n\t\t\t\t\tconst inputs = batchOps.map((op) => op.input);\n\t\t\t\t\tconst url = (0,_httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_2__.getUrl)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, resolvedOpts), {}, {\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tinputs,\n\t\t\t\t\t\tsignal: null\n\t\t\t\t\t}));\n\t\t\t\t\treturn url.length <= maxURLLength;\n\t\t\t\t},\n\t\t\t\tasync fetch(batchOps) {\n\t\t\t\t\tconst path = batchOps.map((op) => op.path).join(\",\");\n\t\t\t\t\tconst inputs = batchOps.map((op) => op.input);\n\t\t\t\t\tconst signal = allAbortSignals(...batchOps.map((op) => op.signal));\n\t\t\t\t\tconst res = await (0,_httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_2__.jsonHttpRequester)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, resolvedOpts), {}, {\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tinputs,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\theaders() {\n\t\t\t\t\t\t\tif (!opts.headers) return {};\n\t\t\t\t\t\t\tif (typeof opts.headers === \"function\") return opts.headers({ opList: batchOps });\n\t\t\t\t\t\t\treturn opts.headers;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsignal\n\t\t\t\t\t}));\n\t\t\t\t\tconst resJSON = Array.isArray(res.json) ? res.json : batchOps.map(() => res.json);\n\t\t\t\t\tconst result = resJSON.map((item) => ({\n\t\t\t\t\t\tmeta: res.meta,\n\t\t\t\t\t\tjson: item\n\t\t\t\t\t}));\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst query = dataLoader(batchLoader(\"query\"));\n\t\tconst mutation = dataLoader(batchLoader(\"mutation\"));\n\t\tconst loaders = {\n\t\t\tquery,\n\t\t\tmutation\n\t\t};\n\t\treturn ({ op }) => {\n\t\t\treturn (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_3__.observable)((observer) => {\n\t\t\t\t/* istanbul ignore if -- @preserve */\n\t\t\t\tif (op.type === \"subscription\") throw new Error(\"Subscriptions are unsupported by `httpLink` - use `httpSubscriptionLink` or `wsLink`\");\n\t\t\t\tconst loader = loaders[op.type];\n\t\t\t\tconst promise = loader.load(op);\n\t\t\t\tlet _res = void 0;\n\t\t\t\tpromise.then((res) => {\n\t\t\t\t\t_res = res;\n\t\t\t\t\tconst transformed = (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_4__.transformResult)(res.json, resolvedOpts.transformer.output);\n\t\t\t\t\tif (!transformed.ok) {\n\t\t\t\t\t\tobserver.error(_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCClientError.from(transformed.error, { meta: res.meta }));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tobserver.next({\n\t\t\t\t\t\tcontext: res.meta,\n\t\t\t\t\t\tresult: transformed.result\n\t\t\t\t\t});\n\t\t\t\t\tobserver.complete();\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tobserver.error(_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCClientError.from(err, { meta: _res === null || _res === void 0 ? void 0 : _res.meta }));\n\t\t\t\t});\n\t\t\t\treturn () => {};\n\t\t\t});\n\t\t};\n\t};\n}\n\n//#endregion\n\n//# sourceMappingURL=httpBatchLink-CA96-gnJ.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/httpBatchLink-CA96-gnJ.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/httpLink-CYOcG9kQ.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/httpLink-CYOcG9kQ.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   httpLink: () => (/* binding */ httpLink),\n/* harmony export */   isFormData: () => (/* binding */ isFormData),\n/* harmony export */   isNonJsonSerializable: () => (/* binding */ isNonJsonSerializable),\n/* harmony export */   isOctetType: () => (/* binding */ isOctetType)\n/* harmony export */ });\n/* harmony import */ var _objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objectSpread2-BvkFp-_Y.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/objectSpread2-BvkFp-_Y.mjs\");\n/* harmony import */ var _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TRPCClientError-CjKyS10w.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-CjKyS10w.mjs\");\n/* harmony import */ var _httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./httpUtils-Bkv1johT.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpUtils-Bkv1johT.mjs\");\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @trpc/server/unstable-core-do-not-import */ \"(ssr)/./node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\");\n\n\n\n\n\n\n//#region src/links/internals/contentTypes.ts\nfunction isOctetType(input) {\n\treturn input instanceof Uint8Array || input instanceof Blob;\n}\nfunction isFormData(input) {\n\treturn input instanceof FormData;\n}\nfunction isNonJsonSerializable(input) {\n\treturn isOctetType(input) || isFormData(input);\n}\n\n//#endregion\n//#region src/links/httpLink.ts\nvar import_objectSpread2 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\nconst universalRequester = (opts) => {\n\tif (\"input\" in opts) {\n\t\tconst { input } = opts;\n\t\tif (isFormData(input)) {\n\t\t\tif (opts.type !== \"mutation\" && opts.methodOverride !== \"POST\") throw new Error(\"FormData is only supported for mutations\");\n\t\t\treturn (0,_httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_2__.httpRequest)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, {\n\t\t\t\tcontentTypeHeader: void 0,\n\t\t\t\tgetUrl: _httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_2__.getUrl,\n\t\t\t\tgetBody: () => input\n\t\t\t}));\n\t\t}\n\t\tif (isOctetType(input)) {\n\t\t\tif (opts.type !== \"mutation\" && opts.methodOverride !== \"POST\") throw new Error(\"Octet type input is only supported for mutations\");\n\t\t\treturn (0,_httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_2__.httpRequest)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, {\n\t\t\t\tcontentTypeHeader: \"application/octet-stream\",\n\t\t\t\tgetUrl: _httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_2__.getUrl,\n\t\t\t\tgetBody: () => input\n\t\t\t}));\n\t\t}\n\t}\n\treturn (0,_httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_2__.jsonHttpRequester)(opts);\n};\n/**\n* @see https://trpc.io/docs/client/links/httpLink\n*/\nfunction httpLink(opts) {\n\tconst resolvedOpts = (0,_httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_2__.resolveHTTPLinkOptions)(opts);\n\treturn () => {\n\t\treturn ({ op }) => {\n\t\t\treturn (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_3__.observable)((observer) => {\n\t\t\t\tconst { path, input, type } = op;\n\t\t\t\t/* istanbul ignore if -- @preserve */\n\t\t\t\tif (type === \"subscription\") throw new Error(\"Subscriptions are unsupported by `httpLink` - use `httpSubscriptionLink` or `wsLink`\");\n\t\t\t\tconst request = universalRequester((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, resolvedOpts), {}, {\n\t\t\t\t\ttype,\n\t\t\t\t\tpath,\n\t\t\t\t\tinput,\n\t\t\t\t\tsignal: op.signal,\n\t\t\t\t\theaders() {\n\t\t\t\t\t\tif (!opts.headers) return {};\n\t\t\t\t\t\tif (typeof opts.headers === \"function\") return opts.headers({ op });\n\t\t\t\t\t\treturn opts.headers;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\tlet meta = void 0;\n\t\t\t\trequest.then((res) => {\n\t\t\t\t\tmeta = res.meta;\n\t\t\t\t\tconst transformed = (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_4__.transformResult)(res.json, resolvedOpts.transformer.output);\n\t\t\t\t\tif (!transformed.ok) {\n\t\t\t\t\t\tobserver.error(_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCClientError.from(transformed.error, { meta }));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tobserver.next({\n\t\t\t\t\t\tcontext: res.meta,\n\t\t\t\t\t\tresult: transformed.result\n\t\t\t\t\t});\n\t\t\t\t\tobserver.complete();\n\t\t\t\t}).catch((cause) => {\n\t\t\t\t\tobserver.error(_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCClientError.from(cause, { meta }));\n\t\t\t\t});\n\t\t\t\treturn () => {};\n\t\t\t});\n\t\t};\n\t};\n}\n\n//#endregion\n\n//# sourceMappingURL=httpLink-CYOcG9kQ.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvaHR0cExpbmstQ1lPY0c5a1EubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE4RTtBQUNiO0FBQ3lDO0FBQ3JEO0FBQ3NCOztBQUUzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsMkJBQTJCLG1FQUFPLENBQUMsaUZBQXFCO0FBQ3hEO0FBQ0E7QUFDQSxVQUFVLFFBQVE7QUFDbEI7QUFDQTtBQUNBLFVBQVUsb0VBQVcsdUVBQXVFLFdBQVc7QUFDdkc7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsVUFBVSxvRUFBVyx1RUFBdUUsV0FBVztBQUN2RztBQUNBLFVBQVU7QUFDVjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsUUFBUSwwRUFBaUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwrRUFBc0I7QUFDNUM7QUFDQSxZQUFZLElBQUk7QUFDaEIsVUFBVSxtRUFBVTtBQUNwQixZQUFZLG9CQUFvQjtBQUNoQztBQUNBO0FBQ0EsNkdBQTZHLG1CQUFtQjtBQUNoSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRUFBb0UsSUFBSTtBQUN4RTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix5RkFBZTtBQUN4QztBQUNBLHFCQUFxQiwwRUFBZSwyQkFBMkIsTUFBTTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsS0FBSztBQUNMLG9CQUFvQiwwRUFBZSxlQUFlLE1BQU07QUFDeEQsS0FBSztBQUNMO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNvRTtBQUNwRSIsInNvdXJjZXMiOlsiL1VzZXJzL2JsYWluZWNvd2VuL0RvY3VtZW50cy9Qcm9qZWN0cy9ORkwtU3RhdC1RdWVyeS9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvaHR0cExpbmstQ1lPY0c5a1EubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fdG9FU00sIHJlcXVpcmVfb2JqZWN0U3ByZWFkMiB9IGZyb20gXCIuL29iamVjdFNwcmVhZDItQnZrRnAtX1kubWpzXCI7XG5pbXBvcnQgeyBUUlBDQ2xpZW50RXJyb3IgfSBmcm9tIFwiLi9UUlBDQ2xpZW50RXJyb3ItQ2pLeVMxMHcubWpzXCI7XG5pbXBvcnQgeyBnZXRVcmwsIGh0dHBSZXF1ZXN0LCBqc29uSHR0cFJlcXVlc3RlciwgcmVzb2x2ZUhUVFBMaW5rT3B0aW9ucyB9IGZyb20gXCIuL2h0dHBVdGlscy1Ca3Yxam9oVC5tanNcIjtcbmltcG9ydCB7IG9ic2VydmFibGUgfSBmcm9tIFwiQHRycGMvc2VydmVyL29ic2VydmFibGVcIjtcbmltcG9ydCB7IHRyYW5zZm9ybVJlc3VsdCB9IGZyb20gXCJAdHJwYy9zZXJ2ZXIvdW5zdGFibGUtY29yZS1kby1ub3QtaW1wb3J0XCI7XG5cbi8vI3JlZ2lvbiBzcmMvbGlua3MvaW50ZXJuYWxzL2NvbnRlbnRUeXBlcy50c1xuZnVuY3Rpb24gaXNPY3RldFR5cGUoaW5wdXQpIHtcblx0cmV0dXJuIGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheSB8fCBpbnB1dCBpbnN0YW5jZW9mIEJsb2I7XG59XG5mdW5jdGlvbiBpc0Zvcm1EYXRhKGlucHV0KSB7XG5cdHJldHVybiBpbnB1dCBpbnN0YW5jZW9mIEZvcm1EYXRhO1xufVxuZnVuY3Rpb24gaXNOb25Kc29uU2VyaWFsaXphYmxlKGlucHV0KSB7XG5cdHJldHVybiBpc09jdGV0VHlwZShpbnB1dCkgfHwgaXNGb3JtRGF0YShpbnB1dCk7XG59XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIHNyYy9saW5rcy9odHRwTGluay50c1xudmFyIGltcG9ydF9vYmplY3RTcHJlYWQyID0gX190b0VTTShyZXF1aXJlX29iamVjdFNwcmVhZDIoKSwgMSk7XG5jb25zdCB1bml2ZXJzYWxSZXF1ZXN0ZXIgPSAob3B0cykgPT4ge1xuXHRpZiAoXCJpbnB1dFwiIGluIG9wdHMpIHtcblx0XHRjb25zdCB7IGlucHV0IH0gPSBvcHRzO1xuXHRcdGlmIChpc0Zvcm1EYXRhKGlucHV0KSkge1xuXHRcdFx0aWYgKG9wdHMudHlwZSAhPT0gXCJtdXRhdGlvblwiICYmIG9wdHMubWV0aG9kT3ZlcnJpZGUgIT09IFwiUE9TVFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJGb3JtRGF0YSBpcyBvbmx5IHN1cHBvcnRlZCBmb3IgbXV0YXRpb25zXCIpO1xuXHRcdFx0cmV0dXJuIGh0dHBSZXF1ZXN0KCgwLCBpbXBvcnRfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSgoMCwgaW1wb3J0X29iamVjdFNwcmVhZDIuZGVmYXVsdCkoe30sIG9wdHMpLCB7fSwge1xuXHRcdFx0XHRjb250ZW50VHlwZUhlYWRlcjogdm9pZCAwLFxuXHRcdFx0XHRnZXRVcmwsXG5cdFx0XHRcdGdldEJvZHk6ICgpID0+IGlucHV0XG5cdFx0XHR9KSk7XG5cdFx0fVxuXHRcdGlmIChpc09jdGV0VHlwZShpbnB1dCkpIHtcblx0XHRcdGlmIChvcHRzLnR5cGUgIT09IFwibXV0YXRpb25cIiAmJiBvcHRzLm1ldGhvZE92ZXJyaWRlICE9PSBcIlBPU1RcIikgdGhyb3cgbmV3IEVycm9yKFwiT2N0ZXQgdHlwZSBpbnB1dCBpcyBvbmx5IHN1cHBvcnRlZCBmb3IgbXV0YXRpb25zXCIpO1xuXHRcdFx0cmV0dXJuIGh0dHBSZXF1ZXN0KCgwLCBpbXBvcnRfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSgoMCwgaW1wb3J0X29iamVjdFNwcmVhZDIuZGVmYXVsdCkoe30sIG9wdHMpLCB7fSwge1xuXHRcdFx0XHRjb250ZW50VHlwZUhlYWRlcjogXCJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW1cIixcblx0XHRcdFx0Z2V0VXJsLFxuXHRcdFx0XHRnZXRCb2R5OiAoKSA9PiBpbnB1dFxuXHRcdFx0fSkpO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4ganNvbkh0dHBSZXF1ZXN0ZXIob3B0cyk7XG59O1xuLyoqXG4qIEBzZWUgaHR0cHM6Ly90cnBjLmlvL2RvY3MvY2xpZW50L2xpbmtzL2h0dHBMaW5rXG4qL1xuZnVuY3Rpb24gaHR0cExpbmsob3B0cykge1xuXHRjb25zdCByZXNvbHZlZE9wdHMgPSByZXNvbHZlSFRUUExpbmtPcHRpb25zKG9wdHMpO1xuXHRyZXR1cm4gKCkgPT4ge1xuXHRcdHJldHVybiAoeyBvcCB9KSA9PiB7XG5cdFx0XHRyZXR1cm4gb2JzZXJ2YWJsZSgob2JzZXJ2ZXIpID0+IHtcblx0XHRcdFx0Y29uc3QgeyBwYXRoLCBpbnB1dCwgdHlwZSB9ID0gb3A7XG5cdFx0XHRcdC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtLSBAcHJlc2VydmUgKi9cblx0XHRcdFx0aWYgKHR5cGUgPT09IFwic3Vic2NyaXB0aW9uXCIpIHRocm93IG5ldyBFcnJvcihcIlN1YnNjcmlwdGlvbnMgYXJlIHVuc3VwcG9ydGVkIGJ5IGBodHRwTGlua2AgLSB1c2UgYGh0dHBTdWJzY3JpcHRpb25MaW5rYCBvciBgd3NMaW5rYFwiKTtcblx0XHRcdFx0Y29uc3QgcmVxdWVzdCA9IHVuaXZlcnNhbFJlcXVlc3RlcigoMCwgaW1wb3J0X29iamVjdFNwcmVhZDIuZGVmYXVsdCkoKDAsIGltcG9ydF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKHt9LCByZXNvbHZlZE9wdHMpLCB7fSwge1xuXHRcdFx0XHRcdHR5cGUsXG5cdFx0XHRcdFx0cGF0aCxcblx0XHRcdFx0XHRpbnB1dCxcblx0XHRcdFx0XHRzaWduYWw6IG9wLnNpZ25hbCxcblx0XHRcdFx0XHRoZWFkZXJzKCkge1xuXHRcdFx0XHRcdFx0aWYgKCFvcHRzLmhlYWRlcnMpIHJldHVybiB7fTtcblx0XHRcdFx0XHRcdGlmICh0eXBlb2Ygb3B0cy5oZWFkZXJzID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBvcHRzLmhlYWRlcnMoeyBvcCB9KTtcblx0XHRcdFx0XHRcdHJldHVybiBvcHRzLmhlYWRlcnM7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KSk7XG5cdFx0XHRcdGxldCBtZXRhID0gdm9pZCAwO1xuXHRcdFx0XHRyZXF1ZXN0LnRoZW4oKHJlcykgPT4ge1xuXHRcdFx0XHRcdG1ldGEgPSByZXMubWV0YTtcblx0XHRcdFx0XHRjb25zdCB0cmFuc2Zvcm1lZCA9IHRyYW5zZm9ybVJlc3VsdChyZXMuanNvbiwgcmVzb2x2ZWRPcHRzLnRyYW5zZm9ybWVyLm91dHB1dCk7XG5cdFx0XHRcdFx0aWYgKCF0cmFuc2Zvcm1lZC5vaykge1xuXHRcdFx0XHRcdFx0b2JzZXJ2ZXIuZXJyb3IoVFJQQ0NsaWVudEVycm9yLmZyb20odHJhbnNmb3JtZWQuZXJyb3IsIHsgbWV0YSB9KSk7XG5cdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG9ic2VydmVyLm5leHQoe1xuXHRcdFx0XHRcdFx0Y29udGV4dDogcmVzLm1ldGEsXG5cdFx0XHRcdFx0XHRyZXN1bHQ6IHRyYW5zZm9ybWVkLnJlc3VsdFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdG9ic2VydmVyLmNvbXBsZXRlKCk7XG5cdFx0XHRcdH0pLmNhdGNoKChjYXVzZSkgPT4ge1xuXHRcdFx0XHRcdG9ic2VydmVyLmVycm9yKFRSUENDbGllbnRFcnJvci5mcm9tKGNhdXNlLCB7IG1ldGEgfSkpO1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0cmV0dXJuICgpID0+IHt9O1xuXHRcdFx0fSk7XG5cdFx0fTtcblx0fTtcbn1cblxuLy8jZW5kcmVnaW9uXG5leHBvcnQgeyBodHRwTGluaywgaXNGb3JtRGF0YSwgaXNOb25Kc29uU2VyaWFsaXphYmxlLCBpc09jdGV0VHlwZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHR0cExpbmstQ1lPY0c5a1EubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/httpLink-CYOcG9kQ.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/httpUtils-Bkv1johT.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/httpUtils-Bkv1johT.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchHTTPResponse: () => (/* binding */ fetchHTTPResponse),\n/* harmony export */   getBody: () => (/* binding */ getBody),\n/* harmony export */   getFetch: () => (/* binding */ getFetch),\n/* harmony export */   getUrl: () => (/* binding */ getUrl),\n/* harmony export */   httpRequest: () => (/* binding */ httpRequest),\n/* harmony export */   jsonHttpRequester: () => (/* binding */ jsonHttpRequester),\n/* harmony export */   resolveHTTPLinkOptions: () => (/* binding */ resolveHTTPLinkOptions)\n/* harmony export */ });\n/* harmony import */ var _objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objectSpread2-BvkFp-_Y.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/objectSpread2-BvkFp-_Y.mjs\");\n/* harmony import */ var _unstable_internals_Bg7n9BBj_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./unstable-internals-Bg7n9BBj.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/unstable-internals-Bg7n9BBj.mjs\");\n\n\n\n//#region src/getFetch.ts\nconst isFunction = (fn) => typeof fn === \"function\";\nfunction getFetch(customFetchImpl) {\n\tif (customFetchImpl) return customFetchImpl;\n\tif (typeof window !== \"undefined\" && isFunction(window.fetch)) return window.fetch;\n\tif (typeof globalThis !== \"undefined\" && isFunction(globalThis.fetch)) return globalThis.fetch;\n\tthrow new Error(\"No fetch implementation found\");\n}\n\n//#endregion\n//#region src/links/internals/httpUtils.ts\nvar import_objectSpread2 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\nfunction resolveHTTPLinkOptions(opts) {\n\treturn {\n\t\turl: opts.url.toString(),\n\t\tfetch: opts.fetch,\n\t\ttransformer: (0,_unstable_internals_Bg7n9BBj_mjs__WEBPACK_IMPORTED_MODULE_1__.getTransformer)(opts.transformer),\n\t\tmethodOverride: opts.methodOverride\n\t};\n}\nfunction arrayToDict(array) {\n\tconst dict = {};\n\tfor (let index = 0; index < array.length; index++) {\n\t\tconst element = array[index];\n\t\tdict[index] = element;\n\t}\n\treturn dict;\n}\nconst METHOD = {\n\tquery: \"GET\",\n\tmutation: \"POST\",\n\tsubscription: \"PATCH\"\n};\nfunction getInput(opts) {\n\treturn \"input\" in opts ? opts.transformer.input.serialize(opts.input) : arrayToDict(opts.inputs.map((_input) => opts.transformer.input.serialize(_input)));\n}\nconst getUrl = (opts) => {\n\tconst parts = opts.url.split(\"?\");\n\tconst base = parts[0].replace(/\\/$/, \"\");\n\tlet url = base + \"/\" + opts.path;\n\tconst queryParts = [];\n\tif (parts[1]) queryParts.push(parts[1]);\n\tif (\"inputs\" in opts) queryParts.push(\"batch=1\");\n\tif (opts.type === \"query\" || opts.type === \"subscription\") {\n\t\tconst input = getInput(opts);\n\t\tif (input !== void 0 && opts.methodOverride !== \"POST\") queryParts.push(`input=${encodeURIComponent(JSON.stringify(input))}`);\n\t}\n\tif (queryParts.length) url += \"?\" + queryParts.join(\"&\");\n\treturn url;\n};\nconst getBody = (opts) => {\n\tif (opts.type === \"query\" && opts.methodOverride !== \"POST\") return void 0;\n\tconst input = getInput(opts);\n\treturn input !== void 0 ? JSON.stringify(input) : void 0;\n};\nconst jsonHttpRequester = (opts) => {\n\treturn httpRequest((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, {\n\t\tcontentTypeHeader: \"application/json\",\n\t\tgetUrl,\n\t\tgetBody\n\t}));\n};\n/**\n* Polyfill for DOMException with AbortError name\n*/\nvar AbortError = class extends Error {\n\tconstructor() {\n\t\tconst name = \"AbortError\";\n\t\tsuper(name);\n\t\tthis.name = name;\n\t\tthis.message = name;\n\t}\n};\n/**\n* Polyfill for `signal.throwIfAborted()`\n*\n* @see https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/throwIfAborted\n*/\nconst throwIfAborted = (signal) => {\n\tvar _signal$throwIfAborte;\n\tif (!(signal === null || signal === void 0 ? void 0 : signal.aborted)) return;\n\t(_signal$throwIfAborte = signal.throwIfAborted) === null || _signal$throwIfAborte === void 0 || _signal$throwIfAborte.call(signal);\n\tif (typeof DOMException !== \"undefined\") throw new DOMException(\"AbortError\", \"AbortError\");\n\tthrow new AbortError();\n};\nasync function fetchHTTPResponse(opts) {\n\tvar _opts$methodOverride;\n\tthrowIfAborted(opts.signal);\n\tconst url = opts.getUrl(opts);\n\tconst body = opts.getBody(opts);\n\tconst { type } = opts;\n\tconst resolvedHeaders = await (async () => {\n\t\tconst heads = await opts.headers();\n\t\tif (Symbol.iterator in heads) return Object.fromEntries(heads);\n\t\treturn heads;\n\t})();\n\tconst headers = (0, import_objectSpread2.default)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts.contentTypeHeader ? { \"content-type\": opts.contentTypeHeader } : {}), opts.trpcAcceptHeader ? { \"trpc-accept\": opts.trpcAcceptHeader } : void 0), resolvedHeaders);\n\treturn getFetch(opts.fetch)(url, {\n\t\tmethod: (_opts$methodOverride = opts.methodOverride) !== null && _opts$methodOverride !== void 0 ? _opts$methodOverride : METHOD[type],\n\t\tsignal: opts.signal,\n\t\tbody,\n\t\theaders\n\t});\n}\nasync function httpRequest(opts) {\n\tconst meta = {};\n\tconst res = await fetchHTTPResponse(opts);\n\tmeta.response = res;\n\tconst json = await res.json();\n\tmeta.responseJSON = json;\n\treturn {\n\t\tjson,\n\t\tmeta\n\t};\n}\n\n//#endregion\n\n//# sourceMappingURL=httpUtils-Bkv1johT.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvaHR0cFV0aWxzLUJrdjFqb2hULm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBOEU7QUFDWDs7QUFFbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsMkJBQTJCLG1FQUFPLENBQUMsaUZBQXFCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnRkFBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHNCQUFzQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1GQUFtRiwwQ0FBMEM7QUFDN0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRkFBMEYsV0FBVztBQUNyRztBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsT0FBTztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRix5SEFBeUgsNkJBQTZCLHlDQUF5QyxJQUFJLDZCQUE2Qix1Q0FBdUM7QUFDdlE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDZ0g7QUFDaEgiLCJzb3VyY2VzIjpbIi9Vc2Vycy9ibGFpbmVjb3dlbi9Eb2N1bWVudHMvUHJvamVjdHMvTkZMLVN0YXQtUXVlcnkvbm9kZV9tb2R1bGVzL0B0cnBjL2NsaWVudC9kaXN0L2h0dHBVdGlscy1Ca3Yxam9oVC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX190b0VTTSwgcmVxdWlyZV9vYmplY3RTcHJlYWQyIH0gZnJvbSBcIi4vb2JqZWN0U3ByZWFkMi1CdmtGcC1fWS5tanNcIjtcbmltcG9ydCB7IGdldFRyYW5zZm9ybWVyIH0gZnJvbSBcIi4vdW5zdGFibGUtaW50ZXJuYWxzLUJnN245QkJqLm1qc1wiO1xuXG4vLyNyZWdpb24gc3JjL2dldEZldGNoLnRzXG5jb25zdCBpc0Z1bmN0aW9uID0gKGZuKSA9PiB0eXBlb2YgZm4gPT09IFwiZnVuY3Rpb25cIjtcbmZ1bmN0aW9uIGdldEZldGNoKGN1c3RvbUZldGNoSW1wbCkge1xuXHRpZiAoY3VzdG9tRmV0Y2hJbXBsKSByZXR1cm4gY3VzdG9tRmV0Y2hJbXBsO1xuXHRpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpc0Z1bmN0aW9uKHdpbmRvdy5mZXRjaCkpIHJldHVybiB3aW5kb3cuZmV0Y2g7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpc0Z1bmN0aW9uKGdsb2JhbFRoaXMuZmV0Y2gpKSByZXR1cm4gZ2xvYmFsVGhpcy5mZXRjaDtcblx0dGhyb3cgbmV3IEVycm9yKFwiTm8gZmV0Y2ggaW1wbGVtZW50YXRpb24gZm91bmRcIik7XG59XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIHNyYy9saW5rcy9pbnRlcm5hbHMvaHR0cFV0aWxzLnRzXG52YXIgaW1wb3J0X29iamVjdFNwcmVhZDIgPSBfX3RvRVNNKHJlcXVpcmVfb2JqZWN0U3ByZWFkMigpLCAxKTtcbmZ1bmN0aW9uIHJlc29sdmVIVFRQTGlua09wdGlvbnMob3B0cykge1xuXHRyZXR1cm4ge1xuXHRcdHVybDogb3B0cy51cmwudG9TdHJpbmcoKSxcblx0XHRmZXRjaDogb3B0cy5mZXRjaCxcblx0XHR0cmFuc2Zvcm1lcjogZ2V0VHJhbnNmb3JtZXIob3B0cy50cmFuc2Zvcm1lciksXG5cdFx0bWV0aG9kT3ZlcnJpZGU6IG9wdHMubWV0aG9kT3ZlcnJpZGVcblx0fTtcbn1cbmZ1bmN0aW9uIGFycmF5VG9EaWN0KGFycmF5KSB7XG5cdGNvbnN0IGRpY3QgPSB7fTtcblx0Zm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGFycmF5Lmxlbmd0aDsgaW5kZXgrKykge1xuXHRcdGNvbnN0IGVsZW1lbnQgPSBhcnJheVtpbmRleF07XG5cdFx0ZGljdFtpbmRleF0gPSBlbGVtZW50O1xuXHR9XG5cdHJldHVybiBkaWN0O1xufVxuY29uc3QgTUVUSE9EID0ge1xuXHRxdWVyeTogXCJHRVRcIixcblx0bXV0YXRpb246IFwiUE9TVFwiLFxuXHRzdWJzY3JpcHRpb246IFwiUEFUQ0hcIlxufTtcbmZ1bmN0aW9uIGdldElucHV0KG9wdHMpIHtcblx0cmV0dXJuIFwiaW5wdXRcIiBpbiBvcHRzID8gb3B0cy50cmFuc2Zvcm1lci5pbnB1dC5zZXJpYWxpemUob3B0cy5pbnB1dCkgOiBhcnJheVRvRGljdChvcHRzLmlucHV0cy5tYXAoKF9pbnB1dCkgPT4gb3B0cy50cmFuc2Zvcm1lci5pbnB1dC5zZXJpYWxpemUoX2lucHV0KSkpO1xufVxuY29uc3QgZ2V0VXJsID0gKG9wdHMpID0+IHtcblx0Y29uc3QgcGFydHMgPSBvcHRzLnVybC5zcGxpdChcIj9cIik7XG5cdGNvbnN0IGJhc2UgPSBwYXJ0c1swXS5yZXBsYWNlKC9cXC8kLywgXCJcIik7XG5cdGxldCB1cmwgPSBiYXNlICsgXCIvXCIgKyBvcHRzLnBhdGg7XG5cdGNvbnN0IHF1ZXJ5UGFydHMgPSBbXTtcblx0aWYgKHBhcnRzWzFdKSBxdWVyeVBhcnRzLnB1c2gocGFydHNbMV0pO1xuXHRpZiAoXCJpbnB1dHNcIiBpbiBvcHRzKSBxdWVyeVBhcnRzLnB1c2goXCJiYXRjaD0xXCIpO1xuXHRpZiAob3B0cy50eXBlID09PSBcInF1ZXJ5XCIgfHwgb3B0cy50eXBlID09PSBcInN1YnNjcmlwdGlvblwiKSB7XG5cdFx0Y29uc3QgaW5wdXQgPSBnZXRJbnB1dChvcHRzKTtcblx0XHRpZiAoaW5wdXQgIT09IHZvaWQgMCAmJiBvcHRzLm1ldGhvZE92ZXJyaWRlICE9PSBcIlBPU1RcIikgcXVlcnlQYXJ0cy5wdXNoKGBpbnB1dD0ke2VuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShpbnB1dCkpfWApO1xuXHR9XG5cdGlmIChxdWVyeVBhcnRzLmxlbmd0aCkgdXJsICs9IFwiP1wiICsgcXVlcnlQYXJ0cy5qb2luKFwiJlwiKTtcblx0cmV0dXJuIHVybDtcbn07XG5jb25zdCBnZXRCb2R5ID0gKG9wdHMpID0+IHtcblx0aWYgKG9wdHMudHlwZSA9PT0gXCJxdWVyeVwiICYmIG9wdHMubWV0aG9kT3ZlcnJpZGUgIT09IFwiUE9TVFwiKSByZXR1cm4gdm9pZCAwO1xuXHRjb25zdCBpbnB1dCA9IGdldElucHV0KG9wdHMpO1xuXHRyZXR1cm4gaW5wdXQgIT09IHZvaWQgMCA/IEpTT04uc3RyaW5naWZ5KGlucHV0KSA6IHZvaWQgMDtcbn07XG5jb25zdCBqc29uSHR0cFJlcXVlc3RlciA9IChvcHRzKSA9PiB7XG5cdHJldHVybiBodHRwUmVxdWVzdCgoMCwgaW1wb3J0X29iamVjdFNwcmVhZDIuZGVmYXVsdCkoKDAsIGltcG9ydF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKHt9LCBvcHRzKSwge30sIHtcblx0XHRjb250ZW50VHlwZUhlYWRlcjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG5cdFx0Z2V0VXJsLFxuXHRcdGdldEJvZHlcblx0fSkpO1xufTtcbi8qKlxuKiBQb2x5ZmlsbCBmb3IgRE9NRXhjZXB0aW9uIHdpdGggQWJvcnRFcnJvciBuYW1lXG4qL1xudmFyIEFib3J0RXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0Y29uc3QgbmFtZSA9IFwiQWJvcnRFcnJvclwiO1xuXHRcdHN1cGVyKG5hbWUpO1xuXHRcdHRoaXMubmFtZSA9IG5hbWU7XG5cdFx0dGhpcy5tZXNzYWdlID0gbmFtZTtcblx0fVxufTtcbi8qKlxuKiBQb2x5ZmlsbCBmb3IgYHNpZ25hbC50aHJvd0lmQWJvcnRlZCgpYFxuKlxuKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9BYm9ydFNpZ25hbC90aHJvd0lmQWJvcnRlZFxuKi9cbmNvbnN0IHRocm93SWZBYm9ydGVkID0gKHNpZ25hbCkgPT4ge1xuXHR2YXIgX3NpZ25hbCR0aHJvd0lmQWJvcnRlO1xuXHRpZiAoIShzaWduYWwgPT09IG51bGwgfHwgc2lnbmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzaWduYWwuYWJvcnRlZCkpIHJldHVybjtcblx0KF9zaWduYWwkdGhyb3dJZkFib3J0ZSA9IHNpZ25hbC50aHJvd0lmQWJvcnRlZCkgPT09IG51bGwgfHwgX3NpZ25hbCR0aHJvd0lmQWJvcnRlID09PSB2b2lkIDAgfHwgX3NpZ25hbCR0aHJvd0lmQWJvcnRlLmNhbGwoc2lnbmFsKTtcblx0aWYgKHR5cGVvZiBET01FeGNlcHRpb24gIT09IFwidW5kZWZpbmVkXCIpIHRocm93IG5ldyBET01FeGNlcHRpb24oXCJBYm9ydEVycm9yXCIsIFwiQWJvcnRFcnJvclwiKTtcblx0dGhyb3cgbmV3IEFib3J0RXJyb3IoKTtcbn07XG5hc3luYyBmdW5jdGlvbiBmZXRjaEhUVFBSZXNwb25zZShvcHRzKSB7XG5cdHZhciBfb3B0cyRtZXRob2RPdmVycmlkZTtcblx0dGhyb3dJZkFib3J0ZWQob3B0cy5zaWduYWwpO1xuXHRjb25zdCB1cmwgPSBvcHRzLmdldFVybChvcHRzKTtcblx0Y29uc3QgYm9keSA9IG9wdHMuZ2V0Qm9keShvcHRzKTtcblx0Y29uc3QgeyB0eXBlIH0gPSBvcHRzO1xuXHRjb25zdCByZXNvbHZlZEhlYWRlcnMgPSBhd2FpdCAoYXN5bmMgKCkgPT4ge1xuXHRcdGNvbnN0IGhlYWRzID0gYXdhaXQgb3B0cy5oZWFkZXJzKCk7XG5cdFx0aWYgKFN5bWJvbC5pdGVyYXRvciBpbiBoZWFkcykgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhoZWFkcyk7XG5cdFx0cmV0dXJuIGhlYWRzO1xuXHR9KSgpO1xuXHRjb25zdCBoZWFkZXJzID0gKDAsIGltcG9ydF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKCgwLCBpbXBvcnRfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSgoMCwgaW1wb3J0X29iamVjdFNwcmVhZDIuZGVmYXVsdCkoe30sIG9wdHMuY29udGVudFR5cGVIZWFkZXIgPyB7IFwiY29udGVudC10eXBlXCI6IG9wdHMuY29udGVudFR5cGVIZWFkZXIgfSA6IHt9KSwgb3B0cy50cnBjQWNjZXB0SGVhZGVyID8geyBcInRycGMtYWNjZXB0XCI6IG9wdHMudHJwY0FjY2VwdEhlYWRlciB9IDogdm9pZCAwKSwgcmVzb2x2ZWRIZWFkZXJzKTtcblx0cmV0dXJuIGdldEZldGNoKG9wdHMuZmV0Y2gpKHVybCwge1xuXHRcdG1ldGhvZDogKF9vcHRzJG1ldGhvZE92ZXJyaWRlID0gb3B0cy5tZXRob2RPdmVycmlkZSkgIT09IG51bGwgJiYgX29wdHMkbWV0aG9kT3ZlcnJpZGUgIT09IHZvaWQgMCA/IF9vcHRzJG1ldGhvZE92ZXJyaWRlIDogTUVUSE9EW3R5cGVdLFxuXHRcdHNpZ25hbDogb3B0cy5zaWduYWwsXG5cdFx0Ym9keSxcblx0XHRoZWFkZXJzXG5cdH0pO1xufVxuYXN5bmMgZnVuY3Rpb24gaHR0cFJlcXVlc3Qob3B0cykge1xuXHRjb25zdCBtZXRhID0ge307XG5cdGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoSFRUUFJlc3BvbnNlKG9wdHMpO1xuXHRtZXRhLnJlc3BvbnNlID0gcmVzO1xuXHRjb25zdCBqc29uID0gYXdhaXQgcmVzLmpzb24oKTtcblx0bWV0YS5yZXNwb25zZUpTT04gPSBqc29uO1xuXHRyZXR1cm4ge1xuXHRcdGpzb24sXG5cdFx0bWV0YVxuXHR9O1xufVxuXG4vLyNlbmRyZWdpb25cbmV4cG9ydCB7IGZldGNoSFRUUFJlc3BvbnNlLCBnZXRCb2R5LCBnZXRGZXRjaCwgZ2V0VXJsLCBodHRwUmVxdWVzdCwganNvbkh0dHBSZXF1ZXN0ZXIsIHJlc29sdmVIVFRQTGlua09wdGlvbnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh0dHBVdGlscy1Ca3Yxam9oVC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/httpUtils-Bkv1johT.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@trpc/client/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCClientError: () => (/* reexport safe */ _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.TRPCClientError),\n/* harmony export */   TRPCUntypedClient: () => (/* binding */ TRPCUntypedClient),\n/* harmony export */   clientCallTypeToProcedureType: () => (/* binding */ clientCallTypeToProcedureType),\n/* harmony export */   createTRPCClient: () => (/* binding */ createTRPCClient),\n/* harmony export */   createTRPCClientProxy: () => (/* binding */ createTRPCClientProxy),\n/* harmony export */   createTRPCProxyClient: () => (/* binding */ createTRPCClient),\n/* harmony export */   createTRPCUntypedClient: () => (/* binding */ createTRPCUntypedClient),\n/* harmony export */   createWSClient: () => (/* reexport safe */ _wsLink_H5IjZfJW_mjs__WEBPACK_IMPORTED_MODULE_8__.createWSClient),\n/* harmony export */   experimental_localLink: () => (/* binding */ experimental_localLink),\n/* harmony export */   getFetch: () => (/* reexport safe */ _httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_3__.getFetch),\n/* harmony export */   getUntypedClient: () => (/* binding */ getUntypedClient),\n/* harmony export */   httpBatchLink: () => (/* reexport safe */ _httpBatchLink_CA96_gnJ_mjs__WEBPACK_IMPORTED_MODULE_5__.httpBatchLink),\n/* harmony export */   httpBatchStreamLink: () => (/* binding */ httpBatchStreamLink),\n/* harmony export */   httpLink: () => (/* reexport safe */ _httpLink_CYOcG9kQ_mjs__WEBPACK_IMPORTED_MODULE_4__.httpLink),\n/* harmony export */   httpSubscriptionLink: () => (/* binding */ httpSubscriptionLink),\n/* harmony export */   isFormData: () => (/* reexport safe */ _httpLink_CYOcG9kQ_mjs__WEBPACK_IMPORTED_MODULE_4__.isFormData),\n/* harmony export */   isNonJsonSerializable: () => (/* reexport safe */ _httpLink_CYOcG9kQ_mjs__WEBPACK_IMPORTED_MODULE_4__.isNonJsonSerializable),\n/* harmony export */   isOctetType: () => (/* reexport safe */ _httpLink_CYOcG9kQ_mjs__WEBPACK_IMPORTED_MODULE_4__.isOctetType),\n/* harmony export */   isTRPCClientError: () => (/* reexport safe */ _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.isTRPCClientError),\n/* harmony export */   loggerLink: () => (/* reexport safe */ _loggerLink_ineCN1PO_mjs__WEBPACK_IMPORTED_MODULE_7__.loggerLink),\n/* harmony export */   retryLink: () => (/* binding */ retryLink),\n/* harmony export */   splitLink: () => (/* reexport safe */ _splitLink_B7Cuf2c_mjs__WEBPACK_IMPORTED_MODULE_1__.splitLink),\n/* harmony export */   unstable_httpBatchStreamLink: () => (/* binding */ unstable_httpBatchStreamLink),\n/* harmony export */   unstable_httpSubscriptionLink: () => (/* binding */ unstable_httpSubscriptionLink),\n/* harmony export */   unstable_localLink: () => (/* binding */ unstable_localLink),\n/* harmony export */   wsLink: () => (/* reexport safe */ _wsLink_H5IjZfJW_mjs__WEBPACK_IMPORTED_MODULE_8__.wsLink)\n/* harmony export */ });\n/* harmony import */ var _objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objectSpread2-BvkFp-_Y.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/objectSpread2-BvkFp-_Y.mjs\");\n/* harmony import */ var _splitLink_B7Cuf2c_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./splitLink-B7Cuf2c_.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/splitLink-B7Cuf2c_.mjs\");\n/* harmony import */ var _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TRPCClientError-CjKyS10w.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-CjKyS10w.mjs\");\n/* harmony import */ var _httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpUtils-Bkv1johT.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpUtils-Bkv1johT.mjs\");\n/* harmony import */ var _httpLink_CYOcG9kQ_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./httpLink-CYOcG9kQ.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpLink-CYOcG9kQ.mjs\");\n/* harmony import */ var _httpBatchLink_CA96_gnJ_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./httpBatchLink-CA96-gnJ.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/httpBatchLink-CA96-gnJ.mjs\");\n/* harmony import */ var _unstable_internals_Bg7n9BBj_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./unstable-internals-Bg7n9BBj.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/unstable-internals-Bg7n9BBj.mjs\");\n/* harmony import */ var _loggerLink_ineCN1PO_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./loggerLink-ineCN1PO.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/loggerLink-ineCN1PO.mjs\");\n/* harmony import */ var _wsLink_H5IjZfJW_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./wsLink-H5IjZfJW.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/wsLink-H5IjZfJW.mjs\");\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable-CUiPknO-.mjs\");\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @trpc/server */ \"(ssr)/./node_modules/@trpc/server/dist/getErrorShape-Uhlrl4Bk.mjs\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @trpc/server/unstable-core-do-not-import */ \"(ssr)/./node_modules/@trpc/server/dist/resolveResponse-CzlbRpCI.mjs\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @trpc/server/rpc */ \"(ssr)/./node_modules/@trpc/server/dist/utils-DdbbrDku.mjs\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @trpc/server */ \"(ssr)/./node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//#region src/internals/TRPCUntypedClient.ts\nvar import_defineProperty = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_defineProperty)(), 1);\nvar import_objectSpread2$4 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\nvar TRPCUntypedClient = class {\n\tconstructor(opts) {\n\t\t(0, import_defineProperty.default)(this, \"links\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"runtime\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"requestId\", void 0);\n\t\tthis.requestId = 0;\n\t\tthis.runtime = {};\n\t\tthis.links = opts.links.map((link) => link(this.runtime));\n\t}\n\t$request(opts) {\n\t\tvar _opts$context;\n\t\tconst chain$ = (0,_splitLink_B7Cuf2c_mjs__WEBPACK_IMPORTED_MODULE_1__.createChain)({\n\t\t\tlinks: this.links,\n\t\t\top: (0, import_objectSpread2$4.default)((0, import_objectSpread2$4.default)({}, opts), {}, {\n\t\t\t\tcontext: (_opts$context = opts.context) !== null && _opts$context !== void 0 ? _opts$context : {},\n\t\t\t\tid: ++this.requestId\n\t\t\t})\n\t\t});\n\t\treturn chain$.pipe((0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_9__.share)());\n\t}\n\tasync requestAsPromise(opts) {\n\t\tvar _this = this;\n\t\ttry {\n\t\t\tconst req$ = _this.$request(opts);\n\t\t\tconst envelope = await (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_10__.observableToPromise)(req$);\n\t\t\tconst data = envelope.result.data;\n\t\t\treturn data;\n\t\t} catch (err) {\n\t\t\tthrow _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.TRPCClientError.from(err);\n\t\t}\n\t}\n\tquery(path, input, opts) {\n\t\treturn this.requestAsPromise({\n\t\t\ttype: \"query\",\n\t\t\tpath,\n\t\t\tinput,\n\t\t\tcontext: opts === null || opts === void 0 ? void 0 : opts.context,\n\t\t\tsignal: opts === null || opts === void 0 ? void 0 : opts.signal\n\t\t});\n\t}\n\tmutation(path, input, opts) {\n\t\treturn this.requestAsPromise({\n\t\t\ttype: \"mutation\",\n\t\t\tpath,\n\t\t\tinput,\n\t\t\tcontext: opts === null || opts === void 0 ? void 0 : opts.context,\n\t\t\tsignal: opts === null || opts === void 0 ? void 0 : opts.signal\n\t\t});\n\t}\n\tsubscription(path, input, opts) {\n\t\tconst observable$ = this.$request({\n\t\t\ttype: \"subscription\",\n\t\t\tpath,\n\t\t\tinput,\n\t\t\tcontext: opts.context,\n\t\t\tsignal: opts.signal\n\t\t});\n\t\treturn observable$.subscribe({\n\t\t\tnext(envelope) {\n\t\t\t\tswitch (envelope.result.type) {\n\t\t\t\t\tcase \"state\": {\n\t\t\t\t\t\tvar _opts$onConnectionSta;\n\t\t\t\t\t\t(_opts$onConnectionSta = opts.onConnectionStateChange) === null || _opts$onConnectionSta === void 0 || _opts$onConnectionSta.call(opts, envelope.result);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"started\": {\n\t\t\t\t\t\tvar _opts$onStarted;\n\t\t\t\t\t\t(_opts$onStarted = opts.onStarted) === null || _opts$onStarted === void 0 || _opts$onStarted.call(opts, { context: envelope.context });\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"stopped\": {\n\t\t\t\t\t\tvar _opts$onStopped;\n\t\t\t\t\t\t(_opts$onStopped = opts.onStopped) === null || _opts$onStopped === void 0 || _opts$onStopped.call(opts);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"data\":\n\t\t\t\t\tcase void 0: {\n\t\t\t\t\t\tvar _opts$onData;\n\t\t\t\t\t\t(_opts$onData = opts.onData) === null || _opts$onData === void 0 || _opts$onData.call(opts, envelope.result.data);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\terror(err) {\n\t\t\t\tvar _opts$onError;\n\t\t\t\t(_opts$onError = opts.onError) === null || _opts$onError === void 0 || _opts$onError.call(opts, err);\n\t\t\t},\n\t\t\tcomplete() {\n\t\t\t\tvar _opts$onComplete;\n\t\t\t\t(_opts$onComplete = opts.onComplete) === null || _opts$onComplete === void 0 || _opts$onComplete.call(opts);\n\t\t\t}\n\t\t});\n\t}\n};\n\n//#endregion\n//#region src/createTRPCUntypedClient.ts\nfunction createTRPCUntypedClient(opts) {\n\treturn new TRPCUntypedClient(opts);\n}\n\n//#endregion\n//#region src/createTRPCClient.ts\nconst untypedClientSymbol = Symbol.for(\"trpc_untypedClient\");\nconst clientCallTypeMap = {\n\tquery: \"query\",\n\tmutate: \"mutation\",\n\tsubscribe: \"subscription\"\n};\n/** @internal */\nconst clientCallTypeToProcedureType = (clientCallType) => {\n\treturn clientCallTypeMap[clientCallType];\n};\n/**\n* @internal\n*/\nfunction createTRPCClientProxy(client) {\n\tconst proxy = (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_11__.createRecursiveProxy)(({ path, args }) => {\n\t\tconst pathCopy = [...path];\n\t\tconst procedureType = clientCallTypeToProcedureType(pathCopy.pop());\n\t\tconst fullPath = pathCopy.join(\".\");\n\t\treturn client[procedureType](fullPath, ...args);\n\t});\n\treturn (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_11__.createFlatProxy)((key) => {\n\t\tif (key === untypedClientSymbol) return client;\n\t\treturn proxy[key];\n\t});\n}\nfunction createTRPCClient(opts) {\n\tconst client = new TRPCUntypedClient(opts);\n\tconst proxy = createTRPCClientProxy(client);\n\treturn proxy;\n}\n/**\n* Get an untyped client from a proxy client\n* @internal\n*/\nfunction getUntypedClient(client) {\n\treturn client[untypedClientSymbol];\n}\n\n//#endregion\n//#region src/links/httpBatchStreamLink.ts\nvar import_objectSpread2$3 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\n/**\n* @see https://trpc.io/docs/client/links/httpBatchStreamLink\n*/\nfunction httpBatchStreamLink(opts) {\n\tvar _opts$maxURLLength, _opts$maxItems;\n\tconst resolvedOpts = (0,_httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_3__.resolveHTTPLinkOptions)(opts);\n\tconst maxURLLength = (_opts$maxURLLength = opts.maxURLLength) !== null && _opts$maxURLLength !== void 0 ? _opts$maxURLLength : Infinity;\n\tconst maxItems = (_opts$maxItems = opts.maxItems) !== null && _opts$maxItems !== void 0 ? _opts$maxItems : Infinity;\n\treturn () => {\n\t\tconst batchLoader = (type) => {\n\t\t\treturn {\n\t\t\t\tvalidate(batchOps) {\n\t\t\t\t\tif (maxURLLength === Infinity && maxItems === Infinity) return true;\n\t\t\t\t\tif (batchOps.length > maxItems) return false;\n\t\t\t\t\tconst path = batchOps.map((op) => op.path).join(\",\");\n\t\t\t\t\tconst inputs = batchOps.map((op) => op.input);\n\t\t\t\t\tconst url = (0,_httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_3__.getUrl)((0, import_objectSpread2$3.default)((0, import_objectSpread2$3.default)({}, resolvedOpts), {}, {\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tinputs,\n\t\t\t\t\t\tsignal: null\n\t\t\t\t\t}));\n\t\t\t\t\treturn url.length <= maxURLLength;\n\t\t\t\t},\n\t\t\t\tasync fetch(batchOps) {\n\t\t\t\t\tconst path = batchOps.map((op) => op.path).join(\",\");\n\t\t\t\t\tconst inputs = batchOps.map((op) => op.input);\n\t\t\t\t\tconst batchSignals = (0,_httpBatchLink_CA96_gnJ_mjs__WEBPACK_IMPORTED_MODULE_5__.allAbortSignals)(...batchOps.map((op) => op.signal));\n\t\t\t\t\tconst abortController = new AbortController();\n\t\t\t\t\tconst responsePromise = (0,_httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_3__.fetchHTTPResponse)((0, import_objectSpread2$3.default)((0, import_objectSpread2$3.default)({}, resolvedOpts), {}, {\n\t\t\t\t\t\tsignal: (0,_httpBatchLink_CA96_gnJ_mjs__WEBPACK_IMPORTED_MODULE_5__.raceAbortSignals)(batchSignals, abortController.signal),\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tcontentTypeHeader: \"application/json\",\n\t\t\t\t\t\ttrpcAcceptHeader: \"application/jsonl\",\n\t\t\t\t\t\tgetUrl: _httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_3__.getUrl,\n\t\t\t\t\t\tgetBody: _httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_3__.getBody,\n\t\t\t\t\t\tinputs,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\theaders() {\n\t\t\t\t\t\t\tif (!opts.headers) return {};\n\t\t\t\t\t\t\tif (typeof opts.headers === \"function\") return opts.headers({ opList: batchOps });\n\t\t\t\t\t\t\treturn opts.headers;\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\tconst res = await responsePromise;\n\t\t\t\t\tconst [head] = await (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_12__.jsonlStreamConsumer)({\n\t\t\t\t\t\tfrom: res.body,\n\t\t\t\t\t\tdeserialize: resolvedOpts.transformer.output.deserialize,\n\t\t\t\t\t\tformatError(opts$1) {\n\t\t\t\t\t\t\tconst error = opts$1.error;\n\t\t\t\t\t\t\treturn _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.TRPCClientError.from({ error });\n\t\t\t\t\t\t},\n\t\t\t\t\t\tabortController\n\t\t\t\t\t});\n\t\t\t\t\tconst promises = Object.keys(batchOps).map(async (key) => {\n\t\t\t\t\t\tlet json = await Promise.resolve(head[key]);\n\t\t\t\t\t\tif (\"result\" in json) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t* Not very pretty, but we need to unwrap nested data as promises\n\t\t\t\t\t\t\t* Our stream producer will only resolve top-level async values or async values that are directly nested in another async value\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tconst result = await Promise.resolve(json.result);\n\t\t\t\t\t\t\tjson = { result: { data: await Promise.resolve(result.data) } };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tjson,\n\t\t\t\t\t\t\tmeta: { response: res }\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t\treturn promises;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst query = (0,_httpBatchLink_CA96_gnJ_mjs__WEBPACK_IMPORTED_MODULE_5__.dataLoader)(batchLoader(\"query\"));\n\t\tconst mutation = (0,_httpBatchLink_CA96_gnJ_mjs__WEBPACK_IMPORTED_MODULE_5__.dataLoader)(batchLoader(\"mutation\"));\n\t\tconst loaders = {\n\t\t\tquery,\n\t\t\tmutation\n\t\t};\n\t\treturn ({ op }) => {\n\t\t\treturn (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_10__.observable)((observer) => {\n\t\t\t\t/* istanbul ignore if -- @preserve */\n\t\t\t\tif (op.type === \"subscription\") throw new Error(\"Subscriptions are unsupported by `httpBatchStreamLink` - use `httpSubscriptionLink` or `wsLink`\");\n\t\t\t\tconst loader = loaders[op.type];\n\t\t\t\tconst promise = loader.load(op);\n\t\t\t\tlet _res = void 0;\n\t\t\t\tpromise.then((res) => {\n\t\t\t\t\t_res = res;\n\t\t\t\t\tif (\"error\" in res.json) {\n\t\t\t\t\t\tobserver.error(_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.TRPCClientError.from(res.json, { meta: res.meta }));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (\"result\" in res.json) {\n\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\tcontext: res.meta,\n\t\t\t\t\t\t\tresult: res.json.result\n\t\t\t\t\t\t});\n\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tobserver.complete();\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tobserver.error(_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.TRPCClientError.from(err, { meta: _res === null || _res === void 0 ? void 0 : _res.meta }));\n\t\t\t\t});\n\t\t\t\treturn () => {};\n\t\t\t});\n\t\t};\n\t};\n}\n/**\n* @deprecated use {@link httpBatchStreamLink} instead\n*/\nconst unstable_httpBatchStreamLink = httpBatchStreamLink;\n\n//#endregion\n//#region src/internals/inputWithTrackedEventId.ts\nvar import_objectSpread2$2 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\nfunction inputWithTrackedEventId(input, lastEventId) {\n\tif (!lastEventId) return input;\n\tif (input != null && typeof input !== \"object\") return input;\n\treturn (0, import_objectSpread2$2.default)((0, import_objectSpread2$2.default)({}, input !== null && input !== void 0 ? input : {}), {}, { lastEventId });\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncIterator.js\nvar require_asyncIterator = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncIterator.js\"(exports, module) {\n\tfunction _asyncIterator$1(r) {\n\t\tvar n, t, o, e = 2;\n\t\tfor (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n\t\t\tif (t && null != (n = r[t])) return n.call(r);\n\t\t\tif (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n\t\t\tt = \"@@asyncIterator\", o = \"@@iterator\";\n\t\t}\n\t\tthrow new TypeError(\"Object is not async iterable\");\n\t}\n\tfunction AsyncFromSyncIterator(r) {\n\t\tfunction AsyncFromSyncIteratorContinuation(r$1) {\n\t\t\tif (Object(r$1) !== r$1) return Promise.reject(new TypeError(r$1 + \" is not an object.\"));\n\t\t\tvar n = r$1.done;\n\t\t\treturn Promise.resolve(r$1.value).then(function(r$2) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: r$2,\n\t\t\t\t\tdone: n\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn AsyncFromSyncIterator = function AsyncFromSyncIterator$1(r$1) {\n\t\t\tthis.s = r$1, this.n = r$1.next;\n\t\t}, AsyncFromSyncIterator.prototype = {\n\t\t\ts: null,\n\t\t\tn: null,\n\t\t\tnext: function next() {\n\t\t\t\treturn AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n\t\t\t},\n\t\t\t\"return\": function _return(r$1) {\n\t\t\t\tvar n = this.s[\"return\"];\n\t\t\t\treturn void 0 === n ? Promise.resolve({\n\t\t\t\t\tvalue: r$1,\n\t\t\t\t\tdone: !0\n\t\t\t\t}) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n\t\t\t},\n\t\t\t\"throw\": function _throw(r$1) {\n\t\t\t\tvar n = this.s[\"return\"];\n\t\t\t\treturn void 0 === n ? Promise.reject(r$1) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n\t\t\t}\n\t\t}, new AsyncFromSyncIterator(r);\n\t}\n\tmodule.exports = _asyncIterator$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/links/httpSubscriptionLink.ts\nvar import_asyncIterator = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)(require_asyncIterator(), 1);\nasync function urlWithConnectionParams(opts) {\n\tlet url = await (0,_wsLink_H5IjZfJW_mjs__WEBPACK_IMPORTED_MODULE_8__.resultOf)(opts.url);\n\tif (opts.connectionParams) {\n\t\tconst params = await (0,_wsLink_H5IjZfJW_mjs__WEBPACK_IMPORTED_MODULE_8__.resultOf)(opts.connectionParams);\n\t\tconst prefix = url.includes(\"?\") ? \"&\" : \"?\";\n\t\turl += prefix + \"connectionParams=\" + encodeURIComponent(JSON.stringify(params));\n\t}\n\treturn url;\n}\n/**\n* @see https://trpc.io/docs/client/links/httpSubscriptionLink\n*/\nfunction httpSubscriptionLink(opts) {\n\tconst transformer = (0,_unstable_internals_Bg7n9BBj_mjs__WEBPACK_IMPORTED_MODULE_6__.getTransformer)(opts.transformer);\n\treturn () => {\n\t\treturn ({ op }) => {\n\t\t\treturn (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_10__.observable)((observer) => {\n\t\t\t\tvar _opts$EventSource;\n\t\t\t\tconst { type, path, input } = op;\n\t\t\t\t/* istanbul ignore if -- @preserve */\n\t\t\t\tif (type !== \"subscription\") throw new Error(\"httpSubscriptionLink only supports subscriptions\");\n\t\t\t\tlet lastEventId = void 0;\n\t\t\t\tconst ac = new AbortController();\n\t\t\t\tconst signal = (0,_httpBatchLink_CA96_gnJ_mjs__WEBPACK_IMPORTED_MODULE_5__.raceAbortSignals)(op.signal, ac.signal);\n\t\t\t\tconst eventSourceStream = (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_12__.sseStreamConsumer)({\n\t\t\t\t\turl: async () => (0,_httpUtils_Bkv1johT_mjs__WEBPACK_IMPORTED_MODULE_3__.getUrl)({\n\t\t\t\t\t\ttransformer,\n\t\t\t\t\t\turl: await urlWithConnectionParams(opts),\n\t\t\t\t\t\tinput: inputWithTrackedEventId(input, lastEventId),\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tsignal: null\n\t\t\t\t\t}),\n\t\t\t\t\tinit: () => (0,_wsLink_H5IjZfJW_mjs__WEBPACK_IMPORTED_MODULE_8__.resultOf)(opts.eventSourceOptions, { op }),\n\t\t\t\t\tsignal,\n\t\t\t\t\tdeserialize: transformer.output.deserialize,\n\t\t\t\t\tEventSource: (_opts$EventSource = opts.EventSource) !== null && _opts$EventSource !== void 0 ? _opts$EventSource : globalThis.EventSource\n\t\t\t\t});\n\t\t\t\tconst connectionState = (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_9__.behaviorSubject)({\n\t\t\t\t\ttype: \"state\",\n\t\t\t\t\tstate: \"connecting\",\n\t\t\t\t\terror: null\n\t\t\t\t});\n\t\t\t\tconst connectionSub = connectionState.subscribe({ next(state) {\n\t\t\t\t\tobserver.next({ result: state });\n\t\t\t\t} });\n\t\t\t\t(0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_13__.run)(async () => {\n\t\t\t\t\tvar _iteratorAbruptCompletion = false;\n\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\tvar _iteratorError;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (var _iterator = (0, import_asyncIterator.default)(eventSourceStream), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n\t\t\t\t\t\t\tconst chunk = _step.value;\n\t\t\t\t\t\t\tswitch (chunk.type) {\n\t\t\t\t\t\t\t\tcase \"ping\": break;\n\t\t\t\t\t\t\t\tcase \"data\":\n\t\t\t\t\t\t\t\t\tconst chunkData = chunk.data;\n\t\t\t\t\t\t\t\t\tlet result;\n\t\t\t\t\t\t\t\t\tif (chunkData.id) {\n\t\t\t\t\t\t\t\t\t\tlastEventId = chunkData.id;\n\t\t\t\t\t\t\t\t\t\tresult = {\n\t\t\t\t\t\t\t\t\t\t\tid: chunkData.id,\n\t\t\t\t\t\t\t\t\t\t\tdata: chunkData\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else result = { data: chunkData.data };\n\t\t\t\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\t\t\tcontext: { eventSource: chunk.eventSource }\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"connected\": {\n\t\t\t\t\t\t\t\t\tobserver.next({\n\t\t\t\t\t\t\t\t\t\tresult: { type: \"started\" },\n\t\t\t\t\t\t\t\t\t\tcontext: { eventSource: chunk.eventSource }\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tconnectionState.next({\n\t\t\t\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\t\t\t\tstate: \"pending\",\n\t\t\t\t\t\t\t\t\t\terror: null\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase \"serialized-error\": {\n\t\t\t\t\t\t\t\t\tconst error = _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.TRPCClientError.from({ error: chunk.error });\n\t\t\t\t\t\t\t\t\tif (_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_13__.retryableRpcCodes.includes(chunk.error.code)) {\n\t\t\t\t\t\t\t\t\t\tconnectionState.next({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\t\t\t\t\tstate: \"connecting\",\n\t\t\t\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase \"connecting\": {\n\t\t\t\t\t\t\t\t\tconst lastState = connectionState.get();\n\t\t\t\t\t\t\t\t\tconst error = chunk.event && _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.TRPCClientError.from(chunk.event);\n\t\t\t\t\t\t\t\t\tif (!error && lastState.state === \"connecting\") break;\n\t\t\t\t\t\t\t\t\tconnectionState.next({\n\t\t\t\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\t\t\t\tstate: \"connecting\",\n\t\t\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase \"timeout\": connectionState.next({\n\t\t\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\t\t\tstate: \"connecting\",\n\t\t\t\t\t\t\t\t\terror: new _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.TRPCClientError(`Timeout of ${chunk.ms}ms reached while waiting for a response`)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (_iteratorAbruptCompletion && _iterator.return != null) await _iterator.return();\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (_didIteratorError) throw _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tobserver.next({ result: { type: \"stopped\" } });\n\t\t\t\t\tconnectionState.next({\n\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\tstate: \"idle\",\n\t\t\t\t\t\terror: null\n\t\t\t\t\t});\n\t\t\t\t\tobserver.complete();\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tobserver.error(_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.TRPCClientError.from(error));\n\t\t\t\t});\n\t\t\t\treturn () => {\n\t\t\t\t\tobserver.complete();\n\t\t\t\t\tac.abort();\n\t\t\t\t\tconnectionSub.unsubscribe();\n\t\t\t\t};\n\t\t\t});\n\t\t};\n\t};\n}\n/**\n* @deprecated use {@link httpSubscriptionLink} instead\n*/\nconst unstable_httpSubscriptionLink = httpSubscriptionLink;\n\n//#endregion\n//#region src/links/retryLink.ts\nvar import_objectSpread2$1 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\n/**\n* @see https://trpc.io/docs/v11/client/links/retryLink\n*/\nfunction retryLink(opts) {\n\treturn () => {\n\t\treturn (callOpts) => {\n\t\t\treturn (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_10__.observable)((observer) => {\n\t\t\t\tlet next$;\n\t\t\t\tlet callNextTimeout = void 0;\n\t\t\t\tlet lastEventId = void 0;\n\t\t\t\tattempt(1);\n\t\t\t\tfunction opWithLastEventId() {\n\t\t\t\t\tconst op = callOpts.op;\n\t\t\t\t\tif (!lastEventId) return op;\n\t\t\t\t\treturn (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, op), {}, { input: inputWithTrackedEventId(op.input, lastEventId) });\n\t\t\t\t}\n\t\t\t\tfunction attempt(attempts) {\n\t\t\t\t\tconst op = opWithLastEventId();\n\t\t\t\t\tnext$ = callOpts.next(op).subscribe({\n\t\t\t\t\t\terror(error) {\n\t\t\t\t\t\t\tvar _opts$retryDelayMs, _opts$retryDelayMs2;\n\t\t\t\t\t\t\tconst shouldRetry = opts.retry({\n\t\t\t\t\t\t\t\top,\n\t\t\t\t\t\t\t\tattempts,\n\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (!shouldRetry) {\n\t\t\t\t\t\t\t\tobserver.error(error);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst delayMs = (_opts$retryDelayMs = (_opts$retryDelayMs2 = opts.retryDelayMs) === null || _opts$retryDelayMs2 === void 0 ? void 0 : _opts$retryDelayMs2.call(opts, attempts)) !== null && _opts$retryDelayMs !== void 0 ? _opts$retryDelayMs : 0;\n\t\t\t\t\t\t\tif (delayMs <= 0) {\n\t\t\t\t\t\t\t\tattempt(attempts + 1);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallNextTimeout = setTimeout(() => attempt(attempts + 1), delayMs);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnext(envelope) {\n\t\t\t\t\t\t\tif ((!envelope.result.type || envelope.result.type === \"data\") && envelope.result.id) lastEventId = envelope.result.id;\n\t\t\t\t\t\t\tobserver.next(envelope);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplete() {\n\t\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn () => {\n\t\t\t\t\tnext$.unsubscribe();\n\t\t\t\t\tclearTimeout(callNextTimeout);\n\t\t\t\t};\n\t\t\t});\n\t\t};\n\t};\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/usingCtx.js\nvar require_usingCtx = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/usingCtx.js\"(exports, module) {\n\tfunction _usingCtx() {\n\t\tvar r = \"function\" == typeof SuppressedError ? SuppressedError : function(r$1, e$1) {\n\t\t\tvar n$1 = Error();\n\t\t\treturn n$1.name = \"SuppressedError\", n$1.error = r$1, n$1.suppressed = e$1, n$1;\n\t\t}, e = {}, n = [];\n\t\tfunction using(r$1, e$1) {\n\t\t\tif (null != e$1) {\n\t\t\t\tif (Object(e$1) !== e$1) throw new TypeError(\"using declarations can only be used with objects, functions, null, or undefined.\");\n\t\t\t\tif (r$1) var o = e$1[Symbol.asyncDispose || Symbol[\"for\"](\"Symbol.asyncDispose\")];\n\t\t\t\tif (void 0 === o && (o = e$1[Symbol.dispose || Symbol[\"for\"](\"Symbol.dispose\")], r$1)) var t = o;\n\t\t\t\tif (\"function\" != typeof o) throw new TypeError(\"Object is not disposable.\");\n\t\t\t\tt && (o = function o$1() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tt.call(e$1);\n\t\t\t\t\t} catch (r$2) {\n\t\t\t\t\t\treturn Promise.reject(r$2);\n\t\t\t\t\t}\n\t\t\t\t}), n.push({\n\t\t\t\t\tv: e$1,\n\t\t\t\t\td: o,\n\t\t\t\t\ta: r$1\n\t\t\t\t});\n\t\t\t} else r$1 && n.push({\n\t\t\t\td: e$1,\n\t\t\t\ta: r$1\n\t\t\t});\n\t\t\treturn e$1;\n\t\t}\n\t\treturn {\n\t\t\te,\n\t\t\tu: using.bind(null, !1),\n\t\t\ta: using.bind(null, !0),\n\t\t\td: function d() {\n\t\t\t\tvar o, t = this.e, s = 0;\n\t\t\t\tfunction next() {\n\t\t\t\t\tfor (; o = n.pop();) try {\n\t\t\t\t\t\tif (!o.a && 1 === s) return s = 0, n.push(o), Promise.resolve().then(next);\n\t\t\t\t\t\tif (o.d) {\n\t\t\t\t\t\t\tvar r$1 = o.d.call(o.v);\n\t\t\t\t\t\t\tif (o.a) return s |= 2, Promise.resolve(r$1).then(next, err);\n\t\t\t\t\t\t} else s |= 1;\n\t\t\t\t\t} catch (r$2) {\n\t\t\t\t\t\treturn err(r$2);\n\t\t\t\t\t}\n\t\t\t\t\tif (1 === s) return t !== e ? Promise.reject(t) : Promise.resolve();\n\t\t\t\t\tif (t !== e) throw t;\n\t\t\t\t}\n\t\t\t\tfunction err(n$1) {\n\t\t\t\t\treturn t = t !== e ? new r(n$1, t) : n$1, next();\n\t\t\t\t}\n\t\t\t\treturn next();\n\t\t\t}\n\t\t};\n\t}\n\tmodule.exports = _usingCtx, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/OverloadYield.js\nvar require_OverloadYield = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/OverloadYield.js\"(exports, module) {\n\tfunction _OverloadYield(e, d) {\n\t\tthis.v = e, this.k = d;\n\t}\n\tmodule.exports = _OverloadYield, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/awaitAsyncGenerator.js\nvar require_awaitAsyncGenerator = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/awaitAsyncGenerator.js\"(exports, module) {\n\tvar OverloadYield$1 = require_OverloadYield();\n\tfunction _awaitAsyncGenerator$1(e) {\n\t\treturn new OverloadYield$1(e, 0);\n\t}\n\tmodule.exports = _awaitAsyncGenerator$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/wrapAsyncGenerator.js\nvar require_wrapAsyncGenerator = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/wrapAsyncGenerator.js\"(exports, module) {\n\tvar OverloadYield = require_OverloadYield();\n\tfunction _wrapAsyncGenerator$1(e) {\n\t\treturn function() {\n\t\t\treturn new AsyncGenerator(e.apply(this, arguments));\n\t\t};\n\t}\n\tfunction AsyncGenerator(e) {\n\t\tvar r, t;\n\t\tfunction resume(r$1, t$1) {\n\t\t\ttry {\n\t\t\t\tvar n = e[r$1](t$1), o = n.value, u = o instanceof OverloadYield;\n\t\t\t\tPromise.resolve(u ? o.v : o).then(function(t$2) {\n\t\t\t\t\tif (u) {\n\t\t\t\t\t\tvar i = \"return\" === r$1 ? \"return\" : \"next\";\n\t\t\t\t\t\tif (!o.k || t$2.done) return resume(i, t$2);\n\t\t\t\t\t\tt$2 = e[i](t$2).value;\n\t\t\t\t\t}\n\t\t\t\t\tsettle(n.done ? \"return\" : \"normal\", t$2);\n\t\t\t\t}, function(e$1) {\n\t\t\t\t\tresume(\"throw\", e$1);\n\t\t\t\t});\n\t\t\t} catch (e$1) {\n\t\t\t\tsettle(\"throw\", e$1);\n\t\t\t}\n\t\t}\n\t\tfunction settle(e$1, n) {\n\t\t\tswitch (e$1) {\n\t\t\t\tcase \"return\":\n\t\t\t\t\tr.resolve({\n\t\t\t\t\t\tvalue: n,\n\t\t\t\t\t\tdone: !0\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"throw\":\n\t\t\t\t\tr.reject(n);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: r.resolve({\n\t\t\t\t\tvalue: n,\n\t\t\t\t\tdone: !1\n\t\t\t\t});\n\t\t\t}\n\t\t\t(r = r.next) ? resume(r.key, r.arg) : t = null;\n\t\t}\n\t\tthis._invoke = function(e$1, n) {\n\t\t\treturn new Promise(function(o, u) {\n\t\t\t\tvar i = {\n\t\t\t\t\tkey: e$1,\n\t\t\t\t\targ: n,\n\t\t\t\t\tresolve: o,\n\t\t\t\t\treject: u,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\t\tt ? t = t.next = i : (r = t = i, resume(e$1, n));\n\t\t\t});\n\t\t}, \"function\" != typeof e[\"return\"] && (this[\"return\"] = void 0);\n\t}\n\tAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function() {\n\t\treturn this;\n\t}, AsyncGenerator.prototype.next = function(e) {\n\t\treturn this._invoke(\"next\", e);\n\t}, AsyncGenerator.prototype[\"throw\"] = function(e) {\n\t\treturn this._invoke(\"throw\", e);\n\t}, AsyncGenerator.prototype[\"return\"] = function(e) {\n\t\treturn this._invoke(\"return\", e);\n\t};\n\tmodule.exports = _wrapAsyncGenerator$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/links/localLink.ts\nvar import_usingCtx = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)(require_usingCtx(), 1);\nvar import_awaitAsyncGenerator = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)(require_awaitAsyncGenerator(), 1);\nvar import_wrapAsyncGenerator = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)(require_wrapAsyncGenerator(), 1);\nvar import_objectSpread2 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\n/**\n* localLink is a terminating link that allows you to make tRPC procedure calls directly in your application without going through HTTP.\n*\n* @see https://trpc.io/docs/links/localLink\n*/\nfunction unstable_localLink(opts) {\n\tconst transformer = (0,_unstable_internals_Bg7n9BBj_mjs__WEBPACK_IMPORTED_MODULE_6__.getTransformer)(opts.transformer);\n\tconst transformChunk = (chunk) => {\n\t\tif (opts.transformer) return chunk;\n\t\tif (chunk === void 0) return chunk;\n\t\tconst serialized = JSON.stringify(transformer.input.serialize(chunk));\n\t\tconst deserialized = JSON.parse(transformer.output.deserialize(serialized));\n\t\treturn deserialized;\n\t};\n\treturn () => ({ op }) => (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_10__.observable)((observer) => {\n\t\tlet ctx = void 0;\n\t\tconst ac = new AbortController();\n\t\tconst signal = (0,_httpBatchLink_CA96_gnJ_mjs__WEBPACK_IMPORTED_MODULE_5__.raceAbortSignals)(op.signal, ac.signal);\n\t\tconst signalPromise = (0,_httpBatchLink_CA96_gnJ_mjs__WEBPACK_IMPORTED_MODULE_5__.abortSignalToPromise)(signal);\n\t\tsignalPromise.catch(() => {});\n\t\tlet input = op.input;\n\t\tasync function runProcedure(newInput) {\n\t\t\tinput = newInput;\n\t\t\tctx = await opts.createContext();\n\t\t\treturn (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_14__.callProcedure)({\n\t\t\t\trouter: opts.router,\n\t\t\t\tpath: op.path,\n\t\t\t\tgetRawInput: async () => newInput,\n\t\t\t\tctx,\n\t\t\t\ttype: op.type,\n\t\t\t\tsignal\n\t\t\t});\n\t\t}\n\t\tfunction onErrorCallback(cause) {\n\t\t\tvar _opts$onError;\n\t\t\tif ((0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_12__.isAbortError)(cause)) return;\n\t\t\t(_opts$onError = opts.onError) === null || _opts$onError === void 0 || _opts$onError.call(opts, {\n\t\t\t\terror: (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_14__.getTRPCErrorFromUnknown)(cause),\n\t\t\t\ttype: op.type,\n\t\t\t\tpath: op.path,\n\t\t\t\tinput,\n\t\t\t\tctx\n\t\t\t});\n\t\t}\n\t\tfunction coerceToTRPCClientError(cause) {\n\t\t\tif ((0,_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.isTRPCClientError)(cause)) return cause;\n\t\t\tconst error = (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_14__.getTRPCErrorFromUnknown)(cause);\n\t\t\tconst shape = (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_11__.getErrorShape)({\n\t\t\t\tconfig: opts.router._def._config,\n\t\t\t\tctx,\n\t\t\t\terror,\n\t\t\t\tinput,\n\t\t\t\tpath: op.path,\n\t\t\t\ttype: op.type\n\t\t\t});\n\t\t\treturn _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_2__.TRPCClientError.from({ error: transformChunk(shape) });\n\t\t}\n\t\t(0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_13__.run)(async () => {\n\t\t\tswitch (op.type) {\n\t\t\t\tcase \"query\":\n\t\t\t\tcase \"mutation\": {\n\t\t\t\t\tconst result = await runProcedure(op.input);\n\t\t\t\t\tif (!(0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_13__.isAsyncIterable)(result)) {\n\t\t\t\t\t\tobserver.next({ result: { data: transformChunk(result) } });\n\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tobserver.next({ result: { data: (0, import_wrapAsyncGenerator.default)(function* () {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar _usingCtx$1 = (0, import_usingCtx.default)();\n\t\t\t\t\t\t\tconst iterator = _usingCtx$1.a((0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_12__.iteratorResource)(result));\n\t\t\t\t\t\t\tconst _finally = _usingCtx$1.u((0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_12__.makeResource)({}, () => {\n\t\t\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\t\tconst res = yield (0, import_awaitAsyncGenerator.default)(Promise.race([iterator.next(), signalPromise]));\n\t\t\t\t\t\t\t\t\tif (res.done) return transformChunk(res.value);\n\t\t\t\t\t\t\t\t\tyield transformChunk(res.value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (cause) {\n\t\t\t\t\t\t\t\tonErrorCallback(cause);\n\t\t\t\t\t\t\t\tthrow coerceToTRPCClientError(cause);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (_) {\n\t\t\t\t\t\t\t_usingCtx$1.e = _;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tyield (0, import_awaitAsyncGenerator.default)(_usingCtx$1.d());\n\t\t\t\t\t\t}\n\t\t\t\t\t})() } });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"subscription\": try {\n\t\t\t\t\tvar _usingCtx3 = (0, import_usingCtx.default)();\n\t\t\t\t\tconst connectionState = (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_9__.behaviorSubject)({\n\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\tstate: \"connecting\",\n\t\t\t\t\t\terror: null\n\t\t\t\t\t});\n\t\t\t\t\tconst connectionSub = connectionState.subscribe({ next(state) {\n\t\t\t\t\t\tobserver.next({ result: state });\n\t\t\t\t\t} });\n\t\t\t\t\tlet lastEventId = void 0;\n\t\t\t\t\tconst _finally = _usingCtx3.u((0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_12__.makeResource)({}, async () => {\n\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t\tconnectionState.next({\n\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\tstate: \"idle\",\n\t\t\t\t\t\t\terror: null\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconnectionSub.unsubscribe();\n\t\t\t\t\t}));\n\t\t\t\t\twhile (true) try {\n\t\t\t\t\t\tvar _usingCtx4 = (0, import_usingCtx.default)();\n\t\t\t\t\t\tconst result = await runProcedure(inputWithTrackedEventId(op.input, lastEventId));\n\t\t\t\t\t\tif (!(0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_13__.isAsyncIterable)(result)) throw new Error(\"Expected an async iterable\");\n\t\t\t\t\t\tconst iterator = _usingCtx4.a((0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_12__.iteratorResource)(result));\n\t\t\t\t\t\tobserver.next({ result: { type: \"started\" } });\n\t\t\t\t\t\tconnectionState.next({\n\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\tstate: \"pending\",\n\t\t\t\t\t\t\terror: null\n\t\t\t\t\t\t});\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tlet res;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tres = await Promise.race([iterator.next(), signalPromise]);\n\t\t\t\t\t\t\t} catch (cause) {\n\t\t\t\t\t\t\t\tif ((0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_12__.isAbortError)(cause)) return;\n\t\t\t\t\t\t\t\tconst error = (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_14__.getTRPCErrorFromUnknown)(cause);\n\t\t\t\t\t\t\t\tif (!_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_13__.retryableRpcCodes.includes(_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_13__.TRPC_ERROR_CODES_BY_KEY[error.code])) throw coerceToTRPCClientError(error);\n\t\t\t\t\t\t\t\tonErrorCallback(error);\n\t\t\t\t\t\t\t\tconnectionState.next({\n\t\t\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\t\t\tstate: \"connecting\",\n\t\t\t\t\t\t\t\t\terror: coerceToTRPCClientError(error)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (res.done) return;\n\t\t\t\t\t\t\tlet chunk;\n\t\t\t\t\t\t\tif ((0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_14__.isTrackedEnvelope)(res.value)) {\n\t\t\t\t\t\t\t\tlastEventId = res.value[0];\n\t\t\t\t\t\t\t\tchunk = {\n\t\t\t\t\t\t\t\t\tid: res.value[0],\n\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\tid: res.value[0],\n\t\t\t\t\t\t\t\t\t\tdata: res.value[1]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else chunk = { data: res.value };\n\t\t\t\t\t\t\tobserver.next({ result: (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, chunk), {}, { data: transformChunk(chunk.data) }) });\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (_) {\n\t\t\t\t\t\t_usingCtx4.e = _;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tawait _usingCtx4.d();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t} catch (_) {\n\t\t\t\t\t_usingCtx3.e = _;\n\t\t\t\t} finally {\n\t\t\t\t\t_usingCtx3.d();\n\t\t\t\t}\n\t\t\t}\n\t\t}).catch((cause) => {\n\t\t\tonErrorCallback(cause);\n\t\t\tobserver.error(coerceToTRPCClientError(cause));\n\t\t});\n\t\treturn () => {\n\t\t\tac.abort();\n\t\t};\n\t});\n}\n/**\n* @deprecated Renamed to `unstable_localLink`. This alias will be removed in a future major release.\n*/\nconst experimental_localLink = unstable_localLink;\n\n//#endregion\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/loggerLink-ineCN1PO.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/loggerLink-ineCN1PO.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loggerLink: () => (/* binding */ loggerLink)\n/* harmony export */ });\n/* harmony import */ var _objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objectSpread2-BvkFp-_Y.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/objectSpread2-BvkFp-_Y.mjs\");\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs\");\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable-CUiPknO-.mjs\");\n\n\n\n//#region src/links/loggerLink.ts\nvar import_objectSpread2 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\nfunction isFormData(value) {\n\tif (typeof FormData === \"undefined\") return false;\n\treturn value instanceof FormData;\n}\nconst palettes = {\n\tcss: {\n\t\tquery: [\"72e3ff\", \"3fb0d8\"],\n\t\tmutation: [\"c5a3fc\", \"904dfc\"],\n\t\tsubscription: [\"ff49e1\", \"d83fbe\"]\n\t},\n\tansi: {\n\t\tregular: {\n\t\t\tquery: [\"\\x1B[30;46m\", \"\\x1B[97;46m\"],\n\t\t\tmutation: [\"\\x1B[30;45m\", \"\\x1B[97;45m\"],\n\t\t\tsubscription: [\"\\x1B[30;42m\", \"\\x1B[97;42m\"]\n\t\t},\n\t\tbold: {\n\t\t\tquery: [\"\\x1B[1;30;46m\", \"\\x1B[1;97;46m\"],\n\t\t\tmutation: [\"\\x1B[1;30;45m\", \"\\x1B[1;97;45m\"],\n\t\t\tsubscription: [\"\\x1B[1;30;42m\", \"\\x1B[1;97;42m\"]\n\t\t}\n\t}\n};\nfunction constructPartsAndArgs(opts) {\n\tconst { direction, type, withContext, path, id, input } = opts;\n\tconst parts = [];\n\tconst args = [];\n\tif (opts.colorMode === \"none\") parts.push(direction === \"up\" ? \">>\" : \"<<\", type, `#${id}`, path);\n\telse if (opts.colorMode === \"ansi\") {\n\t\tconst [lightRegular, darkRegular] = palettes.ansi.regular[type];\n\t\tconst [lightBold, darkBold] = palettes.ansi.bold[type];\n\t\tconst reset = \"\\x1B[0m\";\n\t\tparts.push(direction === \"up\" ? lightRegular : darkRegular, direction === \"up\" ? \">>\" : \"<<\", type, direction === \"up\" ? lightBold : darkBold, `#${id}`, path, reset);\n\t} else {\n\t\tconst [light, dark] = palettes.css[type];\n\t\tconst css = `\n    background-color: #${direction === \"up\" ? light : dark};\n    color: ${direction === \"up\" ? \"black\" : \"white\"};\n    padding: 2px;\n  `;\n\t\tparts.push(\"%c\", direction === \"up\" ? \">>\" : \"<<\", type, `#${id}`, `%c${path}%c`, \"%O\");\n\t\targs.push(css, `${css}; font-weight: bold;`, `${css}; font-weight: normal;`);\n\t}\n\tif (direction === \"up\") args.push(withContext ? {\n\t\tinput,\n\t\tcontext: opts.context\n\t} : { input });\n\telse args.push((0, import_objectSpread2.default)({\n\t\tinput,\n\t\tresult: opts.result,\n\t\telapsedMs: opts.elapsedMs\n\t}, withContext && { context: opts.context }));\n\treturn {\n\t\tparts,\n\t\targs\n\t};\n}\nconst defaultLogger = ({ c = console, colorMode = \"css\", withContext }) => (props) => {\n\tconst rawInput = props.input;\n\tconst input = isFormData(rawInput) ? Object.fromEntries(rawInput) : rawInput;\n\tconst { parts, args } = constructPartsAndArgs((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, props), {}, {\n\t\tcolorMode,\n\t\tinput,\n\t\twithContext\n\t}));\n\tconst fn = props.direction === \"down\" && props.result && (props.result instanceof Error || \"error\" in props.result.result && props.result.result.error) ? \"error\" : \"log\";\n\tc[fn].apply(null, [parts.join(\" \")].concat(args));\n};\n/**\n* @see https://trpc.io/docs/v11/client/links/loggerLink\n*/\nfunction loggerLink(opts = {}) {\n\tvar _opts$colorMode, _opts$withContext;\n\tconst { enabled = () => true } = opts;\n\tconst colorMode = (_opts$colorMode = opts.colorMode) !== null && _opts$colorMode !== void 0 ? _opts$colorMode : typeof window === \"undefined\" ? \"ansi\" : \"css\";\n\tconst withContext = (_opts$withContext = opts.withContext) !== null && _opts$withContext !== void 0 ? _opts$withContext : colorMode === \"css\";\n\tconst { logger = defaultLogger({\n\t\tc: opts.console,\n\t\tcolorMode,\n\t\twithContext\n\t}) } = opts;\n\treturn () => {\n\t\treturn ({ op, next }) => {\n\t\t\treturn (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_1__.observable)((observer) => {\n\t\t\t\tif (enabled((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, op), {}, { direction: \"up\" }))) logger((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, op), {}, { direction: \"up\" }));\n\t\t\t\tconst requestStartTime = Date.now();\n\t\t\t\tfunction logResult(result) {\n\t\t\t\t\tconst elapsedMs = Date.now() - requestStartTime;\n\t\t\t\t\tif (enabled((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, op), {}, {\n\t\t\t\t\t\tdirection: \"down\",\n\t\t\t\t\t\tresult\n\t\t\t\t\t}))) logger((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, op), {}, {\n\t\t\t\t\t\tdirection: \"down\",\n\t\t\t\t\t\telapsedMs,\n\t\t\t\t\t\tresult\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\treturn next(op).pipe((0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_2__.tap)({\n\t\t\t\t\tnext(result) {\n\t\t\t\t\t\tlogResult(result);\n\t\t\t\t\t},\n\t\t\t\t\terror(result) {\n\t\t\t\t\t\tlogResult(result);\n\t\t\t\t\t}\n\t\t\t\t})).subscribe(observer);\n\t\t\t});\n\t\t};\n\t};\n}\n\n//#endregion\n\n//# sourceMappingURL=loggerLink-ineCN1PO.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/loggerLink-ineCN1PO.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/objectSpread2-BvkFp-_Y.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/objectSpread2-BvkFp-_Y.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __commonJS: () => (/* binding */ __commonJS),\n/* harmony export */   __toESM: () => (/* binding */ __toESM),\n/* harmony export */   require_defineProperty: () => (/* binding */ require_defineProperty),\n/* harmony export */   require_objectSpread2: () => (/* binding */ require_objectSpread2)\n/* harmony export */ });\n//#region rolldown:runtime\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function() {\n\treturn mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n\tif (from && typeof from === \"object\" || typeof from === \"function\") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {\n\t\tkey = keys[i];\n\t\tif (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n\t\t\tget: ((k) => from[k]).bind(null, key),\n\t\t\tenumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n\t\t});\n\t}\n\treturn to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n\tvalue: mod,\n\tenumerable: true\n}) : target, mod));\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/typeof.js\nvar require_typeof = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/typeof.js\"(exports, module) {\n\tfunction _typeof$2(o) {\n\t\t\"@babel/helpers - typeof\";\n\t\treturn module.exports = _typeof$2 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o$1) {\n\t\t\treturn typeof o$1;\n\t\t} : function(o$1) {\n\t\t\treturn o$1 && \"function\" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? \"symbol\" : typeof o$1;\n\t\t}, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof$2(o);\n\t}\n\tmodule.exports = _typeof$2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPrimitive.js\nvar require_toPrimitive = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPrimitive.js\"(exports, module) {\n\tvar _typeof$1 = require_typeof()[\"default\"];\n\tfunction toPrimitive$1(t, r) {\n\t\tif (\"object\" != _typeof$1(t) || !t) return t;\n\t\tvar e = t[Symbol.toPrimitive];\n\t\tif (void 0 !== e) {\n\t\t\tvar i = e.call(t, r || \"default\");\n\t\t\tif (\"object\" != _typeof$1(i)) return i;\n\t\t\tthrow new TypeError(\"@@toPrimitive must return a primitive value.\");\n\t\t}\n\t\treturn (\"string\" === r ? String : Number)(t);\n\t}\n\tmodule.exports = toPrimitive$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPropertyKey.js\nvar require_toPropertyKey = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPropertyKey.js\"(exports, module) {\n\tvar _typeof = require_typeof()[\"default\"];\n\tvar toPrimitive = require_toPrimitive();\n\tfunction toPropertyKey$1(t) {\n\t\tvar i = toPrimitive(t, \"string\");\n\t\treturn \"symbol\" == _typeof(i) ? i : i + \"\";\n\t}\n\tmodule.exports = toPropertyKey$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/defineProperty.js\nvar require_defineProperty = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/defineProperty.js\"(exports, module) {\n\tvar toPropertyKey = require_toPropertyKey();\n\tfunction _defineProperty(e, r, t) {\n\t\treturn (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n\t\t\tvalue: t,\n\t\t\tenumerable: !0,\n\t\t\tconfigurable: !0,\n\t\t\twritable: !0\n\t\t}) : e[r] = t, e;\n\t}\n\tmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectSpread2.js\nvar require_objectSpread2 = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectSpread2.js\"(exports, module) {\n\tvar defineProperty = require_defineProperty();\n\tfunction ownKeys(e, r) {\n\t\tvar t = Object.keys(e);\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tvar o = Object.getOwnPropertySymbols(e);\n\t\t\tr && (o = o.filter(function(r$1) {\n\t\t\t\treturn Object.getOwnPropertyDescriptor(e, r$1).enumerable;\n\t\t\t})), t.push.apply(t, o);\n\t\t}\n\t\treturn t;\n\t}\n\tfunction _objectSpread2(e) {\n\t\tfor (var r = 1; r < arguments.length; r++) {\n\t\t\tvar t = null != arguments[r] ? arguments[r] : {};\n\t\t\tr % 2 ? ownKeys(Object(t), !0).forEach(function(r$1) {\n\t\t\t\tdefineProperty(e, r$1, t[r$1]);\n\t\t\t}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r$1) {\n\t\t\t\tObject.defineProperty(e, r$1, Object.getOwnPropertyDescriptor(t, r$1));\n\t\t\t});\n\t\t}\n\t\treturn e;\n\t}\n\tmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n\n//# sourceMappingURL=objectSpread2-BvkFp-_Y.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/objectSpread2-BvkFp-_Y.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/splitLink-B7Cuf2c_.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/splitLink-B7Cuf2c_.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createChain: () => (/* binding */ createChain),\n/* harmony export */   splitLink: () => (/* binding */ splitLink)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs\");\n\n\n//#region src/links/internals/createChain.ts\n/** @internal */\nfunction createChain(opts) {\n\treturn (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer) => {\n\t\tfunction execute(index = 0, op = opts.op) {\n\t\t\tconst next = opts.links[index];\n\t\t\tif (!next) throw new Error(\"No more links to execute - did you forget to add an ending link?\");\n\t\t\tconst subscription = next({\n\t\t\t\top,\n\t\t\t\tnext(nextOp) {\n\t\t\t\t\tconst nextObserver = execute(index + 1, nextOp);\n\t\t\t\t\treturn nextObserver;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn subscription;\n\t\t}\n\t\tconst obs$ = execute();\n\t\treturn obs$.subscribe(observer);\n\t});\n}\n\n//#endregion\n//#region src/links/splitLink.ts\nfunction asArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\nfunction splitLink(opts) {\n\treturn (runtime) => {\n\t\tconst yes = asArray(opts.true).map((link) => link(runtime));\n\t\tconst no = asArray(opts.false).map((link) => link(runtime));\n\t\treturn (props) => {\n\t\t\treturn (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_0__.observable)((observer) => {\n\t\t\t\tconst links = opts.condition(props.op) ? yes : no;\n\t\t\t\treturn createChain({\n\t\t\t\t\top: props.op,\n\t\t\t\t\tlinks\n\t\t\t\t}).subscribe(observer);\n\t\t\t});\n\t\t};\n\t};\n}\n\n//#endregion\n\n//# sourceMappingURL=splitLink-B7Cuf2c_.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3Qvc3BsaXRMaW5rLUI3Q3VmMmNfLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7O0FBRXJEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsbUVBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxtRUFBVTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ2tDO0FBQ2xDIiwic291cmNlcyI6WyIvVXNlcnMvYmxhaW5lY293ZW4vRG9jdW1lbnRzL1Byb2plY3RzL05GTC1TdGF0LVF1ZXJ5L25vZGVfbW9kdWxlcy9AdHJwYy9jbGllbnQvZGlzdC9zcGxpdExpbmstQjdDdWYyY18ubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9ic2VydmFibGUgfSBmcm9tIFwiQHRycGMvc2VydmVyL29ic2VydmFibGVcIjtcblxuLy8jcmVnaW9uIHNyYy9saW5rcy9pbnRlcm5hbHMvY3JlYXRlQ2hhaW4udHNcbi8qKiBAaW50ZXJuYWwgKi9cbmZ1bmN0aW9uIGNyZWF0ZUNoYWluKG9wdHMpIHtcblx0cmV0dXJuIG9ic2VydmFibGUoKG9ic2VydmVyKSA9PiB7XG5cdFx0ZnVuY3Rpb24gZXhlY3V0ZShpbmRleCA9IDAsIG9wID0gb3B0cy5vcCkge1xuXHRcdFx0Y29uc3QgbmV4dCA9IG9wdHMubGlua3NbaW5kZXhdO1xuXHRcdFx0aWYgKCFuZXh0KSB0aHJvdyBuZXcgRXJyb3IoXCJObyBtb3JlIGxpbmtzIHRvIGV4ZWN1dGUgLSBkaWQgeW91IGZvcmdldCB0byBhZGQgYW4gZW5kaW5nIGxpbms/XCIpO1xuXHRcdFx0Y29uc3Qgc3Vic2NyaXB0aW9uID0gbmV4dCh7XG5cdFx0XHRcdG9wLFxuXHRcdFx0XHRuZXh0KG5leHRPcCkge1xuXHRcdFx0XHRcdGNvbnN0IG5leHRPYnNlcnZlciA9IGV4ZWN1dGUoaW5kZXggKyAxLCBuZXh0T3ApO1xuXHRcdFx0XHRcdHJldHVybiBuZXh0T2JzZXJ2ZXI7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdFx0cmV0dXJuIHN1YnNjcmlwdGlvbjtcblx0XHR9XG5cdFx0Y29uc3Qgb2JzJCA9IGV4ZWN1dGUoKTtcblx0XHRyZXR1cm4gb2JzJC5zdWJzY3JpYmUob2JzZXJ2ZXIpO1xuXHR9KTtcbn1cblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gc3JjL2xpbmtzL3NwbGl0TGluay50c1xuZnVuY3Rpb24gYXNBcnJheSh2YWx1ZSkge1xuXHRyZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZSA6IFt2YWx1ZV07XG59XG5mdW5jdGlvbiBzcGxpdExpbmsob3B0cykge1xuXHRyZXR1cm4gKHJ1bnRpbWUpID0+IHtcblx0XHRjb25zdCB5ZXMgPSBhc0FycmF5KG9wdHMudHJ1ZSkubWFwKChsaW5rKSA9PiBsaW5rKHJ1bnRpbWUpKTtcblx0XHRjb25zdCBubyA9IGFzQXJyYXkob3B0cy5mYWxzZSkubWFwKChsaW5rKSA9PiBsaW5rKHJ1bnRpbWUpKTtcblx0XHRyZXR1cm4gKHByb3BzKSA9PiB7XG5cdFx0XHRyZXR1cm4gb2JzZXJ2YWJsZSgob2JzZXJ2ZXIpID0+IHtcblx0XHRcdFx0Y29uc3QgbGlua3MgPSBvcHRzLmNvbmRpdGlvbihwcm9wcy5vcCkgPyB5ZXMgOiBubztcblx0XHRcdFx0cmV0dXJuIGNyZWF0ZUNoYWluKHtcblx0XHRcdFx0XHRvcDogcHJvcHMub3AsXG5cdFx0XHRcdFx0bGlua3Ncblx0XHRcdFx0fSkuc3Vic2NyaWJlKG9ic2VydmVyKTtcblx0XHRcdH0pO1xuXHRcdH07XG5cdH07XG59XG5cbi8vI2VuZHJlZ2lvblxuZXhwb3J0IHsgY3JlYXRlQ2hhaW4sIHNwbGl0TGluayB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BsaXRMaW5rLUI3Q3VmMmNfLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/splitLink-B7Cuf2c_.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/unstable-internals-Bg7n9BBj.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/unstable-internals-Bg7n9BBj.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTransformer: () => (/* binding */ getTransformer)\n/* harmony export */ });\n//#region src/internals/transformer.ts\n/**\n* @internal\n*/\n/**\n* @internal\n*/\nfunction getTransformer(transformer) {\n\tconst _transformer = transformer;\n\tif (!_transformer) return {\n\t\tinput: {\n\t\t\tserialize: (data) => data,\n\t\t\tdeserialize: (data) => data\n\t\t},\n\t\toutput: {\n\t\t\tserialize: (data) => data,\n\t\t\tdeserialize: (data) => data\n\t\t}\n\t};\n\tif (\"input\" in _transformer) return _transformer;\n\treturn {\n\t\tinput: _transformer,\n\t\toutput: _transformer\n\t};\n}\n\n//#endregion\n\n//# sourceMappingURL=unstable-internals-Bg7n9BBj.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvdW5zdGFibGUtaW50ZXJuYWxzLUJnN245QkJqLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUMwQjtBQUMxQiIsInNvdXJjZXMiOlsiL1VzZXJzL2JsYWluZWNvd2VuL0RvY3VtZW50cy9Qcm9qZWN0cy9ORkwtU3RhdC1RdWVyeS9ub2RlX21vZHVsZXMvQHRycGMvY2xpZW50L2Rpc3QvdW5zdGFibGUtaW50ZXJuYWxzLUJnN245QkJqLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyNyZWdpb24gc3JjL2ludGVybmFscy90cmFuc2Zvcm1lci50c1xuLyoqXG4qIEBpbnRlcm5hbFxuKi9cbi8qKlxuKiBAaW50ZXJuYWxcbiovXG5mdW5jdGlvbiBnZXRUcmFuc2Zvcm1lcih0cmFuc2Zvcm1lcikge1xuXHRjb25zdCBfdHJhbnNmb3JtZXIgPSB0cmFuc2Zvcm1lcjtcblx0aWYgKCFfdHJhbnNmb3JtZXIpIHJldHVybiB7XG5cdFx0aW5wdXQ6IHtcblx0XHRcdHNlcmlhbGl6ZTogKGRhdGEpID0+IGRhdGEsXG5cdFx0XHRkZXNlcmlhbGl6ZTogKGRhdGEpID0+IGRhdGFcblx0XHR9LFxuXHRcdG91dHB1dDoge1xuXHRcdFx0c2VyaWFsaXplOiAoZGF0YSkgPT4gZGF0YSxcblx0XHRcdGRlc2VyaWFsaXplOiAoZGF0YSkgPT4gZGF0YVxuXHRcdH1cblx0fTtcblx0aWYgKFwiaW5wdXRcIiBpbiBfdHJhbnNmb3JtZXIpIHJldHVybiBfdHJhbnNmb3JtZXI7XG5cdHJldHVybiB7XG5cdFx0aW5wdXQ6IF90cmFuc2Zvcm1lcixcblx0XHRvdXRwdXQ6IF90cmFuc2Zvcm1lclxuXHR9O1xufVxuXG4vLyNlbmRyZWdpb25cbmV4cG9ydCB7IGdldFRyYW5zZm9ybWVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11bnN0YWJsZS1pbnRlcm5hbHMtQmc3bjlCQmoubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/unstable-internals-Bg7n9BBj.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/client/dist/wsLink-H5IjZfJW.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@trpc/client/dist/wsLink-H5IjZfJW.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createWSClient: () => (/* binding */ createWSClient),\n/* harmony export */   resultOf: () => (/* binding */ resultOf),\n/* harmony export */   wsLink: () => (/* binding */ wsLink)\n/* harmony export */ });\n/* harmony import */ var _objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objectSpread2-BvkFp-_Y.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/objectSpread2-BvkFp-_Y.mjs\");\n/* harmony import */ var _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TRPCClientError-CjKyS10w.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/TRPCClientError-CjKyS10w.mjs\");\n/* harmony import */ var _unstable_internals_Bg7n9BBj_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./unstable-internals-Bg7n9BBj.mjs */ \"(ssr)/./node_modules/@trpc/client/dist/unstable-internals-Bg7n9BBj.mjs\");\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable-CUiPknO-.mjs\");\n/* harmony import */ var _trpc_server_observable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @trpc/server/observable */ \"(ssr)/./node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @trpc/server/unstable-core-do-not-import */ \"(ssr)/./node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @trpc/server/unstable-core-do-not-import */ \"(ssr)/./node_modules/@trpc/server/dist/utils-DdbbrDku.mjs\");\n\n\n\n\n\n\n//#region src/links/wsLink/wsClient/options.ts\nconst lazyDefaults = {\n\tenabled: false,\n\tcloseMs: 0\n};\nconst keepAliveDefaults = {\n\tenabled: false,\n\tpongTimeoutMs: 1e3,\n\tintervalMs: 5e3\n};\n/**\n* Calculates a delay for exponential backoff based on the retry attempt index.\n* The delay starts at 0 for the first attempt and doubles for each subsequent attempt,\n* capped at 30 seconds.\n*/\nconst exponentialBackoff = (attemptIndex) => {\n\treturn attemptIndex === 0 ? 0 : Math.min(1e3 * 2 ** attemptIndex, 3e4);\n};\n\n//#endregion\n//#region src/links/internals/urlWithConnectionParams.ts\n/**\n* Get the result of a value or function that returns a value\n* It also optionally accepts typesafe arguments for the function\n*/\nconst resultOf = (value, ...args) => {\n\treturn typeof value === \"function\" ? value(...args) : value;\n};\n\n//#endregion\n//#region src/links/wsLink/wsClient/utils.ts\nvar import_defineProperty$3 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_defineProperty)(), 1);\nvar TRPCWebSocketClosedError = class TRPCWebSocketClosedError extends Error {\n\tconstructor(opts) {\n\t\tsuper(opts.message, { cause: opts.cause });\n\t\tthis.name = \"TRPCWebSocketClosedError\";\n\t\tObject.setPrototypeOf(this, TRPCWebSocketClosedError.prototype);\n\t}\n};\n/**\n* Utility class for managing a timeout that can be started, stopped, and reset.\n* Useful for scenarios where the timeout duration is reset dynamically based on events.\n*/\nvar ResettableTimeout = class {\n\tconstructor(onTimeout, timeoutMs) {\n\t\tthis.onTimeout = onTimeout;\n\t\tthis.timeoutMs = timeoutMs;\n\t\t(0, import_defineProperty$3.default)(this, \"timeout\", void 0);\n\t}\n\t/**\n\t* Resets the current timeout, restarting it with the same duration.\n\t* Does nothing if no timeout is active.\n\t*/\n\treset() {\n\t\tif (!this.timeout) return;\n\t\tclearTimeout(this.timeout);\n\t\tthis.timeout = setTimeout(this.onTimeout, this.timeoutMs);\n\t}\n\tstart() {\n\t\tclearTimeout(this.timeout);\n\t\tthis.timeout = setTimeout(this.onTimeout, this.timeoutMs);\n\t}\n\tstop() {\n\t\tclearTimeout(this.timeout);\n\t\tthis.timeout = void 0;\n\t}\n};\nfunction withResolvers() {\n\tlet resolve;\n\tlet reject;\n\tconst promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\treturn {\n\t\tpromise,\n\t\tresolve,\n\t\treject\n\t};\n}\n/**\n* Resolves a WebSocket URL and optionally appends connection parameters.\n*\n* If connectionParams are provided, appends 'connectionParams=1' query parameter.\n*/\nasync function prepareUrl(urlOptions) {\n\tconst url = await resultOf(urlOptions.url);\n\tif (!urlOptions.connectionParams) return url;\n\tconst prefix = url.includes(\"?\") ? \"&\" : \"?\";\n\tconst connectionParams = `${prefix}connectionParams=1`;\n\treturn url + connectionParams;\n}\nasync function buildConnectionMessage(connectionParams) {\n\tconst message = {\n\t\tmethod: \"connectionParams\",\n\t\tdata: await resultOf(connectionParams)\n\t};\n\treturn JSON.stringify(message);\n}\n\n//#endregion\n//#region src/links/wsLink/wsClient/requestManager.ts\nvar import_defineProperty$2 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_defineProperty)(), 1);\n/**\n* Manages WebSocket requests, tracking their lifecycle and providing utility methods\n* for handling outgoing and pending requests.\n*\n* - **Outgoing requests**: Requests that are queued and waiting to be sent.\n* - **Pending requests**: Requests that have been sent and are in flight awaiting a response.\n*   For subscriptions, multiple responses may be received until the subscription is closed.\n*/\nvar RequestManager = class {\n\tconstructor() {\n\t\t(0, import_defineProperty$2.default)(this, \"outgoingRequests\", new Array());\n\t\t(0, import_defineProperty$2.default)(this, \"pendingRequests\", {});\n\t}\n\t/**\n\t* Registers a new request by adding it to the outgoing queue and setting up\n\t* callbacks for lifecycle events such as completion or error.\n\t*\n\t* @param message - The outgoing message to be sent.\n\t* @param callbacks - Callback functions to observe the request's state.\n\t* @returns A cleanup function to manually remove the request.\n\t*/\n\tregister(message, callbacks) {\n\t\tconst { promise: end, resolve } = withResolvers();\n\t\tthis.outgoingRequests.push({\n\t\t\tid: String(message.id),\n\t\t\tmessage,\n\t\t\tend,\n\t\t\tcallbacks: {\n\t\t\t\tnext: callbacks.next,\n\t\t\t\tcomplete: () => {\n\t\t\t\t\tcallbacks.complete();\n\t\t\t\t\tresolve();\n\t\t\t\t},\n\t\t\t\terror: (e) => {\n\t\t\t\t\tcallbacks.error(e);\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn () => {\n\t\t\tthis.delete(message.id);\n\t\t\tcallbacks.complete();\n\t\t\tresolve();\n\t\t};\n\t}\n\t/**\n\t* Deletes a request from both the outgoing and pending collections, if it exists.\n\t*/\n\tdelete(messageId) {\n\t\tif (messageId === null) return;\n\t\tthis.outgoingRequests = this.outgoingRequests.filter(({ id }) => id !== String(messageId));\n\t\tdelete this.pendingRequests[String(messageId)];\n\t}\n\t/**\n\t* Moves all outgoing requests to the pending state and clears the outgoing queue.\n\t*\n\t* The caller is expected to handle the actual sending of the requests\n\t* (e.g., sending them over the network) after this method is called.\n\t*\n\t* @returns The list of requests that were transitioned to the pending state.\n\t*/\n\tflush() {\n\t\tconst requests = this.outgoingRequests;\n\t\tthis.outgoingRequests = [];\n\t\tfor (const request of requests) this.pendingRequests[request.id] = request;\n\t\treturn requests;\n\t}\n\t/**\n\t* Retrieves all currently pending requests, which are in flight awaiting responses\n\t* or handling ongoing subscriptions.\n\t*/\n\tgetPendingRequests() {\n\t\treturn Object.values(this.pendingRequests);\n\t}\n\t/**\n\t* Retrieves a specific pending request by its message ID.\n\t*/\n\tgetPendingRequest(messageId) {\n\t\tif (messageId === null) return null;\n\t\treturn this.pendingRequests[String(messageId)];\n\t}\n\t/**\n\t* Retrieves all outgoing requests, which are waiting to be sent.\n\t*/\n\tgetOutgoingRequests() {\n\t\treturn this.outgoingRequests;\n\t}\n\t/**\n\t* Retrieves all requests, both outgoing and pending, with their respective states.\n\t*\n\t* @returns An array of all requests with their state (\"outgoing\" or \"pending\").\n\t*/\n\tgetRequests() {\n\t\treturn [...this.getOutgoingRequests().map((request) => ({\n\t\t\tstate: \"outgoing\",\n\t\t\tmessage: request.message,\n\t\t\tend: request.end,\n\t\t\tcallbacks: request.callbacks\n\t\t})), ...this.getPendingRequests().map((request) => ({\n\t\t\tstate: \"pending\",\n\t\t\tmessage: request.message,\n\t\t\tend: request.end,\n\t\t\tcallbacks: request.callbacks\n\t\t}))];\n\t}\n\t/**\n\t* Checks if there are any pending requests, including ongoing subscriptions.\n\t*/\n\thasPendingRequests() {\n\t\treturn this.getPendingRequests().length > 0;\n\t}\n\t/**\n\t* Checks if there are any pending subscriptions\n\t*/\n\thasPendingSubscriptions() {\n\t\treturn this.getPendingRequests().some((request) => request.message.method === \"subscription\");\n\t}\n\t/**\n\t* Checks if there are any outgoing requests waiting to be sent.\n\t*/\n\thasOutgoingRequests() {\n\t\treturn this.outgoingRequests.length > 0;\n\t}\n};\n\n//#endregion\n//#region src/links/wsLink/wsClient/wsConnection.ts\nvar import_defineProperty$1 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_defineProperty)(), 1);\n/**\n* Opens a WebSocket connection asynchronously and returns a promise\n* that resolves when the connection is successfully established.\n* The promise rejects if an error occurs during the connection attempt.\n*/\nfunction asyncWsOpen(ws) {\n\tconst { promise, resolve, reject } = withResolvers();\n\tws.addEventListener(\"open\", () => {\n\t\tws.removeEventListener(\"error\", reject);\n\t\tresolve();\n\t});\n\tws.addEventListener(\"error\", reject);\n\treturn promise;\n}\n/**\n* Sets up a periodic ping-pong mechanism to keep the WebSocket connection alive.\n*\n* - Sends \"PING\" messages at regular intervals defined by `intervalMs`.\n* - If a \"PONG\" response is not received within the `pongTimeoutMs`, the WebSocket is closed.\n* - The ping timer resets upon receiving any message to maintain activity.\n* - Automatically starts the ping process when the WebSocket connection is opened.\n* - Cleans up timers when the WebSocket is closed.\n*\n* @param ws - The WebSocket instance to manage.\n* @param options - Configuration options for ping-pong intervals and timeouts.\n*/\nfunction setupPingInterval(ws, { intervalMs, pongTimeoutMs }) {\n\tlet pingTimeout;\n\tlet pongTimeout;\n\tfunction start() {\n\t\tpingTimeout = setTimeout(() => {\n\t\t\tws.send(\"PING\");\n\t\t\tpongTimeout = setTimeout(() => {\n\t\t\t\tws.close();\n\t\t\t}, pongTimeoutMs);\n\t\t}, intervalMs);\n\t}\n\tfunction reset() {\n\t\tclearTimeout(pingTimeout);\n\t\tstart();\n\t}\n\tfunction pong() {\n\t\tclearTimeout(pongTimeout);\n\t\treset();\n\t}\n\tws.addEventListener(\"open\", start);\n\tws.addEventListener(\"message\", ({ data }) => {\n\t\tclearTimeout(pingTimeout);\n\t\tstart();\n\t\tif (data === \"PONG\") pong();\n\t});\n\tws.addEventListener(\"close\", () => {\n\t\tclearTimeout(pingTimeout);\n\t\tclearTimeout(pongTimeout);\n\t});\n}\n/**\n* Manages a WebSocket connection with support for reconnection, keep-alive mechanisms,\n* and observable state tracking.\n*/\nvar WsConnection = class WsConnection {\n\tconstructor(opts) {\n\t\tvar _opts$WebSocketPonyfi;\n\t\t(0, import_defineProperty$1.default)(this, \"id\", ++WsConnection.connectCount);\n\t\t(0, import_defineProperty$1.default)(this, \"WebSocketPonyfill\", void 0);\n\t\t(0, import_defineProperty$1.default)(this, \"urlOptions\", void 0);\n\t\t(0, import_defineProperty$1.default)(this, \"keepAliveOpts\", void 0);\n\t\t(0, import_defineProperty$1.default)(this, \"wsObservable\", (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_3__.behaviorSubject)(null));\n\t\t(0, import_defineProperty$1.default)(this, \"openPromise\", null);\n\t\tthis.WebSocketPonyfill = (_opts$WebSocketPonyfi = opts.WebSocketPonyfill) !== null && _opts$WebSocketPonyfi !== void 0 ? _opts$WebSocketPonyfi : WebSocket;\n\t\tif (!this.WebSocketPonyfill) throw new Error(\"No WebSocket implementation found - you probably don't want to use this on the server, but if you do you need to pass a `WebSocket`-ponyfill\");\n\t\tthis.urlOptions = opts.urlOptions;\n\t\tthis.keepAliveOpts = opts.keepAlive;\n\t}\n\tget ws() {\n\t\treturn this.wsObservable.get();\n\t}\n\tset ws(ws) {\n\t\tthis.wsObservable.next(ws);\n\t}\n\t/**\n\t* Checks if the WebSocket connection is open and ready to communicate.\n\t*/\n\tisOpen() {\n\t\treturn !!this.ws && this.ws.readyState === this.WebSocketPonyfill.OPEN && !this.openPromise;\n\t}\n\t/**\n\t* Checks if the WebSocket connection is closed or in the process of closing.\n\t*/\n\tisClosed() {\n\t\treturn !!this.ws && (this.ws.readyState === this.WebSocketPonyfill.CLOSING || this.ws.readyState === this.WebSocketPonyfill.CLOSED);\n\t}\n\tasync open() {\n\t\tvar _this = this;\n\t\tif (_this.openPromise) return _this.openPromise;\n\t\t_this.id = ++WsConnection.connectCount;\n\t\tconst wsPromise = prepareUrl(_this.urlOptions).then((url) => new _this.WebSocketPonyfill(url));\n\t\t_this.openPromise = wsPromise.then(async (ws) => {\n\t\t\t_this.ws = ws;\n\t\t\tws.addEventListener(\"message\", function({ data }) {\n\t\t\t\tif (data === \"PING\") this.send(\"PONG\");\n\t\t\t});\n\t\t\tif (_this.keepAliveOpts.enabled) setupPingInterval(ws, _this.keepAliveOpts);\n\t\t\tws.addEventListener(\"close\", () => {\n\t\t\t\tif (_this.ws === ws) _this.ws = null;\n\t\t\t});\n\t\t\tawait asyncWsOpen(ws);\n\t\t\tif (_this.urlOptions.connectionParams) ws.send(await buildConnectionMessage(_this.urlOptions.connectionParams));\n\t\t});\n\t\ttry {\n\t\t\tawait _this.openPromise;\n\t\t} finally {\n\t\t\t_this.openPromise = null;\n\t\t}\n\t}\n\t/**\n\t* Closes the WebSocket connection gracefully.\n\t* Waits for any ongoing open operation to complete before closing.\n\t*/\n\tasync close() {\n\t\tvar _this2 = this;\n\t\ttry {\n\t\t\tawait _this2.openPromise;\n\t\t} finally {\n\t\t\tvar _this$ws;\n\t\t\t(_this$ws = _this2.ws) === null || _this$ws === void 0 || _this$ws.close();\n\t\t}\n\t}\n};\n(0, import_defineProperty$1.default)(WsConnection, \"connectCount\", 0);\n/**\n* Provides a backward-compatible representation of the connection state.\n*/\nfunction backwardCompatibility(connection) {\n\tif (connection.isOpen()) return {\n\t\tid: connection.id,\n\t\tstate: \"open\",\n\t\tws: connection.ws\n\t};\n\tif (connection.isClosed()) return {\n\t\tid: connection.id,\n\t\tstate: \"closed\",\n\t\tws: connection.ws\n\t};\n\tif (!connection.ws) return null;\n\treturn {\n\t\tid: connection.id,\n\t\tstate: \"connecting\",\n\t\tws: connection.ws\n\t};\n}\n\n//#endregion\n//#region src/links/wsLink/wsClient/wsClient.ts\nvar import_defineProperty = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_defineProperty)(), 1);\nvar import_objectSpread2 = (0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_objectSpread2_BvkFp_Y_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\n/**\n* A WebSocket client for managing TRPC operations, supporting lazy initialization,\n* reconnection, keep-alive, and request management.\n*/\nvar WsClient = class {\n\tconstructor(opts) {\n\t\tvar _opts$retryDelayMs;\n\t\t(0, import_defineProperty.default)(this, \"connectionState\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"allowReconnect\", false);\n\t\t(0, import_defineProperty.default)(this, \"requestManager\", new RequestManager());\n\t\t(0, import_defineProperty.default)(this, \"activeConnection\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"reconnectRetryDelay\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"inactivityTimeout\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"callbacks\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"lazyMode\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"reconnecting\", null);\n\t\tthis.callbacks = {\n\t\t\tonOpen: opts.onOpen,\n\t\t\tonClose: opts.onClose,\n\t\t\tonError: opts.onError\n\t\t};\n\t\tconst lazyOptions = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, lazyDefaults), opts.lazy);\n\t\tthis.inactivityTimeout = new ResettableTimeout(() => {\n\t\t\tif (this.requestManager.hasOutgoingRequests() || this.requestManager.hasPendingRequests()) {\n\t\t\t\tthis.inactivityTimeout.reset();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.close().catch(() => null);\n\t\t}, lazyOptions.closeMs);\n\t\tthis.activeConnection = new WsConnection({\n\t\t\tWebSocketPonyfill: opts.WebSocket,\n\t\t\turlOptions: opts,\n\t\t\tkeepAlive: (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, keepAliveDefaults), opts.keepAlive)\n\t\t});\n\t\tthis.activeConnection.wsObservable.subscribe({ next: (ws) => {\n\t\t\tif (!ws) return;\n\t\t\tthis.setupWebSocketListeners(ws);\n\t\t} });\n\t\tthis.reconnectRetryDelay = (_opts$retryDelayMs = opts.retryDelayMs) !== null && _opts$retryDelayMs !== void 0 ? _opts$retryDelayMs : exponentialBackoff;\n\t\tthis.lazyMode = lazyOptions.enabled;\n\t\tthis.connectionState = (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_3__.behaviorSubject)({\n\t\t\ttype: \"state\",\n\t\t\tstate: lazyOptions.enabled ? \"idle\" : \"connecting\",\n\t\t\terror: null\n\t\t});\n\t\tif (!this.lazyMode) this.open().catch(() => null);\n\t}\n\t/**\n\t* Opens the WebSocket connection. Handles reconnection attempts and updates\n\t* the connection state accordingly.\n\t*/\n\tasync open() {\n\t\tvar _this = this;\n\t\t_this.allowReconnect = true;\n\t\tif (_this.connectionState.get().state !== \"connecting\") _this.connectionState.next({\n\t\t\ttype: \"state\",\n\t\t\tstate: \"connecting\",\n\t\t\terror: null\n\t\t});\n\t\ttry {\n\t\t\tawait _this.activeConnection.open();\n\t\t} catch (error) {\n\t\t\t_this.reconnect(new TRPCWebSocketClosedError({\n\t\t\t\tmessage: \"Initialization error\",\n\t\t\t\tcause: error\n\t\t\t}));\n\t\t\treturn _this.reconnecting;\n\t\t}\n\t}\n\t/**\n\t* Closes the WebSocket connection and stops managing requests.\n\t* Ensures all outgoing and pending requests are properly finalized.\n\t*/\n\tasync close() {\n\t\tvar _this2 = this;\n\t\t_this2.allowReconnect = false;\n\t\t_this2.inactivityTimeout.stop();\n\t\tconst requestsToAwait = [];\n\t\tfor (const request of _this2.requestManager.getRequests()) if (request.message.method === \"subscription\") request.callbacks.complete();\n\t\telse if (request.state === \"outgoing\") request.callbacks.error(_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCClientError.from(new TRPCWebSocketClosedError({ message: \"Closed before connection was established\" })));\n\t\telse requestsToAwait.push(request.end);\n\t\tawait Promise.all(requestsToAwait).catch(() => null);\n\t\tawait _this2.activeConnection.close().catch(() => null);\n\t\t_this2.connectionState.next({\n\t\t\ttype: \"state\",\n\t\t\tstate: \"idle\",\n\t\t\terror: null\n\t\t});\n\t}\n\t/**\n\t* Method to request the server.\n\t* Handles data transformation, batching of requests, and subscription lifecycle.\n\t*\n\t* @param op - The operation details including id, type, path, input and signal\n\t* @param transformer - Data transformer for serializing requests and deserializing responses\n\t* @param lastEventId - Optional ID of the last received event for subscriptions\n\t*\n\t* @returns An observable that emits operation results and handles cleanup\n\t*/\n\trequest({ op: { id, type, path, input, signal }, transformer, lastEventId }) {\n\t\treturn (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_4__.observable)((observer) => {\n\t\t\tconst abort = this.batchSend({\n\t\t\t\tid,\n\t\t\t\tmethod: type,\n\t\t\t\tparams: {\n\t\t\t\t\tinput: transformer.input.serialize(input),\n\t\t\t\t\tpath,\n\t\t\t\t\tlastEventId\n\t\t\t\t}\n\t\t\t}, (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, observer), {}, { next(event) {\n\t\t\t\tconst transformed = (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_5__.transformResult)(event, transformer.output);\n\t\t\t\tif (!transformed.ok) {\n\t\t\t\t\tobserver.error(_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCClientError.from(transformed.error));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tobserver.next({ result: transformed.result });\n\t\t\t} }));\n\t\t\treturn () => {\n\t\t\t\tabort();\n\t\t\t\tif (type === \"subscription\" && this.activeConnection.isOpen()) this.send({\n\t\t\t\t\tid,\n\t\t\t\t\tmethod: \"subscription.stop\"\n\t\t\t\t});\n\t\t\t\tsignal === null || signal === void 0 || signal.removeEventListener(\"abort\", abort);\n\t\t\t};\n\t\t});\n\t}\n\tget connection() {\n\t\treturn backwardCompatibility(this.activeConnection);\n\t}\n\treconnect(closedError) {\n\t\tvar _this3 = this;\n\t\tthis.connectionState.next({\n\t\t\ttype: \"state\",\n\t\t\tstate: \"connecting\",\n\t\t\terror: _TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCClientError.from(closedError)\n\t\t});\n\t\tif (this.reconnecting) return;\n\t\tconst tryReconnect = async (attemptIndex) => {\n\t\t\ttry {\n\t\t\t\tawait (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_6__.sleep)(_this3.reconnectRetryDelay(attemptIndex));\n\t\t\t\tif (_this3.allowReconnect) {\n\t\t\t\t\tawait _this3.activeConnection.close();\n\t\t\t\t\tawait _this3.activeConnection.open();\n\t\t\t\t\tif (_this3.requestManager.hasPendingRequests()) _this3.send(_this3.requestManager.getPendingRequests().map(({ message }) => message));\n\t\t\t\t}\n\t\t\t\t_this3.reconnecting = null;\n\t\t\t} catch (_unused) {\n\t\t\t\tawait tryReconnect(attemptIndex + 1);\n\t\t\t}\n\t\t};\n\t\tthis.reconnecting = tryReconnect(0);\n\t}\n\tsetupWebSocketListeners(ws) {\n\t\tvar _this4 = this;\n\t\tconst handleCloseOrError = (cause) => {\n\t\t\tconst reqs = this.requestManager.getPendingRequests();\n\t\t\tfor (const { message, callbacks } of reqs) {\n\t\t\t\tif (message.method === \"subscription\") continue;\n\t\t\t\tcallbacks.error(_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCClientError.from(cause !== null && cause !== void 0 ? cause : new TRPCWebSocketClosedError({\n\t\t\t\t\tmessage: \"WebSocket closed\",\n\t\t\t\t\tcause\n\t\t\t\t})));\n\t\t\t\tthis.requestManager.delete(message.id);\n\t\t\t}\n\t\t};\n\t\tws.addEventListener(\"open\", () => {\n\t\t\t(0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_6__.run)(async () => {\n\t\t\t\tvar _this$callbacks$onOpe, _this$callbacks;\n\t\t\t\tif (_this4.lazyMode) _this4.inactivityTimeout.start();\n\t\t\t\t(_this$callbacks$onOpe = (_this$callbacks = _this4.callbacks).onOpen) === null || _this$callbacks$onOpe === void 0 || _this$callbacks$onOpe.call(_this$callbacks);\n\t\t\t\t_this4.connectionState.next({\n\t\t\t\t\ttype: \"state\",\n\t\t\t\t\tstate: \"pending\",\n\t\t\t\t\terror: null\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\tws.close(3e3);\n\t\t\t\thandleCloseOrError(error);\n\t\t\t});\n\t\t});\n\t\tws.addEventListener(\"message\", ({ data }) => {\n\t\t\tthis.inactivityTimeout.reset();\n\t\t\tif (typeof data !== \"string\" || [\"PING\", \"PONG\"].includes(data)) return;\n\t\t\tconst incomingMessage = JSON.parse(data);\n\t\t\tif (\"method\" in incomingMessage) {\n\t\t\t\tthis.handleIncomingRequest(incomingMessage);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.handleResponseMessage(incomingMessage);\n\t\t});\n\t\tws.addEventListener(\"close\", (event) => {\n\t\t\tvar _this$callbacks$onClo, _this$callbacks2;\n\t\t\thandleCloseOrError(event);\n\t\t\t(_this$callbacks$onClo = (_this$callbacks2 = this.callbacks).onClose) === null || _this$callbacks$onClo === void 0 || _this$callbacks$onClo.call(_this$callbacks2, event);\n\t\t\tif (!this.lazyMode || this.requestManager.hasPendingSubscriptions()) this.reconnect(new TRPCWebSocketClosedError({\n\t\t\t\tmessage: \"WebSocket closed\",\n\t\t\t\tcause: event\n\t\t\t}));\n\t\t});\n\t\tws.addEventListener(\"error\", (event) => {\n\t\t\tvar _this$callbacks$onErr, _this$callbacks3;\n\t\t\thandleCloseOrError(event);\n\t\t\t(_this$callbacks$onErr = (_this$callbacks3 = this.callbacks).onError) === null || _this$callbacks$onErr === void 0 || _this$callbacks$onErr.call(_this$callbacks3, event);\n\t\t\tthis.reconnect(new TRPCWebSocketClosedError({\n\t\t\t\tmessage: \"WebSocket closed\",\n\t\t\t\tcause: event\n\t\t\t}));\n\t\t});\n\t}\n\thandleResponseMessage(message) {\n\t\tconst request = this.requestManager.getPendingRequest(message.id);\n\t\tif (!request) return;\n\t\trequest.callbacks.next(message);\n\t\tlet completed = true;\n\t\tif (\"result\" in message && request.message.method === \"subscription\") {\n\t\t\tif (message.result.type === \"data\") request.message.params.lastEventId = message.result.id;\n\t\t\tif (message.result.type !== \"stopped\") completed = false;\n\t\t}\n\t\tif (completed) {\n\t\t\trequest.callbacks.complete();\n\t\t\tthis.requestManager.delete(message.id);\n\t\t}\n\t}\n\thandleIncomingRequest(message) {\n\t\tif (message.method === \"reconnect\") this.reconnect(new TRPCWebSocketClosedError({ message: \"Server requested reconnect\" }));\n\t}\n\t/**\n\t* Sends a message or batch of messages directly to the server.\n\t*/\n\tsend(messageOrMessages) {\n\t\tif (!this.activeConnection.isOpen()) throw new Error(\"Active connection is not open\");\n\t\tconst messages = messageOrMessages instanceof Array ? messageOrMessages : [messageOrMessages];\n\t\tthis.activeConnection.ws.send(JSON.stringify(messages.length === 1 ? messages[0] : messages));\n\t}\n\t/**\n\t* Groups requests for batch sending.\n\t*\n\t* @returns A function to abort the batched request.\n\t*/\n\tbatchSend(message, callbacks) {\n\t\tvar _this5 = this;\n\t\tthis.inactivityTimeout.reset();\n\t\t(0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_6__.run)(async () => {\n\t\t\tif (!_this5.activeConnection.isOpen()) await _this5.open();\n\t\t\tawait (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_6__.sleep)(0);\n\t\t\tif (!_this5.requestManager.hasOutgoingRequests()) return;\n\t\t\t_this5.send(_this5.requestManager.flush().map(({ message: message$1 }) => message$1));\n\t\t}).catch((err) => {\n\t\t\tthis.requestManager.delete(message.id);\n\t\t\tcallbacks.error(_TRPCClientError_CjKyS10w_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCClientError.from(err));\n\t\t});\n\t\treturn this.requestManager.register(message, callbacks);\n\t}\n};\n\n//#endregion\n//#region src/links/wsLink/createWsClient.ts\nfunction createWSClient(opts) {\n\treturn new WsClient(opts);\n}\n\n//#endregion\n//#region src/links/wsLink/wsLink.ts\nfunction wsLink(opts) {\n\tconst { client } = opts;\n\tconst transformer = (0,_unstable_internals_Bg7n9BBj_mjs__WEBPACK_IMPORTED_MODULE_2__.getTransformer)(opts.transformer);\n\treturn () => {\n\t\treturn ({ op }) => {\n\t\t\treturn (0,_trpc_server_observable__WEBPACK_IMPORTED_MODULE_4__.observable)((observer) => {\n\t\t\t\tconst connStateSubscription = op.type === \"subscription\" ? client.connectionState.subscribe({ next(result) {\n\t\t\t\t\tobserver.next({\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\tcontext: op.context\n\t\t\t\t\t});\n\t\t\t\t} }) : null;\n\t\t\t\tconst requestSubscription = client.request({\n\t\t\t\t\top,\n\t\t\t\t\ttransformer\n\t\t\t\t}).subscribe(observer);\n\t\t\t\treturn () => {\n\t\t\t\t\trequestSubscription.unsubscribe();\n\t\t\t\t\tconnStateSubscription === null || connStateSubscription === void 0 || connStateSubscription.unsubscribe();\n\t\t\t\t};\n\t\t\t});\n\t\t};\n\t};\n}\n\n//#endregion\n\n//# sourceMappingURL=wsLink-H5IjZfJW.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/client/dist/wsLink-H5IjZfJW.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/react-query/dist/getQueryKey-BY58RNzP.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@trpc/react-query/dist/getQueryKey-BY58RNzP.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __commonJS: () => (/* binding */ __commonJS),\n/* harmony export */   __toESM: () => (/* binding */ __toESM),\n/* harmony export */   getMutationKey: () => (/* binding */ getMutationKey),\n/* harmony export */   getMutationKeyInternal: () => (/* binding */ getMutationKeyInternal),\n/* harmony export */   getQueryKey: () => (/* binding */ getQueryKey),\n/* harmony export */   getQueryKeyInternal: () => (/* binding */ getQueryKeyInternal),\n/* harmony export */   require_objectSpread2: () => (/* binding */ require_objectSpread2),\n/* harmony export */   require_objectWithoutProperties: () => (/* binding */ require_objectWithoutProperties)\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/unstable-core-do-not-import */ \"(ssr)/./node_modules/@trpc/server/dist/utils-DdbbrDku.mjs\");\n\n\n\n//#region rolldown:runtime\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function() {\n\treturn mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n\tif (from && typeof from === \"object\" || typeof from === \"function\") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {\n\t\tkey = keys[i];\n\t\tif (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n\t\t\tget: ((k) => from[k]).bind(null, key),\n\t\t\tenumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n\t\t});\n\t}\n\treturn to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n\tvalue: mod,\n\tenumerable: true\n}) : target, mod));\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectWithoutPropertiesLoose.js\nvar require_objectWithoutPropertiesLoose = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectWithoutPropertiesLoose.js\"(exports, module) {\n\tfunction _objectWithoutPropertiesLoose(r, e) {\n\t\tif (null == r) return {};\n\t\tvar t = {};\n\t\tfor (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n\t\t\tif (e.includes(n)) continue;\n\t\t\tt[n] = r[n];\n\t\t}\n\t\treturn t;\n\t}\n\tmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectWithoutProperties.js\nvar require_objectWithoutProperties = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectWithoutProperties.js\"(exports, module) {\n\tvar objectWithoutPropertiesLoose = require_objectWithoutPropertiesLoose();\n\tfunction _objectWithoutProperties$1(e, t) {\n\t\tif (null == e) return {};\n\t\tvar o, r, i = objectWithoutPropertiesLoose(e, t);\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tvar s = Object.getOwnPropertySymbols(e);\n\t\t\tfor (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n\t\t}\n\t\treturn i;\n\t}\n\tmodule.exports = _objectWithoutProperties$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/typeof.js\nvar require_typeof = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/typeof.js\"(exports, module) {\n\tfunction _typeof$2(o) {\n\t\t\"@babel/helpers - typeof\";\n\t\treturn module.exports = _typeof$2 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o$1) {\n\t\t\treturn typeof o$1;\n\t\t} : function(o$1) {\n\t\t\treturn o$1 && \"function\" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? \"symbol\" : typeof o$1;\n\t\t}, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof$2(o);\n\t}\n\tmodule.exports = _typeof$2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPrimitive.js\nvar require_toPrimitive = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPrimitive.js\"(exports, module) {\n\tvar _typeof$1 = require_typeof()[\"default\"];\n\tfunction toPrimitive$1(t, r) {\n\t\tif (\"object\" != _typeof$1(t) || !t) return t;\n\t\tvar e = t[Symbol.toPrimitive];\n\t\tif (void 0 !== e) {\n\t\t\tvar i = e.call(t, r || \"default\");\n\t\t\tif (\"object\" != _typeof$1(i)) return i;\n\t\t\tthrow new TypeError(\"@@toPrimitive must return a primitive value.\");\n\t\t}\n\t\treturn (\"string\" === r ? String : Number)(t);\n\t}\n\tmodule.exports = toPrimitive$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPropertyKey.js\nvar require_toPropertyKey = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPropertyKey.js\"(exports, module) {\n\tvar _typeof = require_typeof()[\"default\"];\n\tvar toPrimitive = require_toPrimitive();\n\tfunction toPropertyKey$1(t) {\n\t\tvar i = toPrimitive(t, \"string\");\n\t\treturn \"symbol\" == _typeof(i) ? i : i + \"\";\n\t}\n\tmodule.exports = toPropertyKey$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/defineProperty.js\nvar require_defineProperty = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/defineProperty.js\"(exports, module) {\n\tvar toPropertyKey = require_toPropertyKey();\n\tfunction _defineProperty(e, r, t) {\n\t\treturn (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n\t\t\tvalue: t,\n\t\t\tenumerable: !0,\n\t\t\tconfigurable: !0,\n\t\t\twritable: !0\n\t\t}) : e[r] = t, e;\n\t}\n\tmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectSpread2.js\nvar require_objectSpread2 = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectSpread2.js\"(exports, module) {\n\tvar defineProperty = require_defineProperty();\n\tfunction ownKeys(e, r) {\n\t\tvar t = Object.keys(e);\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tvar o = Object.getOwnPropertySymbols(e);\n\t\t\tr && (o = o.filter(function(r$1) {\n\t\t\t\treturn Object.getOwnPropertyDescriptor(e, r$1).enumerable;\n\t\t\t})), t.push.apply(t, o);\n\t\t}\n\t\treturn t;\n\t}\n\tfunction _objectSpread2(e) {\n\t\tfor (var r = 1; r < arguments.length; r++) {\n\t\t\tvar t = null != arguments[r] ? arguments[r] : {};\n\t\t\tr % 2 ? ownKeys(Object(t), !0).forEach(function(r$1) {\n\t\t\t\tdefineProperty(e, r$1, t[r$1]);\n\t\t\t}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r$1) {\n\t\t\t\tObject.defineProperty(e, r$1, Object.getOwnPropertyDescriptor(t, r$1));\n\t\t\t});\n\t\t}\n\t\treturn e;\n\t}\n\tmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/internals/getQueryKey.ts\nvar import_objectWithoutProperties = __toESM(require_objectWithoutProperties(), 1);\nvar import_objectSpread2 = __toESM(require_objectSpread2(), 1);\nconst _excluded = [\"cursor\", \"direction\"];\n/**\n* To allow easy interactions with groups of related queries, such as\n* invalidating all queries of a router, we use an array as the path when\n* storing in tanstack query.\n**/\nfunction getQueryKeyInternal(path, input, type) {\n\tconst splitPath = path.flatMap((part) => part.split(\".\"));\n\tif (!input && (!type || type === \"any\")) return splitPath.length ? [splitPath] : [];\n\tif (type === \"infinite\" && (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_0__.isObject)(input) && (\"direction\" in input || \"cursor\" in input)) {\n\t\tconst { cursor: _, direction: __ } = input, inputWithoutCursorAndDirection = (0, import_objectWithoutProperties.default)(input, _excluded);\n\t\treturn [splitPath, {\n\t\t\tinput: inputWithoutCursorAndDirection,\n\t\t\ttype: \"infinite\"\n\t\t}];\n\t}\n\treturn [splitPath, (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, typeof input !== \"undefined\" && input !== _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.skipToken && { input }), type && type !== \"any\" && { type })];\n}\nfunction getMutationKeyInternal(path) {\n\treturn getQueryKeyInternal(path, void 0, \"any\");\n}\n/**\n* Method to extract the query key for a procedure\n* @param procedureOrRouter - procedure or AnyRouter\n* @param input - input to procedureOrRouter\n* @param type - defaults to `any`\n* @see https://trpc.io/docs/v11/getQueryKey\n*/\nfunction getQueryKey(procedureOrRouter, ..._params) {\n\tconst [input, type] = _params;\n\tconst path = procedureOrRouter._def().path;\n\tconst queryKey = getQueryKeyInternal(path, input, type !== null && type !== void 0 ? type : \"any\");\n\treturn queryKey;\n}\n/**\n* Method to extract the mutation key for a procedure\n* @param procedure - procedure\n* @see https://trpc.io/docs/v11/getQueryKey#mutations\n*/\nfunction getMutationKey(procedure) {\n\tconst path = procedure._def().path;\n\treturn getMutationKeyInternal(path);\n}\n\n//#endregion\n\n//# sourceMappingURL=getQueryKey-BY58RNzP.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvcmVhY3QtcXVlcnkvZGlzdC9nZXRRdWVyeUtleS1CWTU4Uk56UC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFrRDtBQUNrQjs7QUFFcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxhQUFhO0FBQ3ZFO0FBQ0E7QUFDQSwySUFBMkksT0FBTztBQUNsSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxtR0FBbUc7QUFDbkc7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLHdEQUF3RDtBQUN4RDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsY0FBYyxrQ0FBa0M7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixzQkFBc0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixrRkFBUTtBQUNwQyxVQUFVLDJCQUEyQjtBQUNyQztBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSwwRkFBMEYsNENBQTRDLDREQUFTLE1BQU0sT0FBTywrQkFBK0IsTUFBTTtBQUNqTTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ2lLO0FBQ2pLIiwic291cmNlcyI6WyIvVXNlcnMvYmxhaW5lY293ZW4vRG9jdW1lbnRzL1Byb2plY3RzL05GTC1TdGF0LVF1ZXJ5L25vZGVfbW9kdWxlcy9AdHJwYy9yZWFjdC1xdWVyeS9kaXN0L2dldFF1ZXJ5S2V5LUJZNThSTnpQLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBza2lwVG9rZW4gfSBmcm9tIFwiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5XCI7XG5pbXBvcnQgeyBpc09iamVjdCB9IGZyb20gXCJAdHJwYy9zZXJ2ZXIvdW5zdGFibGUtY29yZS1kby1ub3QtaW1wb3J0XCI7XG5cbi8vI3JlZ2lvbiByb2xsZG93bjpydW50aW1lXG52YXIgX19jcmVhdGUgPSBPYmplY3QuY3JlYXRlO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2dldE93blByb3BEZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBfX2dldE93blByb3BOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIF9fZ2V0UHJvdG9PZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fY29tbW9uSlMgPSAoY2IsIG1vZCkgPT4gZnVuY3Rpb24oKSB7XG5cdHJldHVybiBtb2QgfHwgKDAsIGNiW19fZ2V0T3duUHJvcE5hbWVzKGNiKVswXV0pKChtb2QgPSB7IGV4cG9ydHM6IHt9IH0pLmV4cG9ydHMsIG1vZCksIG1vZC5leHBvcnRzO1xufTtcbnZhciBfX2NvcHlQcm9wcyA9ICh0bywgZnJvbSwgZXhjZXB0LCBkZXNjKSA9PiB7XG5cdGlmIChmcm9tICYmIHR5cGVvZiBmcm9tID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBmcm9tID09PSBcImZ1bmN0aW9uXCIpIGZvciAodmFyIGtleXMgPSBfX2dldE93blByb3BOYW1lcyhmcm9tKSwgaSA9IDAsIG4gPSBrZXlzLmxlbmd0aCwga2V5OyBpIDwgbjsgaSsrKSB7XG5cdFx0a2V5ID0ga2V5c1tpXTtcblx0XHRpZiAoIV9faGFzT3duUHJvcC5jYWxsKHRvLCBrZXkpICYmIGtleSAhPT0gZXhjZXB0KSBfX2RlZlByb3AodG8sIGtleSwge1xuXHRcdFx0Z2V0OiAoKGspID0+IGZyb21ba10pLmJpbmQobnVsbCwga2V5KSxcblx0XHRcdGVudW1lcmFibGU6ICEoZGVzYyA9IF9fZ2V0T3duUHJvcERlc2MoZnJvbSwga2V5KSkgfHwgZGVzYy5lbnVtZXJhYmxlXG5cdFx0fSk7XG5cdH1cblx0cmV0dXJuIHRvO1xufTtcbnZhciBfX3RvRVNNID0gKG1vZCwgaXNOb2RlTW9kZSwgdGFyZ2V0KSA9PiAodGFyZ2V0ID0gbW9kICE9IG51bGwgPyBfX2NyZWF0ZShfX2dldFByb3RvT2YobW9kKSkgOiB7fSwgX19jb3B5UHJvcHMoaXNOb2RlTW9kZSB8fCAhbW9kIHx8ICFtb2QuX19lc01vZHVsZSA/IF9fZGVmUHJvcCh0YXJnZXQsIFwiZGVmYXVsdFwiLCB7XG5cdHZhbHVlOiBtb2QsXG5cdGVudW1lcmFibGU6IHRydWVcbn0pIDogdGFyZ2V0LCBtb2QpKTtcblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BveGMtcHJvamVjdCtydW50aW1lQDAuNzIuMi9ub2RlX21vZHVsZXMvQG94Yy1wcm9qZWN0L3J1bnRpbWUvc3JjL2hlbHBlcnMvb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qc1xudmFyIHJlcXVpcmVfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSA9IF9fY29tbW9uSlMoeyBcIi4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3hjLXByb2plY3QrcnVudGltZUAwLjcyLjIvbm9kZV9tb2R1bGVzL0BveGMtcHJvamVjdC9ydW50aW1lL3NyYy9oZWxwZXJzL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanNcIihleHBvcnRzLCBtb2R1bGUpIHtcblx0ZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UociwgZSkge1xuXHRcdGlmIChudWxsID09IHIpIHJldHVybiB7fTtcblx0XHR2YXIgdCA9IHt9O1xuXHRcdGZvciAodmFyIG4gaW4gcikgaWYgKHt9Lmhhc093blByb3BlcnR5LmNhbGwociwgbikpIHtcblx0XHRcdGlmIChlLmluY2x1ZGVzKG4pKSBjb250aW51ZTtcblx0XHRcdHRbbl0gPSByW25dO1xuXHRcdH1cblx0XHRyZXR1cm4gdDtcblx0fVxuXHRtb2R1bGUuZXhwb3J0cyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7XG59IH0pO1xuXG4vLyNlbmRyZWdpb25cbi8vI3JlZ2lvbiAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG94Yy1wcm9qZWN0K3J1bnRpbWVAMC43Mi4yL25vZGVfbW9kdWxlcy9Ab3hjLXByb2plY3QvcnVudGltZS9zcmMvaGVscGVycy9vYmplY3RXaXRob3V0UHJvcGVydGllcy5qc1xudmFyIHJlcXVpcmVfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgPSBfX2NvbW1vbkpTKHsgXCIuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG94Yy1wcm9qZWN0K3J1bnRpbWVAMC43Mi4yL25vZGVfbW9kdWxlcy9Ab3hjLXByb2plY3QvcnVudGltZS9zcmMvaGVscGVycy9vYmplY3RXaXRob3V0UHJvcGVydGllcy5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuXHR2YXIgb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSA9IHJlcXVpcmVfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSgpO1xuXHRmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMkMShlLCB0KSB7XG5cdFx0aWYgKG51bGwgPT0gZSkgcmV0dXJuIHt9O1xuXHRcdHZhciBvLCByLCBpID0gb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShlLCB0KTtcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0dmFyIHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO1xuXHRcdFx0Zm9yIChyID0gMDsgciA8IHMubGVuZ3RoOyByKyspIG8gPSBzW3JdLCB0LmluY2x1ZGVzKG8pIHx8IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoZSwgbykgJiYgKGlbb10gPSBlW29dKTtcblx0XHR9XG5cdFx0cmV0dXJuIGk7XG5cdH1cblx0bW9kdWxlLmV4cG9ydHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMkMSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xufSB9KTtcblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BveGMtcHJvamVjdCtydW50aW1lQDAuNzIuMi9ub2RlX21vZHVsZXMvQG94Yy1wcm9qZWN0L3J1bnRpbWUvc3JjL2hlbHBlcnMvdHlwZW9mLmpzXG52YXIgcmVxdWlyZV90eXBlb2YgPSBfX2NvbW1vbkpTKHsgXCIuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG94Yy1wcm9qZWN0K3J1bnRpbWVAMC43Mi4yL25vZGVfbW9kdWxlcy9Ab3hjLXByb2plY3QvcnVudGltZS9zcmMvaGVscGVycy90eXBlb2YuanNcIihleHBvcnRzLCBtb2R1bGUpIHtcblx0ZnVuY3Rpb24gX3R5cGVvZiQyKG8pIHtcblx0XHRcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiQyID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24obyQxKSB7XG5cdFx0XHRyZXR1cm4gdHlwZW9mIG8kMTtcblx0XHR9IDogZnVuY3Rpb24obyQxKSB7XG5cdFx0XHRyZXR1cm4gbyQxICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8kMS5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8kMSAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbyQxO1xuXHRcdH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cywgX3R5cGVvZiQyKG8pO1xuXHR9XG5cdG1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiQyLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7XG59IH0pO1xuXG4vLyNlbmRyZWdpb25cbi8vI3JlZ2lvbiAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG94Yy1wcm9qZWN0K3J1bnRpbWVAMC43Mi4yL25vZGVfbW9kdWxlcy9Ab3hjLXByb2plY3QvcnVudGltZS9zcmMvaGVscGVycy90b1ByaW1pdGl2ZS5qc1xudmFyIHJlcXVpcmVfdG9QcmltaXRpdmUgPSBfX2NvbW1vbkpTKHsgXCIuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG94Yy1wcm9qZWN0K3J1bnRpbWVAMC43Mi4yL25vZGVfbW9kdWxlcy9Ab3hjLXByb2plY3QvcnVudGltZS9zcmMvaGVscGVycy90b1ByaW1pdGl2ZS5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuXHR2YXIgX3R5cGVvZiQxID0gcmVxdWlyZV90eXBlb2YoKVtcImRlZmF1bHRcIl07XG5cdGZ1bmN0aW9uIHRvUHJpbWl0aXZlJDEodCwgcikge1xuXHRcdGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YkMSh0KSB8fCAhdCkgcmV0dXJuIHQ7XG5cdFx0dmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07XG5cdFx0aWYgKHZvaWQgMCAhPT0gZSkge1xuXHRcdFx0dmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7XG5cdFx0XHRpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mJDEoaSkpIHJldHVybiBpO1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpO1xuXHRcdH1cblx0XHRyZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpO1xuXHR9XG5cdG1vZHVsZS5leHBvcnRzID0gdG9QcmltaXRpdmUkMSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xufSB9KTtcblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BveGMtcHJvamVjdCtydW50aW1lQDAuNzIuMi9ub2RlX21vZHVsZXMvQG94Yy1wcm9qZWN0L3J1bnRpbWUvc3JjL2hlbHBlcnMvdG9Qcm9wZXJ0eUtleS5qc1xudmFyIHJlcXVpcmVfdG9Qcm9wZXJ0eUtleSA9IF9fY29tbW9uSlMoeyBcIi4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3hjLXByb2plY3QrcnVudGltZUAwLjcyLjIvbm9kZV9tb2R1bGVzL0BveGMtcHJvamVjdC9ydW50aW1lL3NyYy9oZWxwZXJzL3RvUHJvcGVydHlLZXkuanNcIihleHBvcnRzLCBtb2R1bGUpIHtcblx0dmFyIF90eXBlb2YgPSByZXF1aXJlX3R5cGVvZigpW1wiZGVmYXVsdFwiXTtcblx0dmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZV90b1ByaW1pdGl2ZSgpO1xuXHRmdW5jdGlvbiB0b1Byb3BlcnR5S2V5JDEodCkge1xuXHRcdHZhciBpID0gdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7XG5cdFx0cmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjtcblx0fVxuXHRtb2R1bGUuZXhwb3J0cyA9IHRvUHJvcGVydHlLZXkkMSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xufSB9KTtcblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BveGMtcHJvamVjdCtydW50aW1lQDAuNzIuMi9ub2RlX21vZHVsZXMvQG94Yy1wcm9qZWN0L3J1bnRpbWUvc3JjL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkuanNcbnZhciByZXF1aXJlX2RlZmluZVByb3BlcnR5ID0gX19jb21tb25KUyh7IFwiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BveGMtcHJvamVjdCtydW50aW1lQDAuNzIuMi9ub2RlX21vZHVsZXMvQG94Yy1wcm9qZWN0L3J1bnRpbWUvc3JjL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkuanNcIihleHBvcnRzLCBtb2R1bGUpIHtcblx0dmFyIHRvUHJvcGVydHlLZXkgPSByZXF1aXJlX3RvUHJvcGVydHlLZXkoKTtcblx0ZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KGUsIHIsIHQpIHtcblx0XHRyZXR1cm4gKHIgPSB0b1Byb3BlcnR5S2V5KHIpKSBpbiBlID8gT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIHtcblx0XHRcdHZhbHVlOiB0LFxuXHRcdFx0ZW51bWVyYWJsZTogITAsXG5cdFx0XHRjb25maWd1cmFibGU6ICEwLFxuXHRcdFx0d3JpdGFibGU6ICEwXG5cdFx0fSkgOiBlW3JdID0gdCwgZTtcblx0fVxuXHRtb2R1bGUuZXhwb3J0cyA9IF9kZWZpbmVQcm9wZXJ0eSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xufSB9KTtcblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BveGMtcHJvamVjdCtydW50aW1lQDAuNzIuMi9ub2RlX21vZHVsZXMvQG94Yy1wcm9qZWN0L3J1bnRpbWUvc3JjL2hlbHBlcnMvb2JqZWN0U3ByZWFkMi5qc1xudmFyIHJlcXVpcmVfb2JqZWN0U3ByZWFkMiA9IF9fY29tbW9uSlMoeyBcIi4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3hjLXByb2plY3QrcnVudGltZUAwLjcyLjIvbm9kZV9tb2R1bGVzL0BveGMtcHJvamVjdC9ydW50aW1lL3NyYy9oZWxwZXJzL29iamVjdFNwcmVhZDIuanNcIihleHBvcnRzLCBtb2R1bGUpIHtcblx0dmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZV9kZWZpbmVQcm9wZXJ0eSgpO1xuXHRmdW5jdGlvbiBvd25LZXlzKGUsIHIpIHtcblx0XHR2YXIgdCA9IE9iamVjdC5rZXlzKGUpO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHR2YXIgbyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7XG5cdFx0XHRyICYmIChvID0gby5maWx0ZXIoZnVuY3Rpb24ociQxKSB7XG5cdFx0XHRcdHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIkMSkuZW51bWVyYWJsZTtcblx0XHRcdH0pKSwgdC5wdXNoLmFwcGx5KHQsIG8pO1xuXHRcdH1cblx0XHRyZXR1cm4gdDtcblx0fVxuXHRmdW5jdGlvbiBfb2JqZWN0U3ByZWFkMihlKSB7XG5cdFx0Zm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHtcblx0XHRcdHZhciB0ID0gbnVsbCAhPSBhcmd1bWVudHNbcl0gPyBhcmd1bWVudHNbcl0gOiB7fTtcblx0XHRcdHIgJSAyID8gb3duS2V5cyhPYmplY3QodCksICEwKS5mb3JFYWNoKGZ1bmN0aW9uKHIkMSkge1xuXHRcdFx0XHRkZWZpbmVQcm9wZXJ0eShlLCByJDEsIHRbciQxXSk7XG5cdFx0XHR9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModCkpIDogb3duS2V5cyhPYmplY3QodCkpLmZvckVhY2goZnVuY3Rpb24ociQxKSB7XG5cdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByJDEsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCwgciQxKSk7XG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0cmV0dXJuIGU7XG5cdH1cblx0bW9kdWxlLmV4cG9ydHMgPSBfb2JqZWN0U3ByZWFkMiwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xufSB9KTtcblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gc3JjL2ludGVybmFscy9nZXRRdWVyeUtleS50c1xudmFyIGltcG9ydF9vYmplY3RXaXRob3V0UHJvcGVydGllcyA9IF9fdG9FU00ocmVxdWlyZV9vYmplY3RXaXRob3V0UHJvcGVydGllcygpLCAxKTtcbnZhciBpbXBvcnRfb2JqZWN0U3ByZWFkMiA9IF9fdG9FU00ocmVxdWlyZV9vYmplY3RTcHJlYWQyKCksIDEpO1xuY29uc3QgX2V4Y2x1ZGVkID0gW1wiY3Vyc29yXCIsIFwiZGlyZWN0aW9uXCJdO1xuLyoqXG4qIFRvIGFsbG93IGVhc3kgaW50ZXJhY3Rpb25zIHdpdGggZ3JvdXBzIG9mIHJlbGF0ZWQgcXVlcmllcywgc3VjaCBhc1xuKiBpbnZhbGlkYXRpbmcgYWxsIHF1ZXJpZXMgb2YgYSByb3V0ZXIsIHdlIHVzZSBhbiBhcnJheSBhcyB0aGUgcGF0aCB3aGVuXG4qIHN0b3JpbmcgaW4gdGFuc3RhY2sgcXVlcnkuXG4qKi9cbmZ1bmN0aW9uIGdldFF1ZXJ5S2V5SW50ZXJuYWwocGF0aCwgaW5wdXQsIHR5cGUpIHtcblx0Y29uc3Qgc3BsaXRQYXRoID0gcGF0aC5mbGF0TWFwKChwYXJ0KSA9PiBwYXJ0LnNwbGl0KFwiLlwiKSk7XG5cdGlmICghaW5wdXQgJiYgKCF0eXBlIHx8IHR5cGUgPT09IFwiYW55XCIpKSByZXR1cm4gc3BsaXRQYXRoLmxlbmd0aCA/IFtzcGxpdFBhdGhdIDogW107XG5cdGlmICh0eXBlID09PSBcImluZmluaXRlXCIgJiYgaXNPYmplY3QoaW5wdXQpICYmIChcImRpcmVjdGlvblwiIGluIGlucHV0IHx8IFwiY3Vyc29yXCIgaW4gaW5wdXQpKSB7XG5cdFx0Y29uc3QgeyBjdXJzb3I6IF8sIGRpcmVjdGlvbjogX18gfSA9IGlucHV0LCBpbnB1dFdpdGhvdXRDdXJzb3JBbmREaXJlY3Rpb24gPSAoMCwgaW1wb3J0X29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzLmRlZmF1bHQpKGlucHV0LCBfZXhjbHVkZWQpO1xuXHRcdHJldHVybiBbc3BsaXRQYXRoLCB7XG5cdFx0XHRpbnB1dDogaW5wdXRXaXRob3V0Q3Vyc29yQW5kRGlyZWN0aW9uLFxuXHRcdFx0dHlwZTogXCJpbmZpbml0ZVwiXG5cdFx0fV07XG5cdH1cblx0cmV0dXJuIFtzcGxpdFBhdGgsICgwLCBpbXBvcnRfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSgoMCwgaW1wb3J0X29iamVjdFNwcmVhZDIuZGVmYXVsdCkoe30sIHR5cGVvZiBpbnB1dCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBpbnB1dCAhPT0gc2tpcFRva2VuICYmIHsgaW5wdXQgfSksIHR5cGUgJiYgdHlwZSAhPT0gXCJhbnlcIiAmJiB7IHR5cGUgfSldO1xufVxuZnVuY3Rpb24gZ2V0TXV0YXRpb25LZXlJbnRlcm5hbChwYXRoKSB7XG5cdHJldHVybiBnZXRRdWVyeUtleUludGVybmFsKHBhdGgsIHZvaWQgMCwgXCJhbnlcIik7XG59XG4vKipcbiogTWV0aG9kIHRvIGV4dHJhY3QgdGhlIHF1ZXJ5IGtleSBmb3IgYSBwcm9jZWR1cmVcbiogQHBhcmFtIHByb2NlZHVyZU9yUm91dGVyIC0gcHJvY2VkdXJlIG9yIEFueVJvdXRlclxuKiBAcGFyYW0gaW5wdXQgLSBpbnB1dCB0byBwcm9jZWR1cmVPclJvdXRlclxuKiBAcGFyYW0gdHlwZSAtIGRlZmF1bHRzIHRvIGBhbnlgXG4qIEBzZWUgaHR0cHM6Ly90cnBjLmlvL2RvY3MvdjExL2dldFF1ZXJ5S2V5XG4qL1xuZnVuY3Rpb24gZ2V0UXVlcnlLZXkocHJvY2VkdXJlT3JSb3V0ZXIsIC4uLl9wYXJhbXMpIHtcblx0Y29uc3QgW2lucHV0LCB0eXBlXSA9IF9wYXJhbXM7XG5cdGNvbnN0IHBhdGggPSBwcm9jZWR1cmVPclJvdXRlci5fZGVmKCkucGF0aDtcblx0Y29uc3QgcXVlcnlLZXkgPSBnZXRRdWVyeUtleUludGVybmFsKHBhdGgsIGlucHV0LCB0eXBlICE9PSBudWxsICYmIHR5cGUgIT09IHZvaWQgMCA/IHR5cGUgOiBcImFueVwiKTtcblx0cmV0dXJuIHF1ZXJ5S2V5O1xufVxuLyoqXG4qIE1ldGhvZCB0byBleHRyYWN0IHRoZSBtdXRhdGlvbiBrZXkgZm9yIGEgcHJvY2VkdXJlXG4qIEBwYXJhbSBwcm9jZWR1cmUgLSBwcm9jZWR1cmVcbiogQHNlZSBodHRwczovL3RycGMuaW8vZG9jcy92MTEvZ2V0UXVlcnlLZXkjbXV0YXRpb25zXG4qL1xuZnVuY3Rpb24gZ2V0TXV0YXRpb25LZXkocHJvY2VkdXJlKSB7XG5cdGNvbnN0IHBhdGggPSBwcm9jZWR1cmUuX2RlZigpLnBhdGg7XG5cdHJldHVybiBnZXRNdXRhdGlvbktleUludGVybmFsKHBhdGgpO1xufVxuXG4vLyNlbmRyZWdpb25cbmV4cG9ydCB7IF9fY29tbW9uSlMsIF9fdG9FU00sIGdldE11dGF0aW9uS2V5LCBnZXRNdXRhdGlvbktleUludGVybmFsLCBnZXRRdWVyeUtleSwgZ2V0UXVlcnlLZXlJbnRlcm5hbCwgcmVxdWlyZV9vYmplY3RTcHJlYWQyLCByZXF1aXJlX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRRdWVyeUtleS1CWTU4Uk56UC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/react-query/dist/getQueryKey-BY58RNzP.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/react-query/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@trpc/react-query/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCClientError: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.TRPCClientError),\n/* harmony export */   TRPCUntypedClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.TRPCUntypedClient),\n/* harmony export */   clientCallTypeToProcedureType: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.clientCallTypeToProcedureType),\n/* harmony export */   createTRPCClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.createTRPCClient),\n/* harmony export */   createTRPCClientProxy: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.createTRPCClientProxy),\n/* harmony export */   createTRPCProxyClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.createTRPCProxyClient),\n/* harmony export */   createTRPCQueryUtils: () => (/* binding */ createTRPCQueryUtils),\n/* harmony export */   createTRPCReact: () => (/* binding */ createTRPCReact),\n/* harmony export */   createTRPCUntypedClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.createTRPCUntypedClient),\n/* harmony export */   createWSClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.createWSClient),\n/* harmony export */   experimental_localLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.experimental_localLink),\n/* harmony export */   getFetch: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.getFetch),\n/* harmony export */   getMutationKey: () => (/* reexport safe */ _getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getMutationKey),\n/* harmony export */   getQueryKey: () => (/* reexport safe */ _getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getQueryKey),\n/* harmony export */   getUntypedClient: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.getUntypedClient),\n/* harmony export */   httpBatchLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.httpBatchLink),\n/* harmony export */   httpBatchStreamLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.httpBatchStreamLink),\n/* harmony export */   httpLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.httpLink),\n/* harmony export */   httpSubscriptionLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.httpSubscriptionLink),\n/* harmony export */   isFormData: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.isFormData),\n/* harmony export */   isNonJsonSerializable: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.isNonJsonSerializable),\n/* harmony export */   isOctetType: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.isOctetType),\n/* harmony export */   isTRPCClientError: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.isTRPCClientError),\n/* harmony export */   loggerLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.loggerLink),\n/* harmony export */   retryLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.retryLink),\n/* harmony export */   splitLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.splitLink),\n/* harmony export */   unstable_httpBatchStreamLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.unstable_httpBatchStreamLink),\n/* harmony export */   unstable_httpSubscriptionLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.unstable_httpSubscriptionLink),\n/* harmony export */   unstable_localLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.unstable_localLink),\n/* harmony export */   wsLink: () => (/* reexport safe */ _trpc_client__WEBPACK_IMPORTED_MODULE_3__.wsLink)\n/* harmony export */ });\n/* harmony import */ var _getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getQueryKey-BY58RNzP.mjs */ \"(ssr)/./node_modules/@trpc/react-query/dist/getQueryKey-BY58RNzP.mjs\");\n/* harmony import */ var _shared_JtnEvJvB_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared-JtnEvJvB.mjs */ \"(ssr)/./node_modules/@trpc/react-query/dist/shared-JtnEvJvB.mjs\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @trpc/server/unstable-core-do-not-import */ \"(ssr)/./node_modules/@trpc/server/dist/getErrorShape-Uhlrl4Bk.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _trpc_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @trpc/client */ \"(ssr)/./node_modules/@trpc/client/dist/index.mjs\");\n\n\n\n\n\n\n\n//#region src/createTRPCReact.tsx\n/**\n* @internal\n*/\nfunction createHooksInternal(trpc) {\n\tconst proxy = (0,_shared_JtnEvJvB_mjs__WEBPACK_IMPORTED_MODULE_1__.createReactDecoration)(trpc);\n\treturn (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_4__.createFlatProxy)((key) => {\n\t\tif (key === \"useContext\" || key === \"useUtils\") return () => {\n\t\t\tconst context = trpc.useUtils();\n\t\t\treturn react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => {\n\t\t\t\treturn (0,_shared_JtnEvJvB_mjs__WEBPACK_IMPORTED_MODULE_1__.createReactQueryUtils)(context);\n\t\t\t}, [context]);\n\t\t};\n\t\tif (trpc.hasOwnProperty(key)) return trpc[key];\n\t\treturn proxy[key];\n\t});\n}\nfunction createTRPCReact(opts) {\n\tconst hooks = (0,_shared_JtnEvJvB_mjs__WEBPACK_IMPORTED_MODULE_1__.createRootHooks)(opts);\n\tconst proxy = createHooksInternal(hooks);\n\treturn proxy;\n}\n\n//#endregion\n//#region src/createTRPCQueryUtils.tsx\nfunction createTRPCQueryUtils(opts) {\n\tconst utils = (0,_shared_JtnEvJvB_mjs__WEBPACK_IMPORTED_MODULE_1__.createUtilityFunctions)(opts);\n\treturn (0,_shared_JtnEvJvB_mjs__WEBPACK_IMPORTED_MODULE_1__.createQueryUtilsProxy)(utils);\n}\n\n//#endregion\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvcmVhY3QtcXVlcnkvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUU7QUFDNEU7QUFDMUU7QUFDNUM7O0FBRUg7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDJFQUFxQjtBQUNwQyxRQUFRLHlGQUFlO0FBQ3ZCO0FBQ0E7QUFDQSxVQUFVLDBDQUFhO0FBQ3ZCLFdBQVcsMkVBQXFCO0FBQ2hDLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBLGVBQWUscUVBQWU7QUFDOUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNEVBQXNCO0FBQ3JDLFFBQVEsMkVBQXFCO0FBQzdCOztBQUVBO0FBQzhFO0FBQzlFIiwic291cmNlcyI6WyIvVXNlcnMvYmxhaW5lY293ZW4vRG9jdW1lbnRzL1Byb2plY3RzL05GTC1TdGF0LVF1ZXJ5L25vZGVfbW9kdWxlcy9AdHJwYy9yZWFjdC1xdWVyeS9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRNdXRhdGlvbktleSwgZ2V0UXVlcnlLZXkgfSBmcm9tIFwiLi9nZXRRdWVyeUtleS1CWTU4Uk56UC5tanNcIjtcbmltcG9ydCB7IGNyZWF0ZVF1ZXJ5VXRpbHNQcm94eSwgY3JlYXRlUmVhY3REZWNvcmF0aW9uLCBjcmVhdGVSZWFjdFF1ZXJ5VXRpbHMsIGNyZWF0ZVJvb3RIb29rcywgY3JlYXRlVXRpbGl0eUZ1bmN0aW9ucyB9IGZyb20gXCIuL3NoYXJlZC1KdG5Fdkp2Qi5tanNcIjtcbmltcG9ydCB7IGNyZWF0ZUZsYXRQcm94eSB9IGZyb20gXCJAdHJwYy9zZXJ2ZXIvdW5zdGFibGUtY29yZS1kby1ub3QtaW1wb3J0XCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0ICogZnJvbSBcIkB0cnBjL2NsaWVudFwiXG5cbi8vI3JlZ2lvbiBzcmMvY3JlYXRlVFJQQ1JlYWN0LnRzeFxuLyoqXG4qIEBpbnRlcm5hbFxuKi9cbmZ1bmN0aW9uIGNyZWF0ZUhvb2tzSW50ZXJuYWwodHJwYykge1xuXHRjb25zdCBwcm94eSA9IGNyZWF0ZVJlYWN0RGVjb3JhdGlvbih0cnBjKTtcblx0cmV0dXJuIGNyZWF0ZUZsYXRQcm94eSgoa2V5KSA9PiB7XG5cdFx0aWYgKGtleSA9PT0gXCJ1c2VDb250ZXh0XCIgfHwga2V5ID09PSBcInVzZVV0aWxzXCIpIHJldHVybiAoKSA9PiB7XG5cdFx0XHRjb25zdCBjb250ZXh0ID0gdHJwYy51c2VVdGlscygpO1xuXHRcdFx0cmV0dXJuIFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuXHRcdFx0XHRyZXR1cm4gY3JlYXRlUmVhY3RRdWVyeVV0aWxzKGNvbnRleHQpO1xuXHRcdFx0fSwgW2NvbnRleHRdKTtcblx0XHR9O1xuXHRcdGlmICh0cnBjLmhhc093blByb3BlcnR5KGtleSkpIHJldHVybiB0cnBjW2tleV07XG5cdFx0cmV0dXJuIHByb3h5W2tleV07XG5cdH0pO1xufVxuZnVuY3Rpb24gY3JlYXRlVFJQQ1JlYWN0KG9wdHMpIHtcblx0Y29uc3QgaG9va3MgPSBjcmVhdGVSb290SG9va3Mob3B0cyk7XG5cdGNvbnN0IHByb3h5ID0gY3JlYXRlSG9va3NJbnRlcm5hbChob29rcyk7XG5cdHJldHVybiBwcm94eTtcbn1cblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gc3JjL2NyZWF0ZVRSUENRdWVyeVV0aWxzLnRzeFxuZnVuY3Rpb24gY3JlYXRlVFJQQ1F1ZXJ5VXRpbHMob3B0cykge1xuXHRjb25zdCB1dGlscyA9IGNyZWF0ZVV0aWxpdHlGdW5jdGlvbnMob3B0cyk7XG5cdHJldHVybiBjcmVhdGVRdWVyeVV0aWxzUHJveHkodXRpbHMpO1xufVxuXG4vLyNlbmRyZWdpb25cbmV4cG9ydCB7IGNyZWF0ZVRSUENRdWVyeVV0aWxzLCBjcmVhdGVUUlBDUmVhY3QsIGdldE11dGF0aW9uS2V5LCBnZXRRdWVyeUtleSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/react-query/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/react-query/dist/shared-JtnEvJvB.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@trpc/react-query/dist/shared-JtnEvJvB.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var react__WEBPACK_IMPORTED_MODULE_2___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCContext: () => (/* binding */ TRPCContext),\n/* harmony export */   contextProps: () => (/* binding */ contextProps),\n/* harmony export */   createQueryUtilsProxy: () => (/* binding */ createQueryUtilsProxy),\n/* harmony export */   createReactDecoration: () => (/* binding */ createReactDecoration),\n/* harmony export */   createReactQueryUtils: () => (/* binding */ createReactQueryUtils),\n/* harmony export */   createRootHooks: () => (/* binding */ createRootHooks),\n/* harmony export */   createUseQueries: () => (/* binding */ createUseQueries),\n/* harmony export */   createUtilityFunctions: () => (/* binding */ createUtilityFunctions),\n/* harmony export */   getClientArgs: () => (/* binding */ getClientArgs),\n/* harmony export */   getQueryClient: () => (/* binding */ getQueryClient),\n/* harmony export */   getQueryType: () => (/* binding */ getQueryType)\n/* harmony export */ });\n/* harmony import */ var _getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getQueryKey-BY58RNzP.mjs */ \"(ssr)/./node_modules/@trpc/react-query/dist/getQueryKey-BY58RNzP.mjs\");\n/* harmony import */ var _trpc_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/client */ \"(ssr)/./node_modules/@trpc/client/dist/index.mjs\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/infiniteQueryOptions.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/queryOptions.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/usePrefetchQuery.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/useSuspenseQuery.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/useMutation.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/usePrefetchInfiniteQuery.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/useSuspenseInfiniteQuery.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/useQueries.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/react-query/build/modern/useSuspenseQueries.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @tanstack/react-query */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/queryClient.js\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @trpc/server/unstable-core-do-not-import */ \"(ssr)/./node_modules/@trpc/server/dist/getErrorShape-Uhlrl4Bk.mjs\");\n/* harmony import */ var _trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @trpc/server/unstable-core-do-not-import */ \"(ssr)/./node_modules/@trpc/server/dist/utils-DdbbrDku.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n\n\n\n\n\n\n\n\n\n//#region src/shared/proxy/decorationProxy.ts\n/**\n* Create proxy for decorating procedures\n* @internal\n*/\nfunction createReactDecoration(hooks) {\n\treturn (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_4__.createRecursiveProxy)(({ path, args }) => {\n\t\tvar _rest$;\n\t\tconst pathCopy = [...path];\n\t\tconst lastArg = pathCopy.pop();\n\t\tif (lastArg === \"useMutation\") return hooks[lastArg](pathCopy, ...args);\n\t\tif (lastArg === \"_def\") return { path: pathCopy };\n\t\tconst [input, ...rest] = args;\n\t\tconst opts = (_rest$ = rest[0]) !== null && _rest$ !== void 0 ? _rest$ : {};\n\t\treturn hooks[lastArg](pathCopy, input, opts);\n\t});\n}\n\n//#endregion\n//#region src/internals/context.tsx\nvar _React$createContext;\nconst contextProps = [\n\t\"client\",\n\t\"ssrContext\",\n\t\"ssrState\",\n\t\"abortOnUnmount\"\n];\nconst TRPCContext = (_React$createContext = react__WEBPACK_IMPORTED_MODULE_2__.createContext) === null || _React$createContext === void 0 ? void 0 : _React$createContext.call(/*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_2__, 2))), null);\n\n//#endregion\n//#region src/shared/proxy/utilsProxy.ts\nconst getQueryType = (utilName) => {\n\tswitch (utilName) {\n\t\tcase \"queryOptions\":\n\t\tcase \"fetch\":\n\t\tcase \"ensureData\":\n\t\tcase \"prefetch\":\n\t\tcase \"getData\":\n\t\tcase \"setData\":\n\t\tcase \"setQueriesData\": return \"query\";\n\t\tcase \"infiniteQueryOptions\":\n\t\tcase \"fetchInfinite\":\n\t\tcase \"prefetchInfinite\":\n\t\tcase \"getInfiniteData\":\n\t\tcase \"setInfiniteData\": return \"infinite\";\n\t\tcase \"setMutationDefaults\":\n\t\tcase \"getMutationDefaults\":\n\t\tcase \"isMutating\":\n\t\tcase \"cancel\":\n\t\tcase \"invalidate\":\n\t\tcase \"refetch\":\n\t\tcase \"reset\": return \"any\";\n\t}\n};\n/**\n* @internal\n*/\nfunction createRecursiveUtilsProxy(context) {\n\treturn (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_4__.createRecursiveProxy)((opts) => {\n\t\tconst path = [...opts.path];\n\t\tconst utilName = path.pop();\n\t\tconst args = [...opts.args];\n\t\tconst input = args.shift();\n\t\tconst queryType = getQueryType(utilName);\n\t\tconst queryKey = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getQueryKeyInternal)(path, input, queryType);\n\t\tconst contextMap = {\n\t\t\tinfiniteQueryOptions: () => context.infiniteQueryOptions(path, queryKey, args[0]),\n\t\t\tqueryOptions: () => context.queryOptions(path, queryKey, ...args),\n\t\t\tfetch: () => context.fetchQuery(queryKey, ...args),\n\t\t\tfetchInfinite: () => context.fetchInfiniteQuery(queryKey, args[0]),\n\t\t\tprefetch: () => context.prefetchQuery(queryKey, ...args),\n\t\t\tprefetchInfinite: () => context.prefetchInfiniteQuery(queryKey, args[0]),\n\t\t\tensureData: () => context.ensureQueryData(queryKey, ...args),\n\t\t\tinvalidate: () => context.invalidateQueries(queryKey, ...args),\n\t\t\treset: () => context.resetQueries(queryKey, ...args),\n\t\t\trefetch: () => context.refetchQueries(queryKey, ...args),\n\t\t\tcancel: () => context.cancelQuery(queryKey, ...args),\n\t\t\tsetData: () => {\n\t\t\t\tcontext.setQueryData(queryKey, args[0], args[1]);\n\t\t\t},\n\t\t\tsetQueriesData: () => context.setQueriesData(queryKey, args[0], args[1], args[2]),\n\t\t\tsetInfiniteData: () => {\n\t\t\t\tcontext.setInfiniteQueryData(queryKey, args[0], args[1]);\n\t\t\t},\n\t\t\tgetData: () => context.getQueryData(queryKey),\n\t\t\tgetInfiniteData: () => context.getInfiniteQueryData(queryKey),\n\t\t\tsetMutationDefaults: () => context.setMutationDefaults((0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getMutationKeyInternal)(path), input),\n\t\t\tgetMutationDefaults: () => context.getMutationDefaults((0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getMutationKeyInternal)(path)),\n\t\t\tisMutating: () => context.isMutating({ mutationKey: (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getMutationKeyInternal)(path) })\n\t\t};\n\t\treturn contextMap[utilName]();\n\t});\n}\n/**\n* @internal\n*/\nfunction createReactQueryUtils(context) {\n\tconst clientProxy = (0,_trpc_client__WEBPACK_IMPORTED_MODULE_1__.createTRPCClientProxy)(context.client);\n\tconst proxy = createRecursiveUtilsProxy(context);\n\treturn (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_4__.createFlatProxy)((key) => {\n\t\tconst contextName = key;\n\t\tif (contextName === \"client\") return clientProxy;\n\t\tif (contextProps.includes(contextName)) return context[contextName];\n\t\treturn proxy[key];\n\t});\n}\n/**\n* @internal\n*/\nfunction createQueryUtilsProxy(context) {\n\treturn createRecursiveUtilsProxy(context);\n}\n\n//#endregion\n//#region src/shared/proxy/useQueriesProxy.ts\nvar import_objectSpread2$3 = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\n/**\n* Create proxy for `useQueries` options\n* @internal\n*/\nfunction createUseQueries(client) {\n\tconst untypedClient = client instanceof _trpc_client__WEBPACK_IMPORTED_MODULE_1__.TRPCUntypedClient ? client : (0,_trpc_client__WEBPACK_IMPORTED_MODULE_1__.getUntypedClient)(client);\n\treturn (0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_4__.createRecursiveProxy)((opts) => {\n\t\tconst arrayPath = opts.path;\n\t\tconst dotPath = arrayPath.join(\".\");\n\t\tconst [input, _opts] = opts.args;\n\t\tconst options = (0, import_objectSpread2$3.default)({\n\t\t\tqueryKey: (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getQueryKeyInternal)(arrayPath, input, \"query\"),\n\t\t\tqueryFn: () => {\n\t\t\t\treturn untypedClient.query(dotPath, input, _opts === null || _opts === void 0 ? void 0 : _opts.trpc);\n\t\t\t}\n\t\t}, _opts);\n\t\treturn options;\n\t});\n}\n\n//#endregion\n//#region src/internals/getClientArgs.ts\nvar import_objectSpread2$2 = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\n/**\n* @internal\n*/\nfunction getClientArgs(queryKey, opts, infiniteParams) {\n\tvar _queryKey$;\n\tconst path = queryKey[0];\n\tlet input = (_queryKey$ = queryKey[1]) === null || _queryKey$ === void 0 ? void 0 : _queryKey$.input;\n\tif (infiniteParams) {\n\t\tvar _input;\n\t\tinput = (0, import_objectSpread2$2.default)((0, import_objectSpread2$2.default)((0, import_objectSpread2$2.default)({}, (_input = input) !== null && _input !== void 0 ? _input : {}), infiniteParams.pageParam ? { cursor: infiniteParams.pageParam } : {}), {}, { direction: infiniteParams.direction });\n\t}\n\treturn [\n\t\tpath.join(\".\"),\n\t\tinput,\n\t\topts === null || opts === void 0 ? void 0 : opts.trpc\n\t];\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncIterator.js\nvar require_asyncIterator = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncIterator.js\"(exports, module) {\n\tfunction _asyncIterator$1(r) {\n\t\tvar n, t, o, e = 2;\n\t\tfor (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n\t\t\tif (t && null != (n = r[t])) return n.call(r);\n\t\t\tif (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n\t\t\tt = \"@@asyncIterator\", o = \"@@iterator\";\n\t\t}\n\t\tthrow new TypeError(\"Object is not async iterable\");\n\t}\n\tfunction AsyncFromSyncIterator(r) {\n\t\tfunction AsyncFromSyncIteratorContinuation(r$1) {\n\t\t\tif (Object(r$1) !== r$1) return Promise.reject(new TypeError(r$1 + \" is not an object.\"));\n\t\t\tvar n = r$1.done;\n\t\t\treturn Promise.resolve(r$1.value).then(function(r$2) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: r$2,\n\t\t\t\t\tdone: n\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn AsyncFromSyncIterator = function AsyncFromSyncIterator$1(r$1) {\n\t\t\tthis.s = r$1, this.n = r$1.next;\n\t\t}, AsyncFromSyncIterator.prototype = {\n\t\t\ts: null,\n\t\t\tn: null,\n\t\t\tnext: function next() {\n\t\t\t\treturn AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n\t\t\t},\n\t\t\t\"return\": function _return(r$1) {\n\t\t\t\tvar n = this.s[\"return\"];\n\t\t\t\treturn void 0 === n ? Promise.resolve({\n\t\t\t\t\tvalue: r$1,\n\t\t\t\t\tdone: !0\n\t\t\t\t}) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n\t\t\t},\n\t\t\t\"throw\": function _throw(r$1) {\n\t\t\t\tvar n = this.s[\"return\"];\n\t\t\t\treturn void 0 === n ? Promise.reject(r$1) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n\t\t\t}\n\t\t}, new AsyncFromSyncIterator(r);\n\t}\n\tmodule.exports = _asyncIterator$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/internals/trpcResult.ts\nvar import_asyncIterator = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)(require_asyncIterator(), 1);\nfunction createTRPCOptionsResult(value) {\n\tconst path = value.path.join(\".\");\n\treturn { path };\n}\n/**\n* Makes a stable reference of the `trpc` prop\n*/\nfunction useHookResult(value) {\n\tconst result = createTRPCOptionsResult(value);\n\treturn react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => result, [result]);\n}\n/**\n* @internal\n*/\nasync function buildQueryFromAsyncIterable(asyncIterable, queryClient, queryKey) {\n\tconst queryCache = queryClient.getQueryCache();\n\tconst query = queryCache.build(queryClient, { queryKey });\n\tquery.setState({\n\t\tdata: [],\n\t\tstatus: \"success\"\n\t});\n\tconst aggregate = [];\n\tvar _iteratorAbruptCompletion = false;\n\tvar _didIteratorError = false;\n\tvar _iteratorError;\n\ttry {\n\t\tfor (var _iterator = (0, import_asyncIterator.default)(asyncIterable), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n\t\t\tconst value = _step.value;\n\t\t\t{\n\t\t\t\taggregate.push(value);\n\t\t\t\tquery.setState({ data: [...aggregate] });\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (_iteratorAbruptCompletion && _iterator.return != null) await _iterator.return();\n\t\t} finally {\n\t\t\tif (_didIteratorError) throw _iteratorError;\n\t\t}\n\t}\n\treturn aggregate;\n}\n\n//#endregion\n//#region src/utils/createUtilityFunctions.ts\nvar import_objectSpread2$1 = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\n/**\n* Creates a set of utility functions that can be used to interact with `react-query`\n* @param opts the `TRPCClient` and `QueryClient` to use\n* @returns a set of utility functions that can be used to interact with `react-query`\n* @internal\n*/\nfunction createUtilityFunctions(opts) {\n\tconst { client, queryClient } = opts;\n\tconst untypedClient = client instanceof _trpc_client__WEBPACK_IMPORTED_MODULE_1__.TRPCUntypedClient ? client : (0,_trpc_client__WEBPACK_IMPORTED_MODULE_1__.getUntypedClient)(client);\n\treturn {\n\t\tinfiniteQueryOptions: (path, queryKey, opts$1) => {\n\t\t\tvar _queryKey$, _ref;\n\t\t\tconst inputIsSkipToken = ((_queryKey$ = queryKey[1]) === null || _queryKey$ === void 0 ? void 0 : _queryKey$.input) === _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.skipToken;\n\t\t\tconst queryFn = async (queryFnContext) => {\n\t\t\t\tvar _opts$trpc;\n\t\t\t\tconst actualOpts = (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts$1), {}, { trpc: (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts$1 === null || opts$1 === void 0 ? void 0 : opts$1.trpc), (opts$1 === null || opts$1 === void 0 || (_opts$trpc = opts$1.trpc) === null || _opts$trpc === void 0 ? void 0 : _opts$trpc.abortOnUnmount) ? { signal: queryFnContext.signal } : { signal: null }) });\n\t\t\t\tconst result = await untypedClient.query(...getClientArgs(queryKey, actualOpts, {\n\t\t\t\t\tdirection: queryFnContext.direction,\n\t\t\t\t\tpageParam: queryFnContext.pageParam\n\t\t\t\t}));\n\t\t\t\treturn result;\n\t\t\t};\n\t\t\treturn Object.assign((0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryOptions)((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts$1), {}, {\n\t\t\t\tinitialData: opts$1 === null || opts$1 === void 0 ? void 0 : opts$1.initialData,\n\t\t\t\tqueryKey,\n\t\t\t\tqueryFn: inputIsSkipToken ? _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.skipToken : queryFn,\n\t\t\t\tinitialPageParam: (_ref = opts$1 === null || opts$1 === void 0 ? void 0 : opts$1.initialCursor) !== null && _ref !== void 0 ? _ref : null\n\t\t\t})), { trpc: createTRPCOptionsResult({ path }) });\n\t\t},\n\t\tqueryOptions: (path, queryKey, opts$1) => {\n\t\t\tvar _queryKey$2;\n\t\t\tconst inputIsSkipToken = ((_queryKey$2 = queryKey[1]) === null || _queryKey$2 === void 0 ? void 0 : _queryKey$2.input) === _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.skipToken;\n\t\t\tconst queryFn = async (queryFnContext) => {\n\t\t\t\tvar _opts$trpc2;\n\t\t\t\tconst actualOpts = (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts$1), {}, { trpc: (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts$1 === null || opts$1 === void 0 ? void 0 : opts$1.trpc), (opts$1 === null || opts$1 === void 0 || (_opts$trpc2 = opts$1.trpc) === null || _opts$trpc2 === void 0 ? void 0 : _opts$trpc2.abortOnUnmount) ? { signal: queryFnContext.signal } : { signal: null }) });\n\t\t\t\tconst result = await untypedClient.query(...getClientArgs(queryKey, actualOpts));\n\t\t\t\tif ((0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_7__.isAsyncIterable)(result)) return buildQueryFromAsyncIterable(result, queryClient, queryKey);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t\treturn Object.assign((0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_8__.queryOptions)((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts$1), {}, {\n\t\t\t\tinitialData: opts$1 === null || opts$1 === void 0 ? void 0 : opts$1.initialData,\n\t\t\t\tqueryKey,\n\t\t\t\tqueryFn: inputIsSkipToken ? _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.skipToken : queryFn\n\t\t\t})), { trpc: createTRPCOptionsResult({ path }) });\n\t\t},\n\t\tfetchQuery: (queryKey, opts$1) => {\n\t\t\treturn queryClient.fetchQuery((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts$1), {}, {\n\t\t\t\tqueryKey,\n\t\t\t\tqueryFn: () => untypedClient.query(...getClientArgs(queryKey, opts$1))\n\t\t\t}));\n\t\t},\n\t\tfetchInfiniteQuery: (queryKey, opts$1) => {\n\t\t\tvar _opts$initialCursor;\n\t\t\treturn queryClient.fetchInfiniteQuery((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts$1), {}, {\n\t\t\t\tqueryKey,\n\t\t\t\tqueryFn: ({ pageParam, direction }) => {\n\t\t\t\t\treturn untypedClient.query(...getClientArgs(queryKey, opts$1, {\n\t\t\t\t\t\tpageParam,\n\t\t\t\t\t\tdirection\n\t\t\t\t\t}));\n\t\t\t\t},\n\t\t\t\tinitialPageParam: (_opts$initialCursor = opts$1 === null || opts$1 === void 0 ? void 0 : opts$1.initialCursor) !== null && _opts$initialCursor !== void 0 ? _opts$initialCursor : null\n\t\t\t}));\n\t\t},\n\t\tprefetchQuery: (queryKey, opts$1) => {\n\t\t\treturn queryClient.prefetchQuery((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts$1), {}, {\n\t\t\t\tqueryKey,\n\t\t\t\tqueryFn: () => untypedClient.query(...getClientArgs(queryKey, opts$1))\n\t\t\t}));\n\t\t},\n\t\tprefetchInfiniteQuery: (queryKey, opts$1) => {\n\t\t\tvar _opts$initialCursor2;\n\t\t\treturn queryClient.prefetchInfiniteQuery((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts$1), {}, {\n\t\t\t\tqueryKey,\n\t\t\t\tqueryFn: ({ pageParam, direction }) => {\n\t\t\t\t\treturn untypedClient.query(...getClientArgs(queryKey, opts$1, {\n\t\t\t\t\t\tpageParam,\n\t\t\t\t\t\tdirection\n\t\t\t\t\t}));\n\t\t\t\t},\n\t\t\t\tinitialPageParam: (_opts$initialCursor2 = opts$1 === null || opts$1 === void 0 ? void 0 : opts$1.initialCursor) !== null && _opts$initialCursor2 !== void 0 ? _opts$initialCursor2 : null\n\t\t\t}));\n\t\t},\n\t\tensureQueryData: (queryKey, opts$1) => {\n\t\t\treturn queryClient.ensureQueryData((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, opts$1), {}, {\n\t\t\t\tqueryKey,\n\t\t\t\tqueryFn: () => untypedClient.query(...getClientArgs(queryKey, opts$1))\n\t\t\t}));\n\t\t},\n\t\tinvalidateQueries: (queryKey, filters, options) => {\n\t\t\treturn queryClient.invalidateQueries((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, filters), {}, { queryKey }), options);\n\t\t},\n\t\tresetQueries: (queryKey, filters, options) => {\n\t\t\treturn queryClient.resetQueries((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, filters), {}, { queryKey }), options);\n\t\t},\n\t\trefetchQueries: (queryKey, filters, options) => {\n\t\t\treturn queryClient.refetchQueries((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, filters), {}, { queryKey }), options);\n\t\t},\n\t\tcancelQuery: (queryKey, options) => {\n\t\t\treturn queryClient.cancelQueries({ queryKey }, options);\n\t\t},\n\t\tsetQueryData: (queryKey, updater, options) => {\n\t\t\treturn queryClient.setQueryData(queryKey, updater, options);\n\t\t},\n\t\tsetQueriesData: (queryKey, filters, updater, options) => {\n\t\t\treturn queryClient.setQueriesData((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, filters), {}, { queryKey }), updater, options);\n\t\t},\n\t\tgetQueryData: (queryKey) => {\n\t\t\treturn queryClient.getQueryData(queryKey);\n\t\t},\n\t\tsetInfiniteQueryData: (queryKey, updater, options) => {\n\t\t\treturn queryClient.setQueryData(queryKey, updater, options);\n\t\t},\n\t\tgetInfiniteQueryData: (queryKey) => {\n\t\t\treturn queryClient.getQueryData(queryKey);\n\t\t},\n\t\tsetMutationDefaults: (mutationKey, options) => {\n\t\t\tconst path = mutationKey[0];\n\t\t\tconst canonicalMutationFn = (input) => {\n\t\t\t\treturn untypedClient.mutation(...getClientArgs([path, { input }], opts));\n\t\t\t};\n\t\t\treturn queryClient.setMutationDefaults(mutationKey, typeof options === \"function\" ? options({ canonicalMutationFn }) : options);\n\t\t},\n\t\tgetMutationDefaults: (mutationKey) => {\n\t\t\treturn queryClient.getMutationDefaults(mutationKey);\n\t\t},\n\t\tisMutating: (filters) => {\n\t\t\treturn queryClient.isMutating((0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, filters), {}, { exact: true }));\n\t\t}\n\t};\n}\n\n//#endregion\n//#region src/shared/hooks/createHooksInternal.tsx\nvar import_objectSpread2 = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)());\nconst trackResult = (result, onTrackResult) => {\n\tconst trackedResult = new Proxy(result, { get(target, prop) {\n\t\tonTrackResult(prop);\n\t\treturn target[prop];\n\t} });\n\treturn trackedResult;\n};\n/**\n* @internal\n*/\nfunction createRootHooks(config) {\n\tvar _config$overrides$use, _config$overrides, _config$context;\n\tconst mutationSuccessOverride = (_config$overrides$use = config === null || config === void 0 || (_config$overrides = config.overrides) === null || _config$overrides === void 0 || (_config$overrides = _config$overrides.useMutation) === null || _config$overrides === void 0 ? void 0 : _config$overrides.onSuccess) !== null && _config$overrides$use !== void 0 ? _config$overrides$use : (options) => options.originalFn();\n\tconst Context = (_config$context = config === null || config === void 0 ? void 0 : config.context) !== null && _config$context !== void 0 ? _config$context : TRPCContext;\n\tconst createClient = _trpc_client__WEBPACK_IMPORTED_MODULE_1__.createTRPCClient;\n\tconst TRPCProvider = (props) => {\n\t\tvar _props$ssrState;\n\t\tconst { abortOnUnmount = false, queryClient, ssrContext } = props;\n\t\tconst [ssrState, setSSRState] = react__WEBPACK_IMPORTED_MODULE_2__.useState((_props$ssrState = props.ssrState) !== null && _props$ssrState !== void 0 ? _props$ssrState : false);\n\t\tconst client = props.client instanceof _trpc_client__WEBPACK_IMPORTED_MODULE_1__.TRPCUntypedClient ? props.client : (0,_trpc_client__WEBPACK_IMPORTED_MODULE_1__.getUntypedClient)(props.client);\n\t\tconst fns = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => createUtilityFunctions({\n\t\t\tclient,\n\t\t\tqueryClient\n\t\t}), [client, queryClient]);\n\t\tconst contextValue = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => (0, import_objectSpread2.default)({\n\t\t\tabortOnUnmount,\n\t\t\tqueryClient,\n\t\t\tclient,\n\t\t\tssrContext: ssrContext !== null && ssrContext !== void 0 ? ssrContext : null,\n\t\t\tssrState\n\t\t}, fns), [\n\t\t\tabortOnUnmount,\n\t\t\tclient,\n\t\t\tfns,\n\t\t\tqueryClient,\n\t\t\tssrContext,\n\t\t\tssrState\n\t\t]);\n\t\treact__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {\n\t\t\tsetSSRState((state) => state ? \"mounted\" : false);\n\t\t}, []);\n\t\treturn /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Context.Provider, {\n\t\t\tvalue: contextValue,\n\t\t\tchildren: props.children\n\t\t});\n\t};\n\tfunction useContext() {\n\t\tconst context = react__WEBPACK_IMPORTED_MODULE_2__.useContext(Context);\n\t\tif (!context) throw new Error(\"Unable to find tRPC Context. Did you forget to wrap your App inside `withTRPC` HoC?\");\n\t\treturn context;\n\t}\n\t/**\n\t* Hack to make sure errors return `status`='error` when doing SSR\n\t* @see https://github.com/trpc/trpc/pull/1645\n\t*/\n\tfunction useSSRQueryOptionsIfNeeded(queryKey, opts) {\n\t\tvar _queryClient$getQuery;\n\t\tconst { queryClient, ssrState } = useContext();\n\t\treturn ssrState && ssrState !== \"mounted\" && ((_queryClient$getQuery = queryClient.getQueryCache().find({ queryKey })) === null || _queryClient$getQuery === void 0 ? void 0 : _queryClient$getQuery.state.status) === \"error\" ? (0, import_objectSpread2.default)({ retryOnMount: false }, opts) : opts;\n\t}\n\tfunction useQuery$1(path, input, opts) {\n\t\tvar _opts$trpc, _opts$enabled, _ref, _opts$trpc$abortOnUnm, _opts$trpc2;\n\t\tconst context = useContext();\n\t\tconst { abortOnUnmount, client, ssrState, queryClient, prefetchQuery } = context;\n\t\tconst queryKey = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getQueryKeyInternal)(path, input, \"query\");\n\t\tconst defaultOpts = queryClient.getQueryDefaults(queryKey);\n\t\tconst isInputSkipToken = input === _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.skipToken;\n\t\tif (typeof window === \"undefined\" && ssrState === \"prepass\" && (opts === null || opts === void 0 || (_opts$trpc = opts.trpc) === null || _opts$trpc === void 0 ? void 0 : _opts$trpc.ssr) !== false && ((_opts$enabled = opts === null || opts === void 0 ? void 0 : opts.enabled) !== null && _opts$enabled !== void 0 ? _opts$enabled : defaultOpts === null || defaultOpts === void 0 ? void 0 : defaultOpts.enabled) !== false && !isInputSkipToken && !queryClient.getQueryCache().find({ queryKey })) prefetchQuery(queryKey, opts);\n\t\tconst ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, defaultOpts), opts));\n\t\tconst shouldAbortOnUnmount = (_ref = (_opts$trpc$abortOnUnm = opts === null || opts === void 0 || (_opts$trpc2 = opts.trpc) === null || _opts$trpc2 === void 0 ? void 0 : _opts$trpc2.abortOnUnmount) !== null && _opts$trpc$abortOnUnm !== void 0 ? _opts$trpc$abortOnUnm : config === null || config === void 0 ? void 0 : config.abortOnUnmount) !== null && _ref !== void 0 ? _ref : abortOnUnmount;\n\t\tconst hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_9__.useQuery)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, ssrOpts), {}, {\n\t\t\tqueryKey,\n\t\t\tqueryFn: isInputSkipToken ? input : async (queryFunctionContext) => {\n\t\t\t\tconst actualOpts = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, ssrOpts), {}, { trpc: (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, ssrOpts === null || ssrOpts === void 0 ? void 0 : ssrOpts.trpc), shouldAbortOnUnmount ? { signal: queryFunctionContext.signal } : { signal: null }) });\n\t\t\t\tconst result = await client.query(...getClientArgs(queryKey, actualOpts));\n\t\t\t\tif ((0,_trpc_server_unstable_core_do_not_import__WEBPACK_IMPORTED_MODULE_7__.isAsyncIterable)(result)) return buildQueryFromAsyncIterable(result, queryClient, queryKey);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}), queryClient);\n\t\thook.trpc = useHookResult({ path });\n\t\treturn hook;\n\t}\n\tfunction usePrefetchQuery$1(path, input, opts) {\n\t\tvar _ref2, _opts$trpc$abortOnUnm2, _opts$trpc3;\n\t\tconst context = useContext();\n\t\tconst queryKey = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getQueryKeyInternal)(path, input, \"query\");\n\t\tconst isInputSkipToken = input === _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.skipToken;\n\t\tconst shouldAbortOnUnmount = (_ref2 = (_opts$trpc$abortOnUnm2 = opts === null || opts === void 0 || (_opts$trpc3 = opts.trpc) === null || _opts$trpc3 === void 0 ? void 0 : _opts$trpc3.abortOnUnmount) !== null && _opts$trpc$abortOnUnm2 !== void 0 ? _opts$trpc$abortOnUnm2 : config === null || config === void 0 ? void 0 : config.abortOnUnmount) !== null && _ref2 !== void 0 ? _ref2 : context.abortOnUnmount;\n\t\t(0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_10__.usePrefetchQuery)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, {\n\t\t\tqueryKey,\n\t\t\tqueryFn: isInputSkipToken ? input : (queryFunctionContext) => {\n\t\t\t\tconst actualOpts = { trpc: (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts === null || opts === void 0 ? void 0 : opts.trpc), shouldAbortOnUnmount ? { signal: queryFunctionContext.signal } : {}) };\n\t\t\t\treturn context.client.query(...getClientArgs(queryKey, actualOpts));\n\t\t\t}\n\t\t}));\n\t}\n\tfunction useSuspenseQuery$1(path, input, opts) {\n\t\tvar _ref3, _opts$trpc$abortOnUnm3, _opts$trpc4;\n\t\tconst context = useContext();\n\t\tconst queryKey = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getQueryKeyInternal)(path, input, \"query\");\n\t\tconst shouldAbortOnUnmount = (_ref3 = (_opts$trpc$abortOnUnm3 = opts === null || opts === void 0 || (_opts$trpc4 = opts.trpc) === null || _opts$trpc4 === void 0 ? void 0 : _opts$trpc4.abortOnUnmount) !== null && _opts$trpc$abortOnUnm3 !== void 0 ? _opts$trpc$abortOnUnm3 : config === null || config === void 0 ? void 0 : config.abortOnUnmount) !== null && _ref3 !== void 0 ? _ref3 : context.abortOnUnmount;\n\t\tconst hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_11__.useSuspenseQuery)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, {\n\t\t\tqueryKey,\n\t\t\tqueryFn: (queryFunctionContext) => {\n\t\t\t\tconst actualOpts = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, { trpc: (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts === null || opts === void 0 ? void 0 : opts.trpc), shouldAbortOnUnmount ? { signal: queryFunctionContext.signal } : { signal: null }) });\n\t\t\t\treturn context.client.query(...getClientArgs(queryKey, actualOpts));\n\t\t\t}\n\t\t}), context.queryClient);\n\t\thook.trpc = useHookResult({ path });\n\t\treturn [hook.data, hook];\n\t}\n\tfunction useMutation$1(path, opts) {\n\t\tconst { client, queryClient } = useContext();\n\t\tconst mutationKey = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getMutationKeyInternal)(path);\n\t\tconst defaultOpts = queryClient.defaultMutationOptions(queryClient.getMutationDefaults(mutationKey));\n\t\tconst hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_12__.useMutation)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, {\n\t\t\tmutationKey,\n\t\t\tmutationFn: (input) => {\n\t\t\t\treturn client.mutation(...getClientArgs([path, { input }], opts));\n\t\t\t},\n\t\t\tonSuccess(...args) {\n\t\t\t\tvar _ref4, _opts$meta;\n\t\t\t\tconst originalFn = () => {\n\t\t\t\t\tvar _opts$onSuccess, _opts$onSuccess2, _defaultOpts$onSucces;\n\t\t\t\t\treturn (_opts$onSuccess = opts === null || opts === void 0 || (_opts$onSuccess2 = opts.onSuccess) === null || _opts$onSuccess2 === void 0 ? void 0 : _opts$onSuccess2.call(opts, ...args)) !== null && _opts$onSuccess !== void 0 ? _opts$onSuccess : defaultOpts === null || defaultOpts === void 0 || (_defaultOpts$onSucces = defaultOpts.onSuccess) === null || _defaultOpts$onSucces === void 0 ? void 0 : _defaultOpts$onSucces.call(defaultOpts, ...args);\n\t\t\t\t};\n\t\t\t\treturn mutationSuccessOverride({\n\t\t\t\t\toriginalFn,\n\t\t\t\t\tqueryClient,\n\t\t\t\t\tmeta: (_ref4 = (_opts$meta = opts === null || opts === void 0 ? void 0 : opts.meta) !== null && _opts$meta !== void 0 ? _opts$meta : defaultOpts === null || defaultOpts === void 0 ? void 0 : defaultOpts.meta) !== null && _ref4 !== void 0 ? _ref4 : {}\n\t\t\t\t});\n\t\t\t}\n\t\t}), queryClient);\n\t\thook.trpc = useHookResult({ path });\n\t\treturn hook;\n\t}\n\tconst initialStateIdle = {\n\t\tdata: void 0,\n\t\terror: null,\n\t\tstatus: \"idle\"\n\t};\n\tconst initialStateConnecting = {\n\t\tdata: void 0,\n\t\terror: null,\n\t\tstatus: \"connecting\"\n\t};\n\t/* istanbul ignore next -- @preserve */\n\tfunction useSubscription(path, input, opts) {\n\t\tvar _opts$enabled2;\n\t\tconst enabled = (_opts$enabled2 = opts === null || opts === void 0 ? void 0 : opts.enabled) !== null && _opts$enabled2 !== void 0 ? _opts$enabled2 : input !== _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.skipToken;\n\t\tconst queryKey = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.hashKey)((0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getQueryKeyInternal)(path, input, \"any\"));\n\t\tconst { client } = useContext();\n\t\tconst optsRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(opts);\n\t\treact__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {\n\t\t\toptsRef.current = opts;\n\t\t});\n\t\tconst [trackedProps] = react__WEBPACK_IMPORTED_MODULE_2__.useState(new Set([]));\n\t\tconst addTrackedProp = react__WEBPACK_IMPORTED_MODULE_2__.useCallback((key) => {\n\t\t\ttrackedProps.add(key);\n\t\t}, [trackedProps]);\n\t\tconst currentSubscriptionRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(null);\n\t\tconst updateState = react__WEBPACK_IMPORTED_MODULE_2__.useCallback((callback) => {\n\t\t\tconst prev = resultRef.current;\n\t\t\tconst next = resultRef.current = callback(prev);\n\t\t\tlet shouldUpdate = false;\n\t\t\tfor (const key of trackedProps) if (prev[key] !== next[key]) {\n\t\t\t\tshouldUpdate = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldUpdate) setState(trackResult(next, addTrackedProp));\n\t\t}, [addTrackedProp, trackedProps]);\n\t\tconst reset = react__WEBPACK_IMPORTED_MODULE_2__.useCallback(() => {\n\t\t\tvar _currentSubscriptionR;\n\t\t\t(_currentSubscriptionR = currentSubscriptionRef.current) === null || _currentSubscriptionR === void 0 || _currentSubscriptionR.unsubscribe();\n\t\t\tif (!enabled) {\n\t\t\t\tupdateState(() => (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, initialStateIdle), {}, { reset }));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tupdateState(() => (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, initialStateConnecting), {}, { reset }));\n\t\t\tconst subscription = client.subscription(path.join(\".\"), input !== null && input !== void 0 ? input : void 0, {\n\t\t\t\tonStarted: () => {\n\t\t\t\t\tvar _optsRef$current$onSt, _optsRef$current;\n\t\t\t\t\t(_optsRef$current$onSt = (_optsRef$current = optsRef.current).onStarted) === null || _optsRef$current$onSt === void 0 || _optsRef$current$onSt.call(_optsRef$current);\n\t\t\t\t\tupdateState((prev) => (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, prev), {}, {\n\t\t\t\t\t\tstatus: \"pending\",\n\t\t\t\t\t\terror: null\n\t\t\t\t\t}));\n\t\t\t\t},\n\t\t\t\tonData: (data) => {\n\t\t\t\t\tvar _optsRef$current$onDa, _optsRef$current2;\n\t\t\t\t\t(_optsRef$current$onDa = (_optsRef$current2 = optsRef.current).onData) === null || _optsRef$current$onDa === void 0 || _optsRef$current$onDa.call(_optsRef$current2, data);\n\t\t\t\t\tupdateState((prev) => (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, prev), {}, {\n\t\t\t\t\t\tstatus: \"pending\",\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\terror: null\n\t\t\t\t\t}));\n\t\t\t\t},\n\t\t\t\tonError: (error) => {\n\t\t\t\t\tvar _optsRef$current$onEr, _optsRef$current3;\n\t\t\t\t\t(_optsRef$current$onEr = (_optsRef$current3 = optsRef.current).onError) === null || _optsRef$current$onEr === void 0 || _optsRef$current$onEr.call(_optsRef$current3, error);\n\t\t\t\t\tupdateState((prev) => (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, prev), {}, {\n\t\t\t\t\t\tstatus: \"error\",\n\t\t\t\t\t\terror\n\t\t\t\t\t}));\n\t\t\t\t},\n\t\t\t\tonConnectionStateChange: (result) => {\n\t\t\t\t\tupdateState((prev) => {\n\t\t\t\t\t\tswitch (result.state) {\n\t\t\t\t\t\t\tcase \"idle\": return (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, prev), {}, {\n\t\t\t\t\t\t\t\tstatus: result.state,\n\t\t\t\t\t\t\t\terror: null,\n\t\t\t\t\t\t\t\tdata: void 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcase \"connecting\": return (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, prev), {}, {\n\t\t\t\t\t\t\t\terror: result.error,\n\t\t\t\t\t\t\t\tstatus: result.state\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcase \"pending\": return prev;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tvar _optsRef$current$onCo, _optsRef$current4;\n\t\t\t\t\t(_optsRef$current$onCo = (_optsRef$current4 = optsRef.current).onComplete) === null || _optsRef$current$onCo === void 0 || _optsRef$current$onCo.call(_optsRef$current4);\n\t\t\t\t\tupdateState((prev) => (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, prev), {}, {\n\t\t\t\t\t\tstatus: \"idle\",\n\t\t\t\t\t\terror: null,\n\t\t\t\t\t\tdata: void 0\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t});\n\t\t\tcurrentSubscriptionRef.current = subscription;\n\t\t}, [\n\t\t\tclient,\n\t\t\tqueryKey,\n\t\t\tenabled,\n\t\t\tupdateState\n\t\t]);\n\t\treact__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {\n\t\t\treset();\n\t\t\treturn () => {\n\t\t\t\tvar _currentSubscriptionR2;\n\t\t\t\t(_currentSubscriptionR2 = currentSubscriptionRef.current) === null || _currentSubscriptionR2 === void 0 || _currentSubscriptionR2.unsubscribe();\n\t\t\t};\n\t\t}, [reset]);\n\t\tconst resultRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef(enabled ? (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, initialStateConnecting), {}, { reset }) : (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, initialStateIdle), {}, { reset }));\n\t\tconst [state, setState] = react__WEBPACK_IMPORTED_MODULE_2__.useState(trackResult(resultRef.current, addTrackedProp));\n\t\treturn state;\n\t}\n\tfunction useInfiniteQuery$1(path, input, opts) {\n\t\tvar _opts$trpc5, _opts$enabled3, _opts$trpc$abortOnUnm4, _opts$trpc6, _opts$initialCursor;\n\t\tconst { client, ssrState, prefetchInfiniteQuery, queryClient, abortOnUnmount } = useContext();\n\t\tconst queryKey = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getQueryKeyInternal)(path, input, \"infinite\");\n\t\tconst defaultOpts = queryClient.getQueryDefaults(queryKey);\n\t\tconst isInputSkipToken = input === _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.skipToken;\n\t\tif (typeof window === \"undefined\" && ssrState === \"prepass\" && (opts === null || opts === void 0 || (_opts$trpc5 = opts.trpc) === null || _opts$trpc5 === void 0 ? void 0 : _opts$trpc5.ssr) !== false && ((_opts$enabled3 = opts === null || opts === void 0 ? void 0 : opts.enabled) !== null && _opts$enabled3 !== void 0 ? _opts$enabled3 : defaultOpts === null || defaultOpts === void 0 ? void 0 : defaultOpts.enabled) !== false && !isInputSkipToken && !queryClient.getQueryCache().find({ queryKey })) prefetchInfiniteQuery(queryKey, (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, defaultOpts), opts));\n\t\tconst ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, defaultOpts), opts));\n\t\tconst shouldAbortOnUnmount = (_opts$trpc$abortOnUnm4 = opts === null || opts === void 0 || (_opts$trpc6 = opts.trpc) === null || _opts$trpc6 === void 0 ? void 0 : _opts$trpc6.abortOnUnmount) !== null && _opts$trpc$abortOnUnm4 !== void 0 ? _opts$trpc$abortOnUnm4 : abortOnUnmount;\n\t\tconst hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_13__.useInfiniteQuery)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, ssrOpts), {}, {\n\t\t\tinitialPageParam: (_opts$initialCursor = opts.initialCursor) !== null && _opts$initialCursor !== void 0 ? _opts$initialCursor : null,\n\t\t\tpersister: opts.persister,\n\t\t\tqueryKey,\n\t\t\tqueryFn: isInputSkipToken ? input : (queryFunctionContext) => {\n\t\t\t\tvar _queryFunctionContext;\n\t\t\t\tconst actualOpts = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, ssrOpts), {}, { trpc: (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, ssrOpts === null || ssrOpts === void 0 ? void 0 : ssrOpts.trpc), shouldAbortOnUnmount ? { signal: queryFunctionContext.signal } : { signal: null }) });\n\t\t\t\treturn client.query(...getClientArgs(queryKey, actualOpts, {\n\t\t\t\t\tpageParam: (_queryFunctionContext = queryFunctionContext.pageParam) !== null && _queryFunctionContext !== void 0 ? _queryFunctionContext : opts.initialCursor,\n\t\t\t\t\tdirection: queryFunctionContext.direction\n\t\t\t\t}));\n\t\t\t}\n\t\t}), queryClient);\n\t\thook.trpc = useHookResult({ path });\n\t\treturn hook;\n\t}\n\tfunction usePrefetchInfiniteQuery$1(path, input, opts) {\n\t\tvar _opts$trpc$abortOnUnm5, _opts$trpc7, _opts$initialCursor2;\n\t\tconst context = useContext();\n\t\tconst queryKey = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getQueryKeyInternal)(path, input, \"infinite\");\n\t\tconst defaultOpts = context.queryClient.getQueryDefaults(queryKey);\n\t\tconst isInputSkipToken = input === _tanstack_react_query__WEBPACK_IMPORTED_MODULE_5__.skipToken;\n\t\tconst ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, defaultOpts), opts));\n\t\tconst shouldAbortOnUnmount = (_opts$trpc$abortOnUnm5 = opts === null || opts === void 0 || (_opts$trpc7 = opts.trpc) === null || _opts$trpc7 === void 0 ? void 0 : _opts$trpc7.abortOnUnmount) !== null && _opts$trpc$abortOnUnm5 !== void 0 ? _opts$trpc$abortOnUnm5 : context.abortOnUnmount;\n\t\t(0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_14__.usePrefetchInfiniteQuery)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, {\n\t\t\tinitialPageParam: (_opts$initialCursor2 = opts.initialCursor) !== null && _opts$initialCursor2 !== void 0 ? _opts$initialCursor2 : null,\n\t\t\tqueryKey,\n\t\t\tqueryFn: isInputSkipToken ? input : (queryFunctionContext) => {\n\t\t\t\tvar _queryFunctionContext2;\n\t\t\t\tconst actualOpts = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, ssrOpts), {}, { trpc: (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, ssrOpts === null || ssrOpts === void 0 ? void 0 : ssrOpts.trpc), shouldAbortOnUnmount ? { signal: queryFunctionContext.signal } : {}) });\n\t\t\t\treturn context.client.query(...getClientArgs(queryKey, actualOpts, {\n\t\t\t\t\tpageParam: (_queryFunctionContext2 = queryFunctionContext.pageParam) !== null && _queryFunctionContext2 !== void 0 ? _queryFunctionContext2 : opts.initialCursor,\n\t\t\t\t\tdirection: queryFunctionContext.direction\n\t\t\t\t}));\n\t\t\t}\n\t\t}));\n\t}\n\tfunction useSuspenseInfiniteQuery$1(path, input, opts) {\n\t\tvar _opts$trpc$abortOnUnm6, _opts$trpc8, _opts$initialCursor3;\n\t\tconst context = useContext();\n\t\tconst queryKey = (0,_getQueryKey_BY58RNzP_mjs__WEBPACK_IMPORTED_MODULE_0__.getQueryKeyInternal)(path, input, \"infinite\");\n\t\tconst defaultOpts = context.queryClient.getQueryDefaults(queryKey);\n\t\tconst ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, defaultOpts), opts));\n\t\tconst shouldAbortOnUnmount = (_opts$trpc$abortOnUnm6 = opts === null || opts === void 0 || (_opts$trpc8 = opts.trpc) === null || _opts$trpc8 === void 0 ? void 0 : _opts$trpc8.abortOnUnmount) !== null && _opts$trpc$abortOnUnm6 !== void 0 ? _opts$trpc$abortOnUnm6 : context.abortOnUnmount;\n\t\tconst hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_15__.useSuspenseInfiniteQuery)((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, {\n\t\t\tinitialPageParam: (_opts$initialCursor3 = opts.initialCursor) !== null && _opts$initialCursor3 !== void 0 ? _opts$initialCursor3 : null,\n\t\t\tqueryKey,\n\t\t\tqueryFn: (queryFunctionContext) => {\n\t\t\t\tvar _queryFunctionContext3;\n\t\t\t\tconst actualOpts = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, ssrOpts), {}, { trpc: (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, ssrOpts === null || ssrOpts === void 0 ? void 0 : ssrOpts.trpc), shouldAbortOnUnmount ? { signal: queryFunctionContext.signal } : {}) });\n\t\t\t\treturn context.client.query(...getClientArgs(queryKey, actualOpts, {\n\t\t\t\t\tpageParam: (_queryFunctionContext3 = queryFunctionContext.pageParam) !== null && _queryFunctionContext3 !== void 0 ? _queryFunctionContext3 : opts.initialCursor,\n\t\t\t\t\tdirection: queryFunctionContext.direction\n\t\t\t\t}));\n\t\t\t}\n\t\t}), context.queryClient);\n\t\thook.trpc = useHookResult({ path });\n\t\treturn [hook.data, hook];\n\t}\n\tconst useQueries$1 = (queriesCallback, options) => {\n\t\tconst { ssrState, queryClient, prefetchQuery, client } = useContext();\n\t\tconst proxy = createUseQueries(client);\n\t\tconst queries = queriesCallback(proxy);\n\t\tif (typeof window === \"undefined\" && ssrState === \"prepass\") for (const query of queries) {\n\t\t\tvar _queryOption$trpc;\n\t\t\tconst queryOption = query;\n\t\t\tif (((_queryOption$trpc = queryOption.trpc) === null || _queryOption$trpc === void 0 ? void 0 : _queryOption$trpc.ssr) !== false && !queryClient.getQueryCache().find({ queryKey: queryOption.queryKey })) prefetchQuery(queryOption.queryKey, queryOption);\n\t\t}\n\t\treturn (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_16__.useQueries)({\n\t\t\tqueries: queries.map((query) => (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, query), {}, { queryKey: query.queryKey })),\n\t\t\tcombine: options === null || options === void 0 ? void 0 : options.combine\n\t\t}, queryClient);\n\t};\n\tconst useSuspenseQueries$1 = (queriesCallback) => {\n\t\tconst { queryClient, client } = useContext();\n\t\tconst proxy = createUseQueries(client);\n\t\tconst queries = queriesCallback(proxy);\n\t\tconst hook = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_17__.useSuspenseQueries)({ queries: queries.map((query) => (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, query), {}, {\n\t\t\tqueryFn: query.queryFn,\n\t\t\tqueryKey: query.queryKey\n\t\t})) }, queryClient);\n\t\treturn [hook.map((h) => h.data), hook];\n\t};\n\treturn {\n\t\tProvider: TRPCProvider,\n\t\tcreateClient,\n\t\tuseContext,\n\t\tuseUtils: useContext,\n\t\tuseQuery: useQuery$1,\n\t\tusePrefetchQuery: usePrefetchQuery$1,\n\t\tuseSuspenseQuery: useSuspenseQuery$1,\n\t\tuseQueries: useQueries$1,\n\t\tuseSuspenseQueries: useSuspenseQueries$1,\n\t\tuseMutation: useMutation$1,\n\t\tuseSubscription,\n\t\tuseInfiniteQuery: useInfiniteQuery$1,\n\t\tusePrefetchInfiniteQuery: usePrefetchInfiniteQuery$1,\n\t\tuseSuspenseInfiniteQuery: useSuspenseInfiniteQuery$1\n\t};\n}\n\n//#endregion\n//#region src/shared/queryClient.ts\n/**\n* @internal\n*/\nconst getQueryClient = (config) => {\n\tvar _config$queryClient;\n\treturn (_config$queryClient = config.queryClient) !== null && _config$queryClient !== void 0 ? _config$queryClient : new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_18__.QueryClient(config.queryClientConfig);\n};\n\n//#endregion\n\n//# sourceMappingURL=shared-JtnEvJvB.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/react-query/dist/shared-JtnEvJvB.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/getErrorShape-Uhlrl4Bk.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/getErrorShape-Uhlrl4Bk.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HTTP_CODE_TO_JSONRPC2: () => (/* binding */ HTTP_CODE_TO_JSONRPC2),\n/* harmony export */   JSONRPC2_TO_HTTP_CODE: () => (/* binding */ JSONRPC2_TO_HTTP_CODE),\n/* harmony export */   __commonJS: () => (/* binding */ __commonJS),\n/* harmony export */   __toESM: () => (/* binding */ __toESM),\n/* harmony export */   createFlatProxy: () => (/* binding */ createFlatProxy),\n/* harmony export */   createRecursiveProxy: () => (/* binding */ createRecursiveProxy),\n/* harmony export */   getErrorShape: () => (/* binding */ getErrorShape),\n/* harmony export */   getHTTPStatusCode: () => (/* binding */ getHTTPStatusCode),\n/* harmony export */   getHTTPStatusCodeFromError: () => (/* binding */ getHTTPStatusCodeFromError),\n/* harmony export */   getStatusCodeFromKey: () => (/* binding */ getStatusCodeFromKey),\n/* harmony export */   getStatusKeyFromCode: () => (/* binding */ getStatusKeyFromCode),\n/* harmony export */   require_defineProperty: () => (/* binding */ require_defineProperty),\n/* harmony export */   require_objectSpread2: () => (/* binding */ require_objectSpread2)\n/* harmony export */ });\n/* harmony import */ var _utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils-DdbbrDku.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/utils-DdbbrDku.mjs\");\n\n\n//#region rolldown:runtime\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function() {\n\treturn mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n\tif (from && typeof from === \"object\" || typeof from === \"function\") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {\n\t\tkey = keys[i];\n\t\tif (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n\t\t\tget: ((k) => from[k]).bind(null, key),\n\t\t\tenumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n\t\t});\n\t}\n\treturn to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n\tvalue: mod,\n\tenumerable: true\n}) : target, mod));\n\n//#endregion\n//#region src/unstable-core-do-not-import/createProxy.ts\nconst noop = () => {};\nconst freezeIfAvailable = (obj) => {\n\tif (Object.freeze) Object.freeze(obj);\n};\nfunction createInnerProxy(callback, path, memo) {\n\tvar _memo$cacheKey;\n\tconst cacheKey = path.join(\".\");\n\t(_memo$cacheKey = memo[cacheKey]) !== null && _memo$cacheKey !== void 0 || (memo[cacheKey] = new Proxy(noop, {\n\t\tget(_obj, key) {\n\t\t\tif (typeof key !== \"string\" || key === \"then\") return void 0;\n\t\t\treturn createInnerProxy(callback, [...path, key], memo);\n\t\t},\n\t\tapply(_1, _2, args) {\n\t\t\tconst lastOfPath = path[path.length - 1];\n\t\t\tlet opts = {\n\t\t\t\targs,\n\t\t\t\tpath\n\t\t\t};\n\t\t\tif (lastOfPath === \"call\") opts = {\n\t\t\t\targs: args.length >= 2 ? [args[1]] : [],\n\t\t\t\tpath: path.slice(0, -1)\n\t\t\t};\n\t\t\telse if (lastOfPath === \"apply\") opts = {\n\t\t\t\targs: args.length >= 2 ? args[1] : [],\n\t\t\t\tpath: path.slice(0, -1)\n\t\t\t};\n\t\t\tfreezeIfAvailable(opts.args);\n\t\t\tfreezeIfAvailable(opts.path);\n\t\t\treturn callback(opts);\n\t\t}\n\t}));\n\treturn memo[cacheKey];\n}\n/**\n* Creates a proxy that calls the callback with the path and arguments\n*\n* @internal\n*/\nconst createRecursiveProxy = (callback) => createInnerProxy(callback, [], Object.create(null));\n/**\n* Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n*\n* @internal\n*/\nconst createFlatProxy = (callback) => {\n\treturn new Proxy(noop, { get(_obj, name) {\n\t\tif (name === \"then\") return void 0;\n\t\treturn callback(name);\n\t} });\n};\n\n//#endregion\n//#region src/unstable-core-do-not-import/http/getHTTPStatusCode.ts\nconst JSONRPC2_TO_HTTP_CODE = {\n\tPARSE_ERROR: 400,\n\tBAD_REQUEST: 400,\n\tUNAUTHORIZED: 401,\n\tPAYMENT_REQUIRED: 402,\n\tFORBIDDEN: 403,\n\tNOT_FOUND: 404,\n\tMETHOD_NOT_SUPPORTED: 405,\n\tTIMEOUT: 408,\n\tCONFLICT: 409,\n\tPRECONDITION_FAILED: 412,\n\tPAYLOAD_TOO_LARGE: 413,\n\tUNSUPPORTED_MEDIA_TYPE: 415,\n\tUNPROCESSABLE_CONTENT: 422,\n\tTOO_MANY_REQUESTS: 429,\n\tCLIENT_CLOSED_REQUEST: 499,\n\tINTERNAL_SERVER_ERROR: 500,\n\tNOT_IMPLEMENTED: 501,\n\tBAD_GATEWAY: 502,\n\tSERVICE_UNAVAILABLE: 503,\n\tGATEWAY_TIMEOUT: 504\n};\nconst HTTP_CODE_TO_JSONRPC2 = {\n\t400: \"BAD_REQUEST\",\n\t401: \"UNAUTHORIZED\",\n\t402: \"PAYMENT_REQUIRED\",\n\t403: \"FORBIDDEN\",\n\t404: \"NOT_FOUND\",\n\t405: \"METHOD_NOT_SUPPORTED\",\n\t408: \"TIMEOUT\",\n\t409: \"CONFLICT\",\n\t412: \"PRECONDITION_FAILED\",\n\t413: \"PAYLOAD_TOO_LARGE\",\n\t415: \"UNSUPPORTED_MEDIA_TYPE\",\n\t422: \"UNPROCESSABLE_CONTENT\",\n\t429: \"TOO_MANY_REQUESTS\",\n\t499: \"CLIENT_CLOSED_REQUEST\",\n\t500: \"INTERNAL_SERVER_ERROR\",\n\t501: \"NOT_IMPLEMENTED\",\n\t502: \"BAD_GATEWAY\",\n\t503: \"SERVICE_UNAVAILABLE\",\n\t504: \"GATEWAY_TIMEOUT\"\n};\nfunction getStatusCodeFromKey(code) {\n\tvar _JSONRPC2_TO_HTTP_COD;\n\treturn (_JSONRPC2_TO_HTTP_COD = JSONRPC2_TO_HTTP_CODE[code]) !== null && _JSONRPC2_TO_HTTP_COD !== void 0 ? _JSONRPC2_TO_HTTP_COD : 500;\n}\nfunction getStatusKeyFromCode(code) {\n\tvar _HTTP_CODE_TO_JSONRPC;\n\treturn (_HTTP_CODE_TO_JSONRPC = HTTP_CODE_TO_JSONRPC2[code]) !== null && _HTTP_CODE_TO_JSONRPC !== void 0 ? _HTTP_CODE_TO_JSONRPC : \"INTERNAL_SERVER_ERROR\";\n}\nfunction getHTTPStatusCode(json) {\n\tconst arr = Array.isArray(json) ? json : [json];\n\tconst httpStatuses = new Set(arr.map((res) => {\n\t\tif (\"error\" in res && (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(res.error.data)) {\n\t\t\tvar _res$error$data;\n\t\t\tif (typeof ((_res$error$data = res.error.data) === null || _res$error$data === void 0 ? void 0 : _res$error$data[\"httpStatus\"]) === \"number\") return res.error.data[\"httpStatus\"];\n\t\t\tconst code = _utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n\t\t\treturn getStatusCodeFromKey(code);\n\t\t}\n\t\treturn 200;\n\t}));\n\tif (httpStatuses.size !== 1) return 207;\n\tconst httpStatus = httpStatuses.values().next().value;\n\treturn httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n\treturn getStatusCodeFromKey(error.code);\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/typeof.js\nvar require_typeof = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/typeof.js\"(exports, module) {\n\tfunction _typeof$2(o) {\n\t\t\"@babel/helpers - typeof\";\n\t\treturn module.exports = _typeof$2 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o$1) {\n\t\t\treturn typeof o$1;\n\t\t} : function(o$1) {\n\t\t\treturn o$1 && \"function\" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? \"symbol\" : typeof o$1;\n\t\t}, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof$2(o);\n\t}\n\tmodule.exports = _typeof$2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPrimitive.js\nvar require_toPrimitive = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPrimitive.js\"(exports, module) {\n\tvar _typeof$1 = require_typeof()[\"default\"];\n\tfunction toPrimitive$1(t, r) {\n\t\tif (\"object\" != _typeof$1(t) || !t) return t;\n\t\tvar e = t[Symbol.toPrimitive];\n\t\tif (void 0 !== e) {\n\t\t\tvar i = e.call(t, r || \"default\");\n\t\t\tif (\"object\" != _typeof$1(i)) return i;\n\t\t\tthrow new TypeError(\"@@toPrimitive must return a primitive value.\");\n\t\t}\n\t\treturn (\"string\" === r ? String : Number)(t);\n\t}\n\tmodule.exports = toPrimitive$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPropertyKey.js\nvar require_toPropertyKey = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/toPropertyKey.js\"(exports, module) {\n\tvar _typeof = require_typeof()[\"default\"];\n\tvar toPrimitive = require_toPrimitive();\n\tfunction toPropertyKey$1(t) {\n\t\tvar i = toPrimitive(t, \"string\");\n\t\treturn \"symbol\" == _typeof(i) ? i : i + \"\";\n\t}\n\tmodule.exports = toPropertyKey$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/defineProperty.js\nvar require_defineProperty = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/defineProperty.js\"(exports, module) {\n\tvar toPropertyKey = require_toPropertyKey();\n\tfunction _defineProperty(e, r, t) {\n\t\treturn (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n\t\t\tvalue: t,\n\t\t\tenumerable: !0,\n\t\t\tconfigurable: !0,\n\t\t\twritable: !0\n\t\t}) : e[r] = t, e;\n\t}\n\tmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectSpread2.js\nvar require_objectSpread2 = __commonJS({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/objectSpread2.js\"(exports, module) {\n\tvar defineProperty = require_defineProperty();\n\tfunction ownKeys(e, r) {\n\t\tvar t = Object.keys(e);\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tvar o = Object.getOwnPropertySymbols(e);\n\t\t\tr && (o = o.filter(function(r$1) {\n\t\t\t\treturn Object.getOwnPropertyDescriptor(e, r$1).enumerable;\n\t\t\t})), t.push.apply(t, o);\n\t\t}\n\t\treturn t;\n\t}\n\tfunction _objectSpread2(e) {\n\t\tfor (var r = 1; r < arguments.length; r++) {\n\t\t\tvar t = null != arguments[r] ? arguments[r] : {};\n\t\t\tr % 2 ? ownKeys(Object(t), !0).forEach(function(r$1) {\n\t\t\t\tdefineProperty(e, r$1, t[r$1]);\n\t\t\t}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r$1) {\n\t\t\t\tObject.defineProperty(e, r$1, Object.getOwnPropertyDescriptor(t, r$1));\n\t\t\t});\n\t\t}\n\t\treturn e;\n\t}\n\tmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/unstable-core-do-not-import/error/getErrorShape.ts\nvar import_objectSpread2 = __toESM(require_objectSpread2(), 1);\n/**\n* @internal\n*/\nfunction getErrorShape(opts) {\n\tconst { path, error, config } = opts;\n\tconst { code } = opts.error;\n\tconst shape = {\n\t\tmessage: error.message,\n\t\tcode: _utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.TRPC_ERROR_CODES_BY_KEY[code],\n\t\tdata: {\n\t\t\tcode,\n\t\t\thttpStatus: getHTTPStatusCodeFromError(error)\n\t\t}\n\t};\n\tif (config.isDev && typeof opts.error.stack === \"string\") shape.data.stack = opts.error.stack;\n\tif (typeof path === \"string\") shape.data.path = path;\n\treturn config.errorFormatter((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, opts), {}, { shape }));\n}\n\n//#endregion\n\n//# sourceMappingURL=getErrorShape-Uhlrl4Bk.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/getErrorShape-Uhlrl4Bk.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/observable-CUiPknO-.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/observable-CUiPknO-.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   behaviorSubject: () => (/* binding */ behaviorSubject),\n/* harmony export */   distinctUntilChanged: () => (/* binding */ distinctUntilChanged),\n/* harmony export */   distinctUntilDeepChanged: () => (/* binding */ distinctUntilDeepChanged),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   share: () => (/* binding */ share),\n/* harmony export */   tap: () => (/* binding */ tap)\n/* harmony export */ });\n/* harmony import */ var _observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./observable-UMO3vUa_.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs\");\n\n\n//#region src/observable/operators.ts\nfunction map(project) {\n\treturn (source) => {\n\t\treturn (0,_observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_0__.observable)((destination) => {\n\t\t\tlet index = 0;\n\t\t\tconst subscription = source.subscribe({\n\t\t\t\tnext(value) {\n\t\t\t\t\tdestination.next(project(value, index++));\n\t\t\t\t},\n\t\t\t\terror(error) {\n\t\t\t\t\tdestination.error(error);\n\t\t\t\t},\n\t\t\t\tcomplete() {\n\t\t\t\t\tdestination.complete();\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn subscription;\n\t\t});\n\t};\n}\nfunction share(_opts) {\n\treturn (source) => {\n\t\tlet refCount = 0;\n\t\tlet subscription = null;\n\t\tconst observers = [];\n\t\tfunction startIfNeeded() {\n\t\t\tif (subscription) return;\n\t\t\tsubscription = source.subscribe({\n\t\t\t\tnext(value) {\n\t\t\t\t\tfor (const observer of observers) {\n\t\t\t\t\t\tvar _observer$next;\n\t\t\t\t\t\t(_observer$next = observer.next) === null || _observer$next === void 0 || _observer$next.call(observer, value);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror(error) {\n\t\t\t\t\tfor (const observer of observers) {\n\t\t\t\t\t\tvar _observer$error;\n\t\t\t\t\t\t(_observer$error = observer.error) === null || _observer$error === void 0 || _observer$error.call(observer, error);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcomplete() {\n\t\t\t\t\tfor (const observer of observers) {\n\t\t\t\t\t\tvar _observer$complete;\n\t\t\t\t\t\t(_observer$complete = observer.complete) === null || _observer$complete === void 0 || _observer$complete.call(observer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tfunction resetIfNeeded() {\n\t\t\tif (refCount === 0 && subscription) {\n\t\t\t\tconst _sub = subscription;\n\t\t\t\tsubscription = null;\n\t\t\t\t_sub.unsubscribe();\n\t\t\t}\n\t\t}\n\t\treturn (0,_observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_0__.observable)((subscriber) => {\n\t\t\trefCount++;\n\t\t\tobservers.push(subscriber);\n\t\t\tstartIfNeeded();\n\t\t\treturn { unsubscribe() {\n\t\t\t\trefCount--;\n\t\t\t\tresetIfNeeded();\n\t\t\t\tconst index = observers.findIndex((v) => v === subscriber);\n\t\t\t\tif (index > -1) observers.splice(index, 1);\n\t\t\t} };\n\t\t});\n\t};\n}\nfunction tap(observer) {\n\treturn (source) => {\n\t\treturn (0,_observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_0__.observable)((destination) => {\n\t\t\treturn source.subscribe({\n\t\t\t\tnext(value) {\n\t\t\t\t\tvar _observer$next2;\n\t\t\t\t\t(_observer$next2 = observer.next) === null || _observer$next2 === void 0 || _observer$next2.call(observer, value);\n\t\t\t\t\tdestination.next(value);\n\t\t\t\t},\n\t\t\t\terror(error) {\n\t\t\t\t\tvar _observer$error2;\n\t\t\t\t\t(_observer$error2 = observer.error) === null || _observer$error2 === void 0 || _observer$error2.call(observer, error);\n\t\t\t\t\tdestination.error(error);\n\t\t\t\t},\n\t\t\t\tcomplete() {\n\t\t\t\t\tvar _observer$complete2;\n\t\t\t\t\t(_observer$complete2 = observer.complete) === null || _observer$complete2 === void 0 || _observer$complete2.call(observer);\n\t\t\t\t\tdestination.complete();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n}\nconst distinctUnsetMarker = Symbol();\nfunction distinctUntilChanged(compare = (a, b) => a === b) {\n\treturn (source) => {\n\t\treturn (0,_observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_0__.observable)((destination) => {\n\t\t\tlet lastValue = distinctUnsetMarker;\n\t\t\treturn source.subscribe({\n\t\t\t\tnext(value) {\n\t\t\t\t\tif (lastValue !== distinctUnsetMarker && compare(lastValue, value)) return;\n\t\t\t\t\tlastValue = value;\n\t\t\t\t\tdestination.next(value);\n\t\t\t\t},\n\t\t\t\terror(error) {\n\t\t\t\t\tdestination.error(error);\n\t\t\t\t},\n\t\t\t\tcomplete() {\n\t\t\t\t\tdestination.complete();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n}\nconst isDeepEqual = (a, b) => {\n\tif (a === b) return true;\n\tconst bothAreObjects = a && b && typeof a === \"object\" && typeof b === \"object\";\n\treturn !!bothAreObjects && Object.keys(a).length === Object.keys(b).length && Object.entries(a).every(([k, v]) => isDeepEqual(v, b[k]));\n};\nfunction distinctUntilDeepChanged() {\n\treturn distinctUntilChanged(isDeepEqual);\n}\n\n//#endregion\n//#region src/observable/behaviorSubject.ts\n/**\n* @internal\n* An observable that maintains and provides a \"current value\" to subscribers\n* @see https://www.learnrxjs.io/learn-rxjs/subjects/behaviorsubject\n*/\nfunction behaviorSubject(initialValue) {\n\tlet value = initialValue;\n\tconst observerList = [];\n\tconst addObserver = (observer) => {\n\t\tif (value !== void 0) observer.next(value);\n\t\tobserverList.push(observer);\n\t};\n\tconst removeObserver = (observer) => {\n\t\tobserverList.splice(observerList.indexOf(observer), 1);\n\t};\n\tconst obs = (0,_observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_0__.observable)((observer) => {\n\t\taddObserver(observer);\n\t\treturn () => {\n\t\t\tremoveObserver(observer);\n\t\t};\n\t});\n\tobs.next = (nextValue) => {\n\t\tif (value === nextValue) return;\n\t\tvalue = nextValue;\n\t\tfor (const observer of observerList) observer.next(nextValue);\n\t};\n\tobs.get = () => value;\n\treturn obs;\n}\n\n//#endregion\n\n//# sourceMappingURL=observable-CUiPknO-.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/observable-CUiPknO-.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObservable: () => (/* binding */ isObservable),\n/* harmony export */   observable: () => (/* binding */ observable),\n/* harmony export */   observableToAsyncIterable: () => (/* binding */ observableToAsyncIterable),\n/* harmony export */   observableToPromise: () => (/* binding */ observableToPromise)\n/* harmony export */ });\n//#region src/observable/observable.ts\n/** @public */\nfunction isObservable(x) {\n\treturn typeof x === \"object\" && x !== null && \"subscribe\" in x;\n}\n/** @public */\nfunction observable(subscribe) {\n\tconst self = {\n\t\tsubscribe(observer) {\n\t\t\tlet teardownRef = null;\n\t\t\tlet isDone = false;\n\t\t\tlet unsubscribed = false;\n\t\t\tlet teardownImmediately = false;\n\t\t\tfunction unsubscribe() {\n\t\t\t\tif (teardownRef === null) {\n\t\t\t\t\tteardownImmediately = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (unsubscribed) return;\n\t\t\t\tunsubscribed = true;\n\t\t\t\tif (typeof teardownRef === \"function\") teardownRef();\n\t\t\t\telse if (teardownRef) teardownRef.unsubscribe();\n\t\t\t}\n\t\t\tteardownRef = subscribe({\n\t\t\t\tnext(value) {\n\t\t\t\t\tvar _observer$next;\n\t\t\t\t\tif (isDone) return;\n\t\t\t\t\t(_observer$next = observer.next) === null || _observer$next === void 0 || _observer$next.call(observer, value);\n\t\t\t\t},\n\t\t\t\terror(err) {\n\t\t\t\t\tvar _observer$error;\n\t\t\t\t\tif (isDone) return;\n\t\t\t\t\tisDone = true;\n\t\t\t\t\t(_observer$error = observer.error) === null || _observer$error === void 0 || _observer$error.call(observer, err);\n\t\t\t\t\tunsubscribe();\n\t\t\t\t},\n\t\t\t\tcomplete() {\n\t\t\t\t\tvar _observer$complete;\n\t\t\t\t\tif (isDone) return;\n\t\t\t\t\tisDone = true;\n\t\t\t\t\t(_observer$complete = observer.complete) === null || _observer$complete === void 0 || _observer$complete.call(observer);\n\t\t\t\t\tunsubscribe();\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (teardownImmediately) unsubscribe();\n\t\t\treturn { unsubscribe };\n\t\t},\n\t\tpipe(...operations) {\n\t\t\treturn operations.reduce(pipeReducer, self);\n\t\t}\n\t};\n\treturn self;\n}\nfunction pipeReducer(prev, fn) {\n\treturn fn(prev);\n}\n/** @internal */\nfunction observableToPromise(observable$1) {\n\tconst ac = new AbortController();\n\tconst promise = new Promise((resolve, reject) => {\n\t\tlet isDone = false;\n\t\tfunction onDone() {\n\t\t\tif (isDone) return;\n\t\t\tisDone = true;\n\t\t\tobs$.unsubscribe();\n\t\t}\n\t\tac.signal.addEventListener(\"abort\", () => {\n\t\t\treject(ac.signal.reason);\n\t\t});\n\t\tconst obs$ = observable$1.subscribe({\n\t\t\tnext(data) {\n\t\t\t\tisDone = true;\n\t\t\t\tresolve(data);\n\t\t\t\tonDone();\n\t\t\t},\n\t\t\terror(data) {\n\t\t\t\treject(data);\n\t\t\t},\n\t\t\tcomplete() {\n\t\t\t\tac.abort();\n\t\t\t\tonDone();\n\t\t\t}\n\t\t});\n\t});\n\treturn promise;\n}\n/**\n* @internal\n*/\nfunction observableToReadableStream(observable$1, signal) {\n\tlet unsub = null;\n\tconst onAbort = () => {\n\t\tunsub === null || unsub === void 0 || unsub.unsubscribe();\n\t\tunsub = null;\n\t\tsignal.removeEventListener(\"abort\", onAbort);\n\t};\n\treturn new ReadableStream({\n\t\tstart(controller) {\n\t\t\tunsub = observable$1.subscribe({\n\t\t\t\tnext(data) {\n\t\t\t\t\tcontroller.enqueue({\n\t\t\t\t\t\tok: true,\n\t\t\t\t\t\tvalue: data\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terror(error) {\n\t\t\t\t\tcontroller.enqueue({\n\t\t\t\t\t\tok: false,\n\t\t\t\t\t\terror\n\t\t\t\t\t});\n\t\t\t\t\tcontroller.close();\n\t\t\t\t},\n\t\t\t\tcomplete() {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (signal.aborted) onAbort();\n\t\t\telse signal.addEventListener(\"abort\", onAbort, { once: true });\n\t\t},\n\t\tcancel() {\n\t\t\tonAbort();\n\t\t}\n\t});\n}\n/** @internal */\nfunction observableToAsyncIterable(observable$1, signal) {\n\tconst stream = observableToReadableStream(observable$1, signal);\n\tconst reader = stream.getReader();\n\tconst iterator = {\n\t\tasync next() {\n\t\t\tconst value = await reader.read();\n\t\t\tif (value.done) return {\n\t\t\t\tvalue: void 0,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t\tconst { value: result } = value;\n\t\t\tif (!result.ok) throw result.error;\n\t\t\treturn {\n\t\t\t\tvalue: result.value,\n\t\t\t\tdone: false\n\t\t\t};\n\t\t},\n\t\tasync return() {\n\t\t\tawait reader.cancel();\n\t\t\treturn {\n\t\t\t\tvalue: void 0,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\t};\n\treturn { [Symbol.asyncIterator]() {\n\t\treturn iterator;\n\t} };\n}\n\n//#endregion\n\n//# sourceMappingURL=observable-UMO3vUa_.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3Qvb2JzZXJ2YWJsZS1VTU8zdlVhXy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLFlBQVk7QUFDWixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLG9EQUFvRCxZQUFZO0FBQ2hFLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTs7QUFFQTtBQUNvRjtBQUNwRiIsInNvdXJjZXMiOlsiL1VzZXJzL2JsYWluZWNvd2VuL0RvY3VtZW50cy9Qcm9qZWN0cy9ORkwtU3RhdC1RdWVyeS9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3Qvb2JzZXJ2YWJsZS1VTU8zdlVhXy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8jcmVnaW9uIHNyYy9vYnNlcnZhYmxlL29ic2VydmFibGUudHNcbi8qKiBAcHVibGljICovXG5mdW5jdGlvbiBpc09ic2VydmFibGUoeCkge1xuXHRyZXR1cm4gdHlwZW9mIHggPT09IFwib2JqZWN0XCIgJiYgeCAhPT0gbnVsbCAmJiBcInN1YnNjcmliZVwiIGluIHg7XG59XG4vKiogQHB1YmxpYyAqL1xuZnVuY3Rpb24gb2JzZXJ2YWJsZShzdWJzY3JpYmUpIHtcblx0Y29uc3Qgc2VsZiA9IHtcblx0XHRzdWJzY3JpYmUob2JzZXJ2ZXIpIHtcblx0XHRcdGxldCB0ZWFyZG93blJlZiA9IG51bGw7XG5cdFx0XHRsZXQgaXNEb25lID0gZmFsc2U7XG5cdFx0XHRsZXQgdW5zdWJzY3JpYmVkID0gZmFsc2U7XG5cdFx0XHRsZXQgdGVhcmRvd25JbW1lZGlhdGVseSA9IGZhbHNlO1xuXHRcdFx0ZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG5cdFx0XHRcdGlmICh0ZWFyZG93blJlZiA9PT0gbnVsbCkge1xuXHRcdFx0XHRcdHRlYXJkb3duSW1tZWRpYXRlbHkgPSB0cnVlO1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAodW5zdWJzY3JpYmVkKSByZXR1cm47XG5cdFx0XHRcdHVuc3Vic2NyaWJlZCA9IHRydWU7XG5cdFx0XHRcdGlmICh0eXBlb2YgdGVhcmRvd25SZWYgPT09IFwiZnVuY3Rpb25cIikgdGVhcmRvd25SZWYoKTtcblx0XHRcdFx0ZWxzZSBpZiAodGVhcmRvd25SZWYpIHRlYXJkb3duUmVmLnVuc3Vic2NyaWJlKCk7XG5cdFx0XHR9XG5cdFx0XHR0ZWFyZG93blJlZiA9IHN1YnNjcmliZSh7XG5cdFx0XHRcdG5leHQodmFsdWUpIHtcblx0XHRcdFx0XHR2YXIgX29ic2VydmVyJG5leHQ7XG5cdFx0XHRcdFx0aWYgKGlzRG9uZSkgcmV0dXJuO1xuXHRcdFx0XHRcdChfb2JzZXJ2ZXIkbmV4dCA9IG9ic2VydmVyLm5leHQpID09PSBudWxsIHx8IF9vYnNlcnZlciRuZXh0ID09PSB2b2lkIDAgfHwgX29ic2VydmVyJG5leHQuY2FsbChvYnNlcnZlciwgdmFsdWUpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRlcnJvcihlcnIpIHtcblx0XHRcdFx0XHR2YXIgX29ic2VydmVyJGVycm9yO1xuXHRcdFx0XHRcdGlmIChpc0RvbmUpIHJldHVybjtcblx0XHRcdFx0XHRpc0RvbmUgPSB0cnVlO1xuXHRcdFx0XHRcdChfb2JzZXJ2ZXIkZXJyb3IgPSBvYnNlcnZlci5lcnJvcikgPT09IG51bGwgfHwgX29ic2VydmVyJGVycm9yID09PSB2b2lkIDAgfHwgX29ic2VydmVyJGVycm9yLmNhbGwob2JzZXJ2ZXIsIGVycik7XG5cdFx0XHRcdFx0dW5zdWJzY3JpYmUoKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0Y29tcGxldGUoKSB7XG5cdFx0XHRcdFx0dmFyIF9vYnNlcnZlciRjb21wbGV0ZTtcblx0XHRcdFx0XHRpZiAoaXNEb25lKSByZXR1cm47XG5cdFx0XHRcdFx0aXNEb25lID0gdHJ1ZTtcblx0XHRcdFx0XHQoX29ic2VydmVyJGNvbXBsZXRlID0gb2JzZXJ2ZXIuY29tcGxldGUpID09PSBudWxsIHx8IF9vYnNlcnZlciRjb21wbGV0ZSA9PT0gdm9pZCAwIHx8IF9vYnNlcnZlciRjb21wbGV0ZS5jYWxsKG9ic2VydmVyKTtcblx0XHRcdFx0XHR1bnN1YnNjcmliZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHRcdGlmICh0ZWFyZG93bkltbWVkaWF0ZWx5KSB1bnN1YnNjcmliZSgpO1xuXHRcdFx0cmV0dXJuIHsgdW5zdWJzY3JpYmUgfTtcblx0XHR9LFxuXHRcdHBpcGUoLi4ub3BlcmF0aW9ucykge1xuXHRcdFx0cmV0dXJuIG9wZXJhdGlvbnMucmVkdWNlKHBpcGVSZWR1Y2VyLCBzZWxmKTtcblx0XHR9XG5cdH07XG5cdHJldHVybiBzZWxmO1xufVxuZnVuY3Rpb24gcGlwZVJlZHVjZXIocHJldiwgZm4pIHtcblx0cmV0dXJuIGZuKHByZXYpO1xufVxuLyoqIEBpbnRlcm5hbCAqL1xuZnVuY3Rpb24gb2JzZXJ2YWJsZVRvUHJvbWlzZShvYnNlcnZhYmxlJDEpIHtcblx0Y29uc3QgYWMgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG5cdGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0bGV0IGlzRG9uZSA9IGZhbHNlO1xuXHRcdGZ1bmN0aW9uIG9uRG9uZSgpIHtcblx0XHRcdGlmIChpc0RvbmUpIHJldHVybjtcblx0XHRcdGlzRG9uZSA9IHRydWU7XG5cdFx0XHRvYnMkLnVuc3Vic2NyaWJlKCk7XG5cdFx0fVxuXHRcdGFjLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgKCkgPT4ge1xuXHRcdFx0cmVqZWN0KGFjLnNpZ25hbC5yZWFzb24pO1xuXHRcdH0pO1xuXHRcdGNvbnN0IG9icyQgPSBvYnNlcnZhYmxlJDEuc3Vic2NyaWJlKHtcblx0XHRcdG5leHQoZGF0YSkge1xuXHRcdFx0XHRpc0RvbmUgPSB0cnVlO1xuXHRcdFx0XHRyZXNvbHZlKGRhdGEpO1xuXHRcdFx0XHRvbkRvbmUoKTtcblx0XHRcdH0sXG5cdFx0XHRlcnJvcihkYXRhKSB7XG5cdFx0XHRcdHJlamVjdChkYXRhKTtcblx0XHRcdH0sXG5cdFx0XHRjb21wbGV0ZSgpIHtcblx0XHRcdFx0YWMuYWJvcnQoKTtcblx0XHRcdFx0b25Eb25lKCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xuXHRyZXR1cm4gcHJvbWlzZTtcbn1cbi8qKlxuKiBAaW50ZXJuYWxcbiovXG5mdW5jdGlvbiBvYnNlcnZhYmxlVG9SZWFkYWJsZVN0cmVhbShvYnNlcnZhYmxlJDEsIHNpZ25hbCkge1xuXHRsZXQgdW5zdWIgPSBudWxsO1xuXHRjb25zdCBvbkFib3J0ID0gKCkgPT4ge1xuXHRcdHVuc3ViID09PSBudWxsIHx8IHVuc3ViID09PSB2b2lkIDAgfHwgdW5zdWIudW5zdWJzY3JpYmUoKTtcblx0XHR1bnN1YiA9IG51bGw7XG5cdFx0c2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0KTtcblx0fTtcblx0cmV0dXJuIG5ldyBSZWFkYWJsZVN0cmVhbSh7XG5cdFx0c3RhcnQoY29udHJvbGxlcikge1xuXHRcdFx0dW5zdWIgPSBvYnNlcnZhYmxlJDEuc3Vic2NyaWJlKHtcblx0XHRcdFx0bmV4dChkYXRhKSB7XG5cdFx0XHRcdFx0Y29udHJvbGxlci5lbnF1ZXVlKHtcblx0XHRcdFx0XHRcdG9rOiB0cnVlLFxuXHRcdFx0XHRcdFx0dmFsdWU6IGRhdGFcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSxcblx0XHRcdFx0ZXJyb3IoZXJyb3IpIHtcblx0XHRcdFx0XHRjb250cm9sbGVyLmVucXVldWUoe1xuXHRcdFx0XHRcdFx0b2s6IGZhbHNlLFxuXHRcdFx0XHRcdFx0ZXJyb3Jcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRjb250cm9sbGVyLmNsb3NlKCk7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGNvbXBsZXRlKCkge1xuXHRcdFx0XHRcdGNvbnRyb2xsZXIuY2xvc2UoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0XHRpZiAoc2lnbmFsLmFib3J0ZWQpIG9uQWJvcnQoKTtcblx0XHRcdGVsc2Ugc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0LCB7IG9uY2U6IHRydWUgfSk7XG5cdFx0fSxcblx0XHRjYW5jZWwoKSB7XG5cdFx0XHRvbkFib3J0KCk7XG5cdFx0fVxuXHR9KTtcbn1cbi8qKiBAaW50ZXJuYWwgKi9cbmZ1bmN0aW9uIG9ic2VydmFibGVUb0FzeW5jSXRlcmFibGUob2JzZXJ2YWJsZSQxLCBzaWduYWwpIHtcblx0Y29uc3Qgc3RyZWFtID0gb2JzZXJ2YWJsZVRvUmVhZGFibGVTdHJlYW0ob2JzZXJ2YWJsZSQxLCBzaWduYWwpO1xuXHRjb25zdCByZWFkZXIgPSBzdHJlYW0uZ2V0UmVhZGVyKCk7XG5cdGNvbnN0IGl0ZXJhdG9yID0ge1xuXHRcdGFzeW5jIG5leHQoKSB7XG5cdFx0XHRjb25zdCB2YWx1ZSA9IGF3YWl0IHJlYWRlci5yZWFkKCk7XG5cdFx0XHRpZiAodmFsdWUuZG9uZSkgcmV0dXJuIHtcblx0XHRcdFx0dmFsdWU6IHZvaWQgMCxcblx0XHRcdFx0ZG9uZTogdHJ1ZVxuXHRcdFx0fTtcblx0XHRcdGNvbnN0IHsgdmFsdWU6IHJlc3VsdCB9ID0gdmFsdWU7XG5cdFx0XHRpZiAoIXJlc3VsdC5vaykgdGhyb3cgcmVzdWx0LmVycm9yO1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0dmFsdWU6IHJlc3VsdC52YWx1ZSxcblx0XHRcdFx0ZG9uZTogZmFsc2Vcblx0XHRcdH07XG5cdFx0fSxcblx0XHRhc3luYyByZXR1cm4oKSB7XG5cdFx0XHRhd2FpdCByZWFkZXIuY2FuY2VsKCk7XG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHR2YWx1ZTogdm9pZCAwLFxuXHRcdFx0XHRkb25lOiB0cnVlXG5cdFx0XHR9O1xuXHRcdH1cblx0fTtcblx0cmV0dXJuIHsgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcblx0XHRyZXR1cm4gaXRlcmF0b3I7XG5cdH0gfTtcbn1cblxuLy8jZW5kcmVnaW9uXG5leHBvcnQgeyBpc09ic2VydmFibGUsIG9ic2VydmFibGUsIG9ic2VydmFibGVUb0FzeW5jSXRlcmFibGUsIG9ic2VydmFibGVUb1Byb21pc2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9ic2VydmFibGUtVU1PM3ZVYV8ubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/resolveResponse-CzlbRpCI.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/resolveResponse-CzlbRpCI.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Unpromise: () => (/* binding */ Unpromise),\n/* harmony export */   createDeferred: () => (/* binding */ createDeferred),\n/* harmony export */   getRequestInfo: () => (/* binding */ getRequestInfo),\n/* harmony export */   isAbortError: () => (/* binding */ isAbortError),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   iteratorResource: () => (/* binding */ iteratorResource),\n/* harmony export */   jsonlStreamConsumer: () => (/* binding */ jsonlStreamConsumer),\n/* harmony export */   jsonlStreamProducer: () => (/* binding */ jsonlStreamProducer),\n/* harmony export */   makeAsyncResource: () => (/* binding */ makeAsyncResource),\n/* harmony export */   makeResource: () => (/* binding */ makeResource),\n/* harmony export */   parseConnectionParamsFromString: () => (/* binding */ parseConnectionParamsFromString),\n/* harmony export */   parseConnectionParamsFromUnknown: () => (/* binding */ parseConnectionParamsFromUnknown),\n/* harmony export */   require_usingCtx: () => (/* binding */ require_usingCtx),\n/* harmony export */   resolveResponse: () => (/* binding */ resolveResponse),\n/* harmony export */   sseHeaders: () => (/* binding */ sseHeaders),\n/* harmony export */   sseStreamConsumer: () => (/* binding */ sseStreamConsumer),\n/* harmony export */   sseStreamProducer: () => (/* binding */ sseStreamProducer),\n/* harmony export */   takeWithGrace: () => (/* binding */ takeWithGrace),\n/* harmony export */   throwAbortError: () => (/* binding */ throwAbortError),\n/* harmony export */   withMaxDuration: () => (/* binding */ withMaxDuration)\n/* harmony export */ });\n/* harmony import */ var _getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getErrorShape-Uhlrl4Bk.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/getErrorShape-Uhlrl4Bk.mjs\");\n/* harmony import */ var _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracked-gU3ttYjg.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\");\n/* harmony import */ var _utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils-DdbbrDku.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/utils-DdbbrDku.mjs\");\n/* harmony import */ var _observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./observable-UMO3vUa_.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/observable-UMO3vUa_.mjs\");\n\n\n\n\n\n//#region src/unstable-core-do-not-import/http/parseConnectionParams.ts\nfunction parseConnectionParamsFromUnknown(parsed) {\n\ttry {\n\t\tif (parsed === null) return null;\n\t\tif (!(0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(parsed)) throw new Error(\"Expected object\");\n\t\tconst nonStringValues = Object.entries(parsed).filter(([_key, value]) => typeof value !== \"string\");\n\t\tif (nonStringValues.length > 0) throw new Error(`Expected connectionParams to be string values. Got ${nonStringValues.map(([key, value]) => `${key}: ${typeof value}`).join(\", \")}`);\n\t\treturn parsed;\n\t} catch (cause) {\n\t\tthrow new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\tcode: \"PARSE_ERROR\",\n\t\t\tmessage: \"Invalid connection params shape\",\n\t\t\tcause\n\t\t});\n\t}\n}\nfunction parseConnectionParamsFromString(str) {\n\tlet parsed;\n\ttry {\n\t\tparsed = JSON.parse(str);\n\t} catch (cause) {\n\t\tthrow new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\tcode: \"PARSE_ERROR\",\n\t\t\tmessage: \"Not JSON-parsable query params\",\n\t\t\tcause\n\t\t});\n\t}\n\treturn parseConnectionParamsFromUnknown(parsed);\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/http/contentType.ts\nvar import_objectSpread2$1 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)((0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.require_objectSpread2)(), 1);\n/**\n* Memoize a function that takes no arguments\n* @internal\n*/\nfunction memo(fn) {\n\tlet promise = null;\n\tconst sym = Symbol.for(\"@trpc/server/http/memo\");\n\tlet value = sym;\n\treturn {\n\t\tread: async () => {\n\t\t\tvar _promise;\n\t\t\tif (value !== sym) return value;\n\t\t\t(_promise = promise) !== null && _promise !== void 0 || (promise = fn().catch((cause) => {\n\t\t\t\tif (cause instanceof _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError) throw cause;\n\t\t\t\tthrow new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\t\t\tcode: \"BAD_REQUEST\",\n\t\t\t\t\tmessage: cause instanceof Error ? cause.message : \"Invalid input\",\n\t\t\t\t\tcause\n\t\t\t\t});\n\t\t\t}));\n\t\t\tvalue = await promise;\n\t\t\tpromise = null;\n\t\t\treturn value;\n\t\t},\n\t\tresult: () => {\n\t\t\treturn value !== sym ? value : void 0;\n\t\t}\n\t};\n}\nconst jsonContentTypeHandler = {\n\tisMatch(req) {\n\t\tvar _req$headers$get;\n\t\treturn !!((_req$headers$get = req.headers.get(\"content-type\")) === null || _req$headers$get === void 0 ? void 0 : _req$headers$get.startsWith(\"application/json\"));\n\t},\n\tasync parse(opts) {\n\t\tvar _types$values$next$va;\n\t\tconst { req } = opts;\n\t\tconst isBatchCall = opts.searchParams.get(\"batch\") === \"1\";\n\t\tconst paths = isBatchCall ? opts.path.split(\",\") : [opts.path];\n\t\tconst getInputs = memo(async () => {\n\t\t\tlet inputs = void 0;\n\t\t\tif (req.method === \"GET\") {\n\t\t\t\tconst queryInput = opts.searchParams.get(\"input\");\n\t\t\t\tif (queryInput) inputs = JSON.parse(queryInput);\n\t\t\t} else inputs = await req.json();\n\t\t\tif (inputs === void 0) return {};\n\t\t\tif (!isBatchCall) return { 0: opts.router._def._config.transformer.input.deserialize(inputs) };\n\t\t\tif (!(0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(inputs)) throw new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\t\tcode: \"BAD_REQUEST\",\n\t\t\t\tmessage: \"\\\"input\\\" needs to be an object when doing a batch call\"\n\t\t\t});\n\t\t\tconst acc = {};\n\t\t\tfor (const index of paths.keys()) {\n\t\t\t\tconst input = inputs[index];\n\t\t\t\tif (input !== void 0) acc[index] = opts.router._def._config.transformer.input.deserialize(input);\n\t\t\t}\n\t\t\treturn acc;\n\t\t});\n\t\tconst calls = await Promise.all(paths.map(async (path, index) => {\n\t\t\tconst procedure = await (0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.getProcedureAtPath)(opts.router, path);\n\t\t\treturn {\n\t\t\t\tpath,\n\t\t\t\tprocedure,\n\t\t\t\tgetRawInput: async () => {\n\t\t\t\t\tconst inputs = await getInputs.read();\n\t\t\t\t\tlet input = inputs[index];\n\t\t\t\t\tif ((procedure === null || procedure === void 0 ? void 0 : procedure._def.type) === \"subscription\") {\n\t\t\t\t\t\tvar _ref, _opts$headers$get;\n\t\t\t\t\t\tconst lastEventId = (_ref = (_opts$headers$get = opts.headers.get(\"last-event-id\")) !== null && _opts$headers$get !== void 0 ? _opts$headers$get : opts.searchParams.get(\"lastEventId\")) !== null && _ref !== void 0 ? _ref : opts.searchParams.get(\"Last-Event-Id\");\n\t\t\t\t\t\tif (lastEventId) if ((0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(input)) input = (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, input), {}, { lastEventId });\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar _input;\n\t\t\t\t\t\t\t(_input = input) !== null && _input !== void 0 || (input = { lastEventId });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn input;\n\t\t\t\t},\n\t\t\t\tresult: () => {\n\t\t\t\t\tvar _getInputs$result;\n\t\t\t\t\treturn (_getInputs$result = getInputs.result()) === null || _getInputs$result === void 0 ? void 0 : _getInputs$result[index];\n\t\t\t\t}\n\t\t\t};\n\t\t}));\n\t\tconst types = new Set(calls.map((call) => {\n\t\t\tvar _call$procedure;\n\t\t\treturn (_call$procedure = call.procedure) === null || _call$procedure === void 0 ? void 0 : _call$procedure._def.type;\n\t\t}).filter(Boolean));\n\t\t/* istanbul ignore if -- @preserve */\n\t\tif (types.size > 1) throw new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: `Cannot mix procedure types in call: ${Array.from(types).join(\", \")}`\n\t\t});\n\t\tconst type = (_types$values$next$va = types.values().next().value) !== null && _types$values$next$va !== void 0 ? _types$values$next$va : \"unknown\";\n\t\tconst connectionParamsStr = opts.searchParams.get(\"connectionParams\");\n\t\tconst info = {\n\t\t\tisBatchCall,\n\t\t\taccept: req.headers.get(\"trpc-accept\"),\n\t\t\tcalls,\n\t\t\ttype,\n\t\t\tconnectionParams: connectionParamsStr === null ? null : parseConnectionParamsFromString(connectionParamsStr),\n\t\t\tsignal: req.signal,\n\t\t\turl: opts.url\n\t\t};\n\t\treturn info;\n\t}\n};\nconst formDataContentTypeHandler = {\n\tisMatch(req) {\n\t\tvar _req$headers$get2;\n\t\treturn !!((_req$headers$get2 = req.headers.get(\"content-type\")) === null || _req$headers$get2 === void 0 ? void 0 : _req$headers$get2.startsWith(\"multipart/form-data\"));\n\t},\n\tasync parse(opts) {\n\t\tconst { req } = opts;\n\t\tif (req.method !== \"POST\") throw new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\tcode: \"METHOD_NOT_SUPPORTED\",\n\t\t\tmessage: \"Only POST requests are supported for multipart/form-data requests\"\n\t\t});\n\t\tconst getInputs = memo(async () => {\n\t\t\tconst fd = await req.formData();\n\t\t\treturn fd;\n\t\t});\n\t\tconst procedure = await (0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.getProcedureAtPath)(opts.router, opts.path);\n\t\treturn {\n\t\t\taccept: null,\n\t\t\tcalls: [{\n\t\t\t\tpath: opts.path,\n\t\t\t\tgetRawInput: getInputs.read,\n\t\t\t\tresult: getInputs.result,\n\t\t\t\tprocedure\n\t\t\t}],\n\t\t\tisBatchCall: false,\n\t\t\ttype: \"mutation\",\n\t\t\tconnectionParams: null,\n\t\t\tsignal: req.signal,\n\t\t\turl: opts.url\n\t\t};\n\t}\n};\nconst octetStreamContentTypeHandler = {\n\tisMatch(req) {\n\t\tvar _req$headers$get3;\n\t\treturn !!((_req$headers$get3 = req.headers.get(\"content-type\")) === null || _req$headers$get3 === void 0 ? void 0 : _req$headers$get3.startsWith(\"application/octet-stream\"));\n\t},\n\tasync parse(opts) {\n\t\tconst { req } = opts;\n\t\tif (req.method !== \"POST\") throw new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\tcode: \"METHOD_NOT_SUPPORTED\",\n\t\t\tmessage: \"Only POST requests are supported for application/octet-stream requests\"\n\t\t});\n\t\tconst getInputs = memo(async () => {\n\t\t\treturn req.body;\n\t\t});\n\t\treturn {\n\t\t\tcalls: [{\n\t\t\t\tpath: opts.path,\n\t\t\t\tgetRawInput: getInputs.read,\n\t\t\t\tresult: getInputs.result,\n\t\t\t\tprocedure: await (0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.getProcedureAtPath)(opts.router, opts.path)\n\t\t\t}],\n\t\t\tisBatchCall: false,\n\t\t\taccept: null,\n\t\t\ttype: \"mutation\",\n\t\t\tconnectionParams: null,\n\t\t\tsignal: req.signal,\n\t\t\turl: opts.url\n\t\t};\n\t}\n};\nconst handlers = [\n\tjsonContentTypeHandler,\n\tformDataContentTypeHandler,\n\toctetStreamContentTypeHandler\n];\nfunction getContentTypeHandler(req) {\n\tconst handler = handlers.find((handler$1) => handler$1.isMatch(req));\n\tif (handler) return handler;\n\tif (!handler && req.method === \"GET\") return jsonContentTypeHandler;\n\tthrow new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\tcode: \"UNSUPPORTED_MEDIA_TYPE\",\n\t\tmessage: req.headers.has(\"content-type\") ? `Unsupported content-type \"${req.headers.get(\"content-type\")}` : \"Missing content-type header\"\n\t});\n}\nasync function getRequestInfo(opts) {\n\tconst handler = getContentTypeHandler(opts.req);\n\treturn await handler.parse(opts);\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/http/abortError.ts\nfunction isAbortError(error) {\n\treturn (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(error) && error[\"name\"] === \"AbortError\";\n}\nfunction throwAbortError(message = \"AbortError\") {\n\tthrow new DOMException(message, \"AbortError\");\n}\n\n//#endregion\n//#region src/vendor/unpromise/unpromise.ts\nvar import_defineProperty = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)((0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.require_defineProperty)(), 1);\nlet _Symbol$toStringTag;\n/** Memory safe (weakmapped) cache of the ProxyPromise for each Promise,\n* which is retained for the lifetime of the original Promise.\n*/\nconst subscribableCache = /* @__PURE__ */ new WeakMap();\n/** A NOOP function allowing a consistent interface for settled\n* SubscribedPromises (settled promises are not subscribed - they resolve\n* immediately). */\nconst NOOP = () => {};\n_Symbol$toStringTag = Symbol.toStringTag;\n/**\n* Every `Promise<T>` can be shadowed by a single `ProxyPromise<T>`. It is\n* created once, cached and reused throughout the lifetime of the Promise. Get a\n* Promise's ProxyPromise using `Unpromise.proxy(promise)`.\n*\n* The `ProxyPromise<T>` attaches handlers to the original `Promise<T>`\n* `.then()` and `.catch()` just once. Promises derived from it use a\n* subscription- (and unsubscription-) based mechanism that monitors these\n* handlers.\n*\n* Every time you call `.subscribe()`, `.then()` `.catch()` or `.finally()` on a\n* `ProxyPromise<T>` it returns a `SubscribedPromise<T>` having an additional\n* `unsubscribe()` method. Calling `unsubscribe()` detaches reference chains\n* from the original, potentially long-lived Promise, eliminating memory leaks.\n*\n* This approach can eliminate the memory leaks that otherwise come about from\n* repeated `race()` or `any()` calls invoking `.then()` and `.catch()` multiple\n* times on the same long-lived native Promise (subscriptions which can never be\n* cleaned up).\n*\n* `Unpromise.race(promises)` is a reference implementation of `Promise.race`\n* avoiding memory leaks when using long-lived unsettled Promises.\n*\n* `Unpromise.any(promises)` is a reference implementation of `Promise.any`\n* avoiding memory leaks when using long-lived unsettled Promises.\n*\n* `Unpromise.resolve(promise)` returns an ephemeral `SubscribedPromise<T>` for\n* any given `Promise<T>` facilitating arbitrary async/await patterns. Behind\n* the scenes, `resolve` is implemented simply as\n* `Unpromise.proxy(promise).subscribe()`. Don't forget to call `.unsubscribe()`\n* to tidy up!\n*\n*/\nvar Unpromise = class Unpromise {\n\tconstructor(arg) {\n\t\t(0, import_defineProperty.default)(this, \"promise\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"subscribers\", []);\n\t\t(0, import_defineProperty.default)(this, \"settlement\", null);\n\t\t(0, import_defineProperty.default)(this, _Symbol$toStringTag, \"Unpromise\");\n\t\tif (typeof arg === \"function\") this.promise = new Promise(arg);\n\t\telse this.promise = arg;\n\t\tconst thenReturn = this.promise.then((value) => {\n\t\t\tconst { subscribers } = this;\n\t\t\tthis.subscribers = null;\n\t\t\tthis.settlement = {\n\t\t\t\tstatus: \"fulfilled\",\n\t\t\t\tvalue\n\t\t\t};\n\t\t\tsubscribers === null || subscribers === void 0 || subscribers.forEach(({ resolve }) => {\n\t\t\t\tresolve(value);\n\t\t\t});\n\t\t});\n\t\tif (\"catch\" in thenReturn) thenReturn.catch((reason) => {\n\t\t\tconst { subscribers } = this;\n\t\t\tthis.subscribers = null;\n\t\t\tthis.settlement = {\n\t\t\t\tstatus: \"rejected\",\n\t\t\t\treason\n\t\t\t};\n\t\t\tsubscribers === null || subscribers === void 0 || subscribers.forEach(({ reject }) => {\n\t\t\t\treject(reason);\n\t\t\t});\n\t\t});\n\t}\n\t/** Create a promise that mitigates uncontrolled subscription to a long-lived\n\t* Promise via .then() and .catch() - otherwise a source of memory leaks.\n\t*\n\t* The returned promise has an `unsubscribe()` method which can be called when\n\t* the Promise is no longer being tracked by application logic, and which\n\t* ensures that there is no reference chain from the original promise to the\n\t* new one, and therefore no memory leak.\n\t*\n\t* If original promise has not yet settled, this adds a new unique promise\n\t* that listens to then/catch events, along with an `unsubscribe()` method to\n\t* detach it.\n\t*\n\t* If original promise has settled, then creates a new Promise.resolve() or\n\t* Promise.reject() and provided unsubscribe is a noop.\n\t*\n\t* If you call `unsubscribe()` before the returned Promise has settled, it\n\t* will never settle.\n\t*/\n\tsubscribe() {\n\t\tlet promise;\n\t\tlet unsubscribe;\n\t\tconst { settlement } = this;\n\t\tif (settlement === null) {\n\t\t\tif (this.subscribers === null) throw new Error(\"Unpromise settled but still has subscribers\");\n\t\t\tconst subscriber = withResolvers();\n\t\t\tthis.subscribers = listWithMember(this.subscribers, subscriber);\n\t\t\tpromise = subscriber.promise;\n\t\t\tunsubscribe = () => {\n\t\t\t\tif (this.subscribers !== null) this.subscribers = listWithoutMember(this.subscribers, subscriber);\n\t\t\t};\n\t\t} else {\n\t\t\tconst { status } = settlement;\n\t\t\tif (status === \"fulfilled\") promise = Promise.resolve(settlement.value);\n\t\t\telse promise = Promise.reject(settlement.reason);\n\t\t\tunsubscribe = NOOP;\n\t\t}\n\t\treturn Object.assign(promise, { unsubscribe });\n\t}\n\t/** STANDARD PROMISE METHODS (but returning a SubscribedPromise) */\n\tthen(onfulfilled, onrejected) {\n\t\tconst subscribed = this.subscribe();\n\t\tconst { unsubscribe } = subscribed;\n\t\treturn Object.assign(subscribed.then(onfulfilled, onrejected), { unsubscribe });\n\t}\n\tcatch(onrejected) {\n\t\tconst subscribed = this.subscribe();\n\t\tconst { unsubscribe } = subscribed;\n\t\treturn Object.assign(subscribed.catch(onrejected), { unsubscribe });\n\t}\n\tfinally(onfinally) {\n\t\tconst subscribed = this.subscribe();\n\t\tconst { unsubscribe } = subscribed;\n\t\treturn Object.assign(subscribed.finally(onfinally), { unsubscribe });\n\t}\n\t/** Unpromise STATIC METHODS */\n\t/** Create or Retrieve the proxy Unpromise (a re-used Unpromise for the VM lifetime\n\t* of the provided Promise reference) */\n\tstatic proxy(promise) {\n\t\tconst cached = Unpromise.getSubscribablePromise(promise);\n\t\treturn typeof cached !== \"undefined\" ? cached : Unpromise.createSubscribablePromise(promise);\n\t}\n\t/** Create and store an Unpromise keyed by an original Promise. */\n\tstatic createSubscribablePromise(promise) {\n\t\tconst created = new Unpromise(promise);\n\t\tsubscribableCache.set(promise, created);\n\t\tsubscribableCache.set(created, created);\n\t\treturn created;\n\t}\n\t/** Retrieve a previously-created Unpromise keyed by an original Promise. */\n\tstatic getSubscribablePromise(promise) {\n\t\treturn subscribableCache.get(promise);\n\t}\n\t/** Promise STATIC METHODS */\n\t/** Lookup the Unpromise for this promise, and derive a SubscribedPromise from\n\t* it (that can be later unsubscribed to eliminate Memory leaks) */\n\tstatic resolve(value) {\n\t\tconst promise = typeof value === \"object\" && value !== null && \"then\" in value && typeof value.then === \"function\" ? value : Promise.resolve(value);\n\t\treturn Unpromise.proxy(promise).subscribe();\n\t}\n\tstatic async any(values) {\n\t\tconst valuesArray = Array.isArray(values) ? values : [...values];\n\t\tconst subscribedPromises = valuesArray.map(Unpromise.resolve);\n\t\ttry {\n\t\t\treturn await Promise.any(subscribedPromises);\n\t\t} finally {\n\t\t\tsubscribedPromises.forEach(({ unsubscribe }) => {\n\t\t\t\tunsubscribe();\n\t\t\t});\n\t\t}\n\t}\n\tstatic async race(values) {\n\t\tconst valuesArray = Array.isArray(values) ? values : [...values];\n\t\tconst subscribedPromises = valuesArray.map(Unpromise.resolve);\n\t\ttry {\n\t\t\treturn await Promise.race(subscribedPromises);\n\t\t} finally {\n\t\t\tsubscribedPromises.forEach(({ unsubscribe }) => {\n\t\t\t\tunsubscribe();\n\t\t\t});\n\t\t}\n\t}\n\t/** Create a race of SubscribedPromises that will fulfil to a single winning\n\t* Promise (in a 1-Tuple). Eliminates memory leaks from long-lived promises\n\t* accumulating .then() and .catch() subscribers. Allows simple logic to\n\t* consume the result, like...\n\t* ```ts\n\t* const [ winner ] = await Unpromise.race([ promiseA, promiseB ]);\n\t* if(winner === promiseB){\n\t*   const result = await promiseB;\n\t*   // do the thing\n\t* }\n\t* ```\n\t* */\n\tstatic async raceReferences(promises) {\n\t\tconst selfPromises = promises.map(resolveSelfTuple);\n\t\ttry {\n\t\t\treturn await Promise.race(selfPromises);\n\t\t} finally {\n\t\t\tfor (const promise of selfPromises) promise.unsubscribe();\n\t\t}\n\t}\n};\n/** Promises a 1-tuple containing the original promise when it resolves. Allows\n* awaiting the eventual Promise ***reference*** (easy to destructure and\n* exactly compare with ===). Avoids resolving to the Promise ***value*** (which\n* may be ambiguous and therefore hard to identify as the winner of a race).\n* You can call unsubscribe on the Promise to mitigate memory leaks.\n* */\nfunction resolveSelfTuple(promise) {\n\treturn Unpromise.proxy(promise).then(() => [promise]);\n}\n/** VENDORED (Future) PROMISE UTILITIES */\n/** Reference implementation of https://github.com/tc39/proposal-promise-with-resolvers */\nfunction withResolvers() {\n\tlet resolve;\n\tlet reject;\n\tconst promise = new Promise((_resolve, _reject) => {\n\t\tresolve = _resolve;\n\t\treject = _reject;\n\t});\n\treturn {\n\t\tpromise,\n\t\tresolve,\n\t\treject\n\t};\n}\n/** IMMUTABLE LIST OPERATIONS */\nfunction listWithMember(arr, member) {\n\treturn [...arr, member];\n}\nfunction listWithoutIndex(arr, index) {\n\treturn [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\nfunction listWithoutMember(arr, member) {\n\tconst index = arr.indexOf(member);\n\tif (index !== -1) return listWithoutIndex(arr, index);\n\treturn arr;\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/disposable.ts\nvar _Symbol, _Symbol$dispose, _Symbol2, _Symbol2$asyncDispose;\n(_Symbol$dispose = (_Symbol = Symbol).dispose) !== null && _Symbol$dispose !== void 0 || (_Symbol.dispose = Symbol());\n(_Symbol2$asyncDispose = (_Symbol2 = Symbol).asyncDispose) !== null && _Symbol2$asyncDispose !== void 0 || (_Symbol2.asyncDispose = Symbol());\n/**\n* Takes a value and a dispose function and returns a new object that implements the Disposable interface.\n* The returned object is the original value augmented with a Symbol.dispose method.\n* @param thing The value to make disposable\n* @param dispose Function to call when disposing the resource\n* @returns The original value with Symbol.dispose method added\n*/\nfunction makeResource(thing, dispose) {\n\tconst it = thing;\n\tconst existing = it[Symbol.dispose];\n\tit[Symbol.dispose] = () => {\n\t\tdispose();\n\t\texisting === null || existing === void 0 || existing();\n\t};\n\treturn it;\n}\n/**\n* Takes a value and an async dispose function and returns a new object that implements the AsyncDisposable interface.\n* The returned object is the original value augmented with a Symbol.asyncDispose method.\n* @param thing The value to make async disposable\n* @param dispose Async function to call when disposing the resource\n* @returns The original value with Symbol.asyncDispose method added\n*/\nfunction makeAsyncResource(thing, dispose) {\n\tconst it = thing;\n\tconst existing = it[Symbol.asyncDispose];\n\tit[Symbol.asyncDispose] = async () => {\n\t\tawait dispose();\n\t\tawait (existing === null || existing === void 0 ? void 0 : existing());\n\t};\n\treturn it;\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/timerResource.ts\nconst disposablePromiseTimerResult = Symbol();\nfunction timerResource(ms) {\n\tlet timer = null;\n\treturn makeResource({ start() {\n\t\tif (timer) throw new Error(\"Timer already started\");\n\t\tconst promise = new Promise((resolve) => {\n\t\t\ttimer = setTimeout(() => resolve(disposablePromiseTimerResult), ms);\n\t\t});\n\t\treturn promise;\n\t} }, () => {\n\t\tif (timer) clearTimeout(timer);\n\t});\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/usingCtx.js\nvar require_usingCtx = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/usingCtx.js\"(exports, module) {\n\tfunction _usingCtx() {\n\t\tvar r = \"function\" == typeof SuppressedError ? SuppressedError : function(r$1, e$1) {\n\t\t\tvar n$1 = Error();\n\t\t\treturn n$1.name = \"SuppressedError\", n$1.error = r$1, n$1.suppressed = e$1, n$1;\n\t\t}, e = {}, n = [];\n\t\tfunction using(r$1, e$1) {\n\t\t\tif (null != e$1) {\n\t\t\t\tif (Object(e$1) !== e$1) throw new TypeError(\"using declarations can only be used with objects, functions, null, or undefined.\");\n\t\t\t\tif (r$1) var o = e$1[Symbol.asyncDispose || Symbol[\"for\"](\"Symbol.asyncDispose\")];\n\t\t\t\tif (void 0 === o && (o = e$1[Symbol.dispose || Symbol[\"for\"](\"Symbol.dispose\")], r$1)) var t = o;\n\t\t\t\tif (\"function\" != typeof o) throw new TypeError(\"Object is not disposable.\");\n\t\t\t\tt && (o = function o$1() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tt.call(e$1);\n\t\t\t\t\t} catch (r$2) {\n\t\t\t\t\t\treturn Promise.reject(r$2);\n\t\t\t\t\t}\n\t\t\t\t}), n.push({\n\t\t\t\t\tv: e$1,\n\t\t\t\t\td: o,\n\t\t\t\t\ta: r$1\n\t\t\t\t});\n\t\t\t} else r$1 && n.push({\n\t\t\t\td: e$1,\n\t\t\t\ta: r$1\n\t\t\t});\n\t\t\treturn e$1;\n\t\t}\n\t\treturn {\n\t\t\te,\n\t\t\tu: using.bind(null, !1),\n\t\t\ta: using.bind(null, !0),\n\t\t\td: function d() {\n\t\t\t\tvar o, t = this.e, s = 0;\n\t\t\t\tfunction next() {\n\t\t\t\t\tfor (; o = n.pop();) try {\n\t\t\t\t\t\tif (!o.a && 1 === s) return s = 0, n.push(o), Promise.resolve().then(next);\n\t\t\t\t\t\tif (o.d) {\n\t\t\t\t\t\t\tvar r$1 = o.d.call(o.v);\n\t\t\t\t\t\t\tif (o.a) return s |= 2, Promise.resolve(r$1).then(next, err);\n\t\t\t\t\t\t} else s |= 1;\n\t\t\t\t\t} catch (r$2) {\n\t\t\t\t\t\treturn err(r$2);\n\t\t\t\t\t}\n\t\t\t\t\tif (1 === s) return t !== e ? Promise.reject(t) : Promise.resolve();\n\t\t\t\t\tif (t !== e) throw t;\n\t\t\t\t}\n\t\t\t\tfunction err(n$1) {\n\t\t\t\t\treturn t = t !== e ? new r(n$1, t) : n$1, next();\n\t\t\t\t}\n\t\t\t\treturn next();\n\t\t\t}\n\t\t};\n\t}\n\tmodule.exports = _usingCtx, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/OverloadYield.js\nvar require_OverloadYield = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/OverloadYield.js\"(exports, module) {\n\tfunction _OverloadYield(e, d) {\n\t\tthis.v = e, this.k = d;\n\t}\n\tmodule.exports = _OverloadYield, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/awaitAsyncGenerator.js\nvar require_awaitAsyncGenerator = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/awaitAsyncGenerator.js\"(exports, module) {\n\tvar OverloadYield$2 = require_OverloadYield();\n\tfunction _awaitAsyncGenerator$5(e) {\n\t\treturn new OverloadYield$2(e, 0);\n\t}\n\tmodule.exports = _awaitAsyncGenerator$5, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/wrapAsyncGenerator.js\nvar require_wrapAsyncGenerator = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/wrapAsyncGenerator.js\"(exports, module) {\n\tvar OverloadYield$1 = require_OverloadYield();\n\tfunction _wrapAsyncGenerator$6(e) {\n\t\treturn function() {\n\t\t\treturn new AsyncGenerator(e.apply(this, arguments));\n\t\t};\n\t}\n\tfunction AsyncGenerator(e) {\n\t\tvar r, t;\n\t\tfunction resume(r$1, t$1) {\n\t\t\ttry {\n\t\t\t\tvar n = e[r$1](t$1), o = n.value, u = o instanceof OverloadYield$1;\n\t\t\t\tPromise.resolve(u ? o.v : o).then(function(t$2) {\n\t\t\t\t\tif (u) {\n\t\t\t\t\t\tvar i = \"return\" === r$1 ? \"return\" : \"next\";\n\t\t\t\t\t\tif (!o.k || t$2.done) return resume(i, t$2);\n\t\t\t\t\t\tt$2 = e[i](t$2).value;\n\t\t\t\t\t}\n\t\t\t\t\tsettle(n.done ? \"return\" : \"normal\", t$2);\n\t\t\t\t}, function(e$1) {\n\t\t\t\t\tresume(\"throw\", e$1);\n\t\t\t\t});\n\t\t\t} catch (e$1) {\n\t\t\t\tsettle(\"throw\", e$1);\n\t\t\t}\n\t\t}\n\t\tfunction settle(e$1, n) {\n\t\t\tswitch (e$1) {\n\t\t\t\tcase \"return\":\n\t\t\t\t\tr.resolve({\n\t\t\t\t\t\tvalue: n,\n\t\t\t\t\t\tdone: !0\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"throw\":\n\t\t\t\t\tr.reject(n);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: r.resolve({\n\t\t\t\t\tvalue: n,\n\t\t\t\t\tdone: !1\n\t\t\t\t});\n\t\t\t}\n\t\t\t(r = r.next) ? resume(r.key, r.arg) : t = null;\n\t\t}\n\t\tthis._invoke = function(e$1, n) {\n\t\t\treturn new Promise(function(o, u) {\n\t\t\t\tvar i = {\n\t\t\t\t\tkey: e$1,\n\t\t\t\t\targ: n,\n\t\t\t\t\tresolve: o,\n\t\t\t\t\treject: u,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\t\tt ? t = t.next = i : (r = t = i, resume(e$1, n));\n\t\t\t});\n\t\t}, \"function\" != typeof e[\"return\"] && (this[\"return\"] = void 0);\n\t}\n\tAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function() {\n\t\treturn this;\n\t}, AsyncGenerator.prototype.next = function(e) {\n\t\treturn this._invoke(\"next\", e);\n\t}, AsyncGenerator.prototype[\"throw\"] = function(e) {\n\t\treturn this._invoke(\"throw\", e);\n\t}, AsyncGenerator.prototype[\"return\"] = function(e) {\n\t\treturn this._invoke(\"return\", e);\n\t};\n\tmodule.exports = _wrapAsyncGenerator$6, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/asyncIterable.ts\nvar import_usingCtx$4 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_usingCtx(), 1);\nvar import_awaitAsyncGenerator$4 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_awaitAsyncGenerator(), 1);\nvar import_wrapAsyncGenerator$5 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_wrapAsyncGenerator(), 1);\nfunction iteratorResource(iterable) {\n\tconst iterator = iterable[Symbol.asyncIterator]();\n\tif (iterator[Symbol.asyncDispose]) return iterator;\n\treturn makeAsyncResource(iterator, async () => {\n\t\tvar _iterator$return;\n\t\tawait ((_iterator$return = iterator.return) === null || _iterator$return === void 0 ? void 0 : _iterator$return.call(iterator));\n\t});\n}\n/**\n* Derives a new {@link AsyncGenerator} based on {@link iterable}, that automatically aborts after the specified duration.\n*/\nfunction withMaxDuration(_x, _x2) {\n\treturn _withMaxDuration.apply(this, arguments);\n}\nfunction _withMaxDuration() {\n\t_withMaxDuration = (0, import_wrapAsyncGenerator$5.default)(function* (iterable, opts) {\n\t\ttry {\n\t\t\tvar _usingCtx$1 = (0, import_usingCtx$4.default)();\n\t\t\tconst iterator = _usingCtx$1.a(iteratorResource(iterable));\n\t\t\tconst timer = _usingCtx$1.u(timerResource(opts.maxDurationMs));\n\t\t\tconst timerPromise = timer.start();\n\t\t\tlet result;\n\t\t\twhile (true) {\n\t\t\t\tresult = yield (0, import_awaitAsyncGenerator$4.default)(Unpromise.race([iterator.next(), timerPromise]));\n\t\t\t\tif (result === disposablePromiseTimerResult) throwAbortError();\n\t\t\t\tif (result.done) return result;\n\t\t\t\tyield result.value;\n\t\t\t\tresult = null;\n\t\t\t}\n\t\t} catch (_) {\n\t\t\t_usingCtx$1.e = _;\n\t\t} finally {\n\t\t\tyield (0, import_awaitAsyncGenerator$4.default)(_usingCtx$1.d());\n\t\t}\n\t});\n\treturn _withMaxDuration.apply(this, arguments);\n}\n/**\n* Derives a new {@link AsyncGenerator} based of {@link iterable}, that yields its first\n* {@link count} values. Then, a grace period of {@link gracePeriodMs} is started in which further\n* values may still come through. After this period, the generator aborts.\n*/\nfunction takeWithGrace(_x3, _x4) {\n\treturn _takeWithGrace.apply(this, arguments);\n}\nfunction _takeWithGrace() {\n\t_takeWithGrace = (0, import_wrapAsyncGenerator$5.default)(function* (iterable, opts) {\n\t\ttry {\n\t\t\tvar _usingCtx3 = (0, import_usingCtx$4.default)();\n\t\t\tconst iterator = _usingCtx3.a(iteratorResource(iterable));\n\t\t\tlet result;\n\t\t\tconst timer = _usingCtx3.u(timerResource(opts.gracePeriodMs));\n\t\t\tlet count = opts.count;\n\t\t\tlet timerPromise = new Promise(() => {});\n\t\t\twhile (true) {\n\t\t\t\tresult = yield (0, import_awaitAsyncGenerator$4.default)(Unpromise.race([iterator.next(), timerPromise]));\n\t\t\t\tif (result === disposablePromiseTimerResult) throwAbortError();\n\t\t\t\tif (result.done) return result.value;\n\t\t\t\tyield result.value;\n\t\t\t\tif (--count === 0) timerPromise = timer.start();\n\t\t\t\tresult = null;\n\t\t\t}\n\t\t} catch (_) {\n\t\t\t_usingCtx3.e = _;\n\t\t} finally {\n\t\t\tyield (0, import_awaitAsyncGenerator$4.default)(_usingCtx3.d());\n\t\t}\n\t});\n\treturn _takeWithGrace.apply(this, arguments);\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/createDeferred.ts\nfunction createDeferred() {\n\tlet resolve;\n\tlet reject;\n\tconst promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\treturn {\n\t\tpromise,\n\t\tresolve,\n\t\treject\n\t};\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/mergeAsyncIterables.ts\nvar import_usingCtx$3 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_usingCtx(), 1);\nvar import_awaitAsyncGenerator$3 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_awaitAsyncGenerator(), 1);\nvar import_wrapAsyncGenerator$4 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_wrapAsyncGenerator(), 1);\nfunction createManagedIterator(iterable, onResult) {\n\tconst iterator = iterable[Symbol.asyncIterator]();\n\tlet state = \"idle\";\n\tfunction cleanup() {\n\t\tstate = \"done\";\n\t\tonResult = () => {};\n\t}\n\tfunction pull() {\n\t\tif (state !== \"idle\") return;\n\t\tstate = \"pending\";\n\t\tconst next = iterator.next();\n\t\tnext.then((result) => {\n\t\t\tif (result.done) {\n\t\t\t\tstate = \"done\";\n\t\t\t\tonResult({\n\t\t\t\t\tstatus: \"return\",\n\t\t\t\t\tvalue: result.value\n\t\t\t\t});\n\t\t\t\tcleanup();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tstate = \"idle\";\n\t\t\tonResult({\n\t\t\t\tstatus: \"yield\",\n\t\t\t\tvalue: result.value\n\t\t\t});\n\t\t}).catch((cause) => {\n\t\t\tonResult({\n\t\t\t\tstatus: \"error\",\n\t\t\t\terror: cause\n\t\t\t});\n\t\t\tcleanup();\n\t\t});\n\t}\n\treturn {\n\t\tpull,\n\t\tdestroy: async () => {\n\t\t\tvar _iterator$return;\n\t\t\tcleanup();\n\t\t\tawait ((_iterator$return = iterator.return) === null || _iterator$return === void 0 ? void 0 : _iterator$return.call(iterator));\n\t\t}\n\t};\n}\n/**\n* Creates a new async iterable that merges multiple async iterables into a single stream.\n* Values from the input iterables are yielded in the order they resolve, similar to Promise.race().\n*\n* New iterables can be added dynamically using the returned {@link MergedAsyncIterables.add} method, even after iteration has started.\n*\n* If any of the input iterables throws an error, that error will be propagated through the merged stream.\n* Other iterables will not continue to be processed.\n*\n* @template TYield The type of values yielded by the input iterables\n*/\nfunction mergeAsyncIterables() {\n\tlet state = \"idle\";\n\tlet flushSignal = createDeferred();\n\t/**\n\t* used while {@link state} is `idle`\n\t*/\n\tconst iterables = [];\n\t/**\n\t* used while {@link state} is `pending`\n\t*/\n\tconst iterators = /* @__PURE__ */ new Set();\n\tconst buffer = [];\n\tfunction initIterable(iterable) {\n\t\tif (state !== \"pending\") return;\n\t\tconst iterator = createManagedIterator(iterable, (result) => {\n\t\t\tif (state !== \"pending\") return;\n\t\t\tswitch (result.status) {\n\t\t\t\tcase \"yield\":\n\t\t\t\t\tbuffer.push([iterator, result]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"return\":\n\t\t\t\t\titerators.delete(iterator);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"error\":\n\t\t\t\t\tbuffer.push([iterator, result]);\n\t\t\t\t\titerators.delete(iterator);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tflushSignal.resolve();\n\t\t});\n\t\titerators.add(iterator);\n\t\titerator.pull();\n\t}\n\treturn {\n\t\tadd(iterable) {\n\t\t\tswitch (state) {\n\t\t\t\tcase \"idle\":\n\t\t\t\t\titerables.push(iterable);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pending\":\n\t\t\t\t\tinitIterable(iterable);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"done\": break;\n\t\t\t}\n\t\t},\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn (0, import_wrapAsyncGenerator$4.default)(function* () {\n\t\t\t\ttry {\n\t\t\t\t\tvar _usingCtx$1 = (0, import_usingCtx$3.default)();\n\t\t\t\t\tif (state !== \"idle\") throw new Error(\"Cannot iterate twice\");\n\t\t\t\t\tstate = \"pending\";\n\t\t\t\t\tconst _finally = _usingCtx$1.a(makeAsyncResource({}, async () => {\n\t\t\t\t\t\tstate = \"done\";\n\t\t\t\t\t\tconst errors = [];\n\t\t\t\t\t\tawait Promise.all(Array.from(iterators.values()).map(async (it) => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait it.destroy();\n\t\t\t\t\t\t\t} catch (cause) {\n\t\t\t\t\t\t\t\terrors.push(cause);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tbuffer.length = 0;\n\t\t\t\t\t\titerators.clear();\n\t\t\t\t\t\tflushSignal.resolve();\n\t\t\t\t\t\tif (errors.length > 0) throw new AggregateError(errors);\n\t\t\t\t\t}));\n\t\t\t\t\twhile (iterables.length > 0) initIterable(iterables.shift());\n\t\t\t\t\twhile (iterators.size > 0) {\n\t\t\t\t\t\tyield (0, import_awaitAsyncGenerator$3.default)(flushSignal.promise);\n\t\t\t\t\t\twhile (buffer.length > 0) {\n\t\t\t\t\t\t\tconst [iterator, result] = buffer.shift();\n\t\t\t\t\t\t\tswitch (result.status) {\n\t\t\t\t\t\t\t\tcase \"yield\":\n\t\t\t\t\t\t\t\t\tyield result.value;\n\t\t\t\t\t\t\t\t\titerator.pull();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"error\": throw result.error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tflushSignal = createDeferred();\n\t\t\t\t\t}\n\t\t\t\t} catch (_) {\n\t\t\t\t\t_usingCtx$1.e = _;\n\t\t\t\t} finally {\n\t\t\t\t\tyield (0, import_awaitAsyncGenerator$3.default)(_usingCtx$1.d());\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t};\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/readableStreamFrom.ts\n/**\n* Creates a ReadableStream from an AsyncIterable.\n*\n* @param iterable - The source AsyncIterable to stream from\n* @returns A ReadableStream that yields values from the AsyncIterable\n*/\nfunction readableStreamFrom(iterable) {\n\tconst iterator = iterable[Symbol.asyncIterator]();\n\treturn new ReadableStream({\n\t\tasync cancel() {\n\t\t\tvar _iterator$return;\n\t\t\tawait ((_iterator$return = iterator.return) === null || _iterator$return === void 0 ? void 0 : _iterator$return.call(iterator));\n\t\t},\n\t\tasync pull(controller) {\n\t\t\tconst result = await iterator.next();\n\t\t\tif (result.done) {\n\t\t\t\tcontroller.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontroller.enqueue(result.value);\n\t\t}\n\t});\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/utils/withPing.ts\nvar import_usingCtx$2 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_usingCtx(), 1);\nvar import_awaitAsyncGenerator$2 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_awaitAsyncGenerator(), 1);\nvar import_wrapAsyncGenerator$3 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_wrapAsyncGenerator(), 1);\nconst PING_SYM = Symbol(\"ping\");\n/**\n* Derives a new {@link AsyncGenerator} based of {@link iterable}, that yields {@link PING_SYM}\n* whenever no value has been yielded for {@link pingIntervalMs}.\n*/\nfunction withPing(_x, _x2) {\n\treturn _withPing.apply(this, arguments);\n}\nfunction _withPing() {\n\t_withPing = (0, import_wrapAsyncGenerator$3.default)(function* (iterable, pingIntervalMs) {\n\t\ttry {\n\t\t\tvar _usingCtx$1 = (0, import_usingCtx$2.default)();\n\t\t\tconst iterator = _usingCtx$1.a(iteratorResource(iterable));\n\t\t\tlet result;\n\t\t\tlet nextPromise = iterator.next();\n\t\t\twhile (true) try {\n\t\t\t\tvar _usingCtx3 = (0, import_usingCtx$2.default)();\n\t\t\t\tconst pingPromise = _usingCtx3.u(timerResource(pingIntervalMs));\n\t\t\t\tresult = yield (0, import_awaitAsyncGenerator$2.default)(Unpromise.race([nextPromise, pingPromise.start()]));\n\t\t\t\tif (result === disposablePromiseTimerResult) {\n\t\t\t\t\tyield PING_SYM;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (result.done) return result.value;\n\t\t\t\tnextPromise = iterator.next();\n\t\t\t\tyield result.value;\n\t\t\t\tresult = null;\n\t\t\t} catch (_) {\n\t\t\t\t_usingCtx3.e = _;\n\t\t\t} finally {\n\t\t\t\t_usingCtx3.d();\n\t\t\t}\n\t\t} catch (_) {\n\t\t\t_usingCtx$1.e = _;\n\t\t} finally {\n\t\t\tyield (0, import_awaitAsyncGenerator$2.default)(_usingCtx$1.d());\n\t\t}\n\t});\n\treturn _withPing.apply(this, arguments);\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncIterator.js\nvar require_asyncIterator = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncIterator.js\"(exports, module) {\n\tfunction _asyncIterator$2(r) {\n\t\tvar n, t, o, e = 2;\n\t\tfor (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n\t\t\tif (t && null != (n = r[t])) return n.call(r);\n\t\t\tif (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n\t\t\tt = \"@@asyncIterator\", o = \"@@iterator\";\n\t\t}\n\t\tthrow new TypeError(\"Object is not async iterable\");\n\t}\n\tfunction AsyncFromSyncIterator(r) {\n\t\tfunction AsyncFromSyncIteratorContinuation(r$1) {\n\t\t\tif (Object(r$1) !== r$1) return Promise.reject(new TypeError(r$1 + \" is not an object.\"));\n\t\t\tvar n = r$1.done;\n\t\t\treturn Promise.resolve(r$1.value).then(function(r$2) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: r$2,\n\t\t\t\t\tdone: n\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\treturn AsyncFromSyncIterator = function AsyncFromSyncIterator$1(r$1) {\n\t\t\tthis.s = r$1, this.n = r$1.next;\n\t\t}, AsyncFromSyncIterator.prototype = {\n\t\t\ts: null,\n\t\t\tn: null,\n\t\t\tnext: function next() {\n\t\t\t\treturn AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n\t\t\t},\n\t\t\t\"return\": function _return(r$1) {\n\t\t\t\tvar n = this.s[\"return\"];\n\t\t\t\treturn void 0 === n ? Promise.resolve({\n\t\t\t\t\tvalue: r$1,\n\t\t\t\t\tdone: !0\n\t\t\t\t}) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n\t\t\t},\n\t\t\t\"throw\": function _throw(r$1) {\n\t\t\t\tvar n = this.s[\"return\"];\n\t\t\t\treturn void 0 === n ? Promise.reject(r$1) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n\t\t\t}\n\t\t}, new AsyncFromSyncIterator(r);\n\t}\n\tmodule.exports = _asyncIterator$2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/jsonl.ts\nvar import_awaitAsyncGenerator$1 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_awaitAsyncGenerator(), 1);\nvar import_wrapAsyncGenerator$2 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_wrapAsyncGenerator(), 1);\nvar import_usingCtx$1 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_usingCtx(), 1);\nvar import_asyncIterator$1 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_asyncIterator(), 1);\nfunction isPlainObject(value) {\n\treturn Object.prototype.toString.call(value) === \"[object Object]\";\n}\nconst CHUNK_VALUE_TYPE_PROMISE = 0;\nconst CHUNK_VALUE_TYPE_ASYNC_ITERABLE = 1;\nconst PROMISE_STATUS_FULFILLED = 0;\nconst PROMISE_STATUS_REJECTED = 1;\nconst ASYNC_ITERABLE_STATUS_RETURN = 0;\nconst ASYNC_ITERABLE_STATUS_YIELD = 1;\nconst ASYNC_ITERABLE_STATUS_ERROR = 2;\nfunction isPromise(value) {\n\treturn ((0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) || (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isFunction)(value)) && typeof (value === null || value === void 0 ? void 0 : value[\"then\"]) === \"function\" && typeof (value === null || value === void 0 ? void 0 : value[\"catch\"]) === \"function\";\n}\nvar MaxDepthError = class extends Error {\n\tconstructor(path) {\n\t\tsuper(\"Max depth reached at path: \" + path.join(\".\"));\n\t\tthis.path = path;\n\t}\n};\nfunction createBatchStreamProducer(_x3) {\n\treturn _createBatchStreamProducer.apply(this, arguments);\n}\nfunction _createBatchStreamProducer() {\n\t_createBatchStreamProducer = (0, import_wrapAsyncGenerator$2.default)(function* (opts) {\n\t\tconst { data } = opts;\n\t\tlet counter = 0;\n\t\tconst placeholder = 0;\n\t\tconst mergedIterables = mergeAsyncIterables();\n\t\tfunction registerAsync(callback) {\n\t\t\tconst idx = counter++;\n\t\t\tconst iterable$1 = callback(idx);\n\t\t\tmergedIterables.add(iterable$1);\n\t\t\treturn idx;\n\t\t}\n\t\tfunction encodePromise(promise, path) {\n\t\t\treturn registerAsync(/* @__PURE__ */ function() {\n\t\t\t\tvar _ref = (0, import_wrapAsyncGenerator$2.default)(function* (idx) {\n\t\t\t\t\tconst error = checkMaxDepth(path);\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tpromise.catch((cause) => {\n\t\t\t\t\t\t\tvar _opts$onError;\n\t\t\t\t\t\t\t(_opts$onError = opts.onError) === null || _opts$onError === void 0 || _opts$onError.call(opts, {\n\t\t\t\t\t\t\t\terror: cause,\n\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpromise = Promise.reject(error);\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst next = yield (0, import_awaitAsyncGenerator$1.default)(promise);\n\t\t\t\t\t\tyield [\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\tPROMISE_STATUS_FULFILLED,\n\t\t\t\t\t\t\tencode(next, path)\n\t\t\t\t\t\t];\n\t\t\t\t\t} catch (cause) {\n\t\t\t\t\t\tvar _opts$onError2, _opts$formatError;\n\t\t\t\t\t\t(_opts$onError2 = opts.onError) === null || _opts$onError2 === void 0 || _opts$onError2.call(opts, {\n\t\t\t\t\t\t\terror: cause,\n\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t});\n\t\t\t\t\t\tyield [\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\tPROMISE_STATUS_REJECTED,\n\t\t\t\t\t\t\t(_opts$formatError = opts.formatError) === null || _opts$formatError === void 0 ? void 0 : _opts$formatError.call(opts, {\n\t\t\t\t\t\t\t\terror: cause,\n\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn function(_x) {\n\t\t\t\t\treturn _ref.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}());\n\t\t}\n\t\tfunction encodeAsyncIterable(iterable$1, path) {\n\t\t\treturn registerAsync(/* @__PURE__ */ function() {\n\t\t\t\tvar _ref2 = (0, import_wrapAsyncGenerator$2.default)(function* (idx) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar _usingCtx$1 = (0, import_usingCtx$1.default)();\n\t\t\t\t\t\tconst error = checkMaxDepth(path);\n\t\t\t\t\t\tif (error) throw error;\n\t\t\t\t\t\tconst iterator = _usingCtx$1.a(iteratorResource(iterable$1));\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\tconst next = yield (0, import_awaitAsyncGenerator$1.default)(iterator.next());\n\t\t\t\t\t\t\t\tif (next.done) {\n\t\t\t\t\t\t\t\t\tyield [\n\t\t\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\t\tASYNC_ITERABLE_STATUS_RETURN,\n\t\t\t\t\t\t\t\t\t\tencode(next.value, path)\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tyield [\n\t\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\tASYNC_ITERABLE_STATUS_YIELD,\n\t\t\t\t\t\t\t\t\tencode(next.value, path)\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (cause) {\n\t\t\t\t\t\t\tvar _opts$onError3, _opts$formatError2;\n\t\t\t\t\t\t\t(_opts$onError3 = opts.onError) === null || _opts$onError3 === void 0 || _opts$onError3.call(opts, {\n\t\t\t\t\t\t\t\terror: cause,\n\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tyield [\n\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\tASYNC_ITERABLE_STATUS_ERROR,\n\t\t\t\t\t\t\t\t(_opts$formatError2 = opts.formatError) === null || _opts$formatError2 === void 0 ? void 0 : _opts$formatError2.call(opts, {\n\t\t\t\t\t\t\t\t\terror: cause,\n\t\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (_) {\n\t\t\t\t\t\t_usingCtx$1.e = _;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tyield (0, import_awaitAsyncGenerator$1.default)(_usingCtx$1.d());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn function(_x2) {\n\t\t\t\t\treturn _ref2.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}());\n\t\t}\n\t\tfunction checkMaxDepth(path) {\n\t\t\tif (opts.maxDepth && path.length > opts.maxDepth) return new MaxDepthError(path);\n\t\t\treturn null;\n\t\t}\n\t\tfunction encodeAsync(value, path) {\n\t\t\tif (isPromise(value)) return [CHUNK_VALUE_TYPE_PROMISE, encodePromise(value, path)];\n\t\t\tif ((0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isAsyncIterable)(value)) {\n\t\t\t\tif (opts.maxDepth && path.length >= opts.maxDepth) throw new Error(\"Max depth reached\");\n\t\t\t\treturn [CHUNK_VALUE_TYPE_ASYNC_ITERABLE, encodeAsyncIterable(value, path)];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tfunction encode(value, path) {\n\t\t\tif (value === void 0) return [[]];\n\t\t\tconst reg = encodeAsync(value, path);\n\t\t\tif (reg) return [[placeholder], [null, ...reg]];\n\t\t\tif (!isPlainObject(value)) return [[value]];\n\t\t\tconst newObj = {};\n\t\t\tconst asyncValues = [];\n\t\t\tfor (const [key, item] of Object.entries(value)) {\n\t\t\t\tconst transformed = encodeAsync(item, [...path, key]);\n\t\t\t\tif (!transformed) {\n\t\t\t\t\tnewObj[key] = item;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnewObj[key] = placeholder;\n\t\t\t\tasyncValues.push([key, ...transformed]);\n\t\t\t}\n\t\t\treturn [[newObj], ...asyncValues];\n\t\t}\n\t\tconst newHead = {};\n\t\tfor (const [key, item] of Object.entries(data)) newHead[key] = encode(item, [key]);\n\t\tyield newHead;\n\t\tlet iterable = mergedIterables;\n\t\tif (opts.pingMs) iterable = withPing(mergedIterables, opts.pingMs);\n\t\tvar _iteratorAbruptCompletion = false;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError;\n\t\ttry {\n\t\t\tfor (var _iterator = (0, import_asyncIterator$1.default)(iterable), _step; _iteratorAbruptCompletion = !(_step = yield (0, import_awaitAsyncGenerator$1.default)(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n\t\t\t\tconst value = _step.value;\n\t\t\t\tyield value;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (_iteratorAbruptCompletion && _iterator.return != null) yield (0, import_awaitAsyncGenerator$1.default)(_iterator.return());\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) throw _iteratorError;\n\t\t\t}\n\t\t}\n\t});\n\treturn _createBatchStreamProducer.apply(this, arguments);\n}\n/**\n* JSON Lines stream producer\n* @see https://jsonlines.org/\n*/\nfunction jsonlStreamProducer(opts) {\n\tlet stream = readableStreamFrom(createBatchStreamProducer(opts));\n\tconst { serialize } = opts;\n\tif (serialize) stream = stream.pipeThrough(new TransformStream({ transform(chunk, controller) {\n\t\tif (chunk === PING_SYM) controller.enqueue(PING_SYM);\n\t\telse controller.enqueue(serialize(chunk));\n\t} }));\n\treturn stream.pipeThrough(new TransformStream({ transform(chunk, controller) {\n\t\tif (chunk === PING_SYM) controller.enqueue(\" \");\n\t\telse controller.enqueue(JSON.stringify(chunk) + \"\\n\");\n\t} })).pipeThrough(new TextEncoderStream());\n}\nvar AsyncError = class extends Error {\n\tconstructor(data) {\n\t\tsuper(\"Received error from server\");\n\t\tthis.data = data;\n\t}\n};\nconst nodeJsStreamToReaderEsque = (source) => {\n\treturn { getReader() {\n\t\tconst stream = new ReadableStream({ start(controller) {\n\t\t\tsource.on(\"data\", (chunk) => {\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t});\n\t\t\tsource.on(\"end\", () => {\n\t\t\t\tcontroller.close();\n\t\t\t});\n\t\t\tsource.on(\"error\", (error) => {\n\t\t\t\tcontroller.error(error);\n\t\t\t});\n\t\t} });\n\t\treturn stream.getReader();\n\t} };\n};\nfunction createLineAccumulator(from) {\n\tconst reader = \"getReader\" in from ? from.getReader() : nodeJsStreamToReaderEsque(from).getReader();\n\tlet lineAggregate = \"\";\n\treturn new ReadableStream({\n\t\tasync pull(controller) {\n\t\t\tconst { done, value } = await reader.read();\n\t\t\tif (done) controller.close();\n\t\t\telse controller.enqueue(value);\n\t\t},\n\t\tcancel() {\n\t\t\treturn reader.cancel();\n\t\t}\n\t}).pipeThrough(new TextDecoderStream()).pipeThrough(new TransformStream({ transform(chunk, controller) {\n\t\tvar _parts$pop;\n\t\tlineAggregate += chunk;\n\t\tconst parts = lineAggregate.split(\"\\n\");\n\t\tlineAggregate = (_parts$pop = parts.pop()) !== null && _parts$pop !== void 0 ? _parts$pop : \"\";\n\t\tfor (const part of parts) controller.enqueue(part);\n\t} }));\n}\nfunction createConsumerStream(from) {\n\tconst stream = createLineAccumulator(from);\n\tlet sentHead = false;\n\treturn stream.pipeThrough(new TransformStream({ transform(line, controller) {\n\t\tif (!sentHead) {\n\t\t\tconst head = JSON.parse(line);\n\t\t\tcontroller.enqueue(head);\n\t\t\tsentHead = true;\n\t\t} else {\n\t\t\tconst chunk = JSON.parse(line);\n\t\t\tcontroller.enqueue(chunk);\n\t\t}\n\t} }));\n}\n/**\n* Creates a handler for managing stream controllers and their lifecycle\n*/\nfunction createStreamsManager(abortController) {\n\tconst controllerMap = /* @__PURE__ */ new Map();\n\t/**\n\t* Checks if there are no pending controllers or deferred promises\n\t*/\n\tfunction isEmpty() {\n\t\treturn Array.from(controllerMap.values()).every((c) => c.closed);\n\t}\n\t/**\n\t* Creates a stream controller\n\t*/\n\tfunction createStreamController() {\n\t\tlet originalController;\n\t\tconst stream = new ReadableStream({ start(controller) {\n\t\t\toriginalController = controller;\n\t\t} });\n\t\tconst streamController = {\n\t\t\tenqueue: (v) => originalController.enqueue(v),\n\t\t\tclose: () => {\n\t\t\t\toriginalController.close();\n\t\t\t\tclear();\n\t\t\t\tif (isEmpty()) abortController.abort();\n\t\t\t},\n\t\t\tclosed: false,\n\t\t\tgetReaderResource: () => {\n\t\t\t\tconst reader = stream.getReader();\n\t\t\t\treturn makeResource(reader, () => {\n\t\t\t\t\treader.releaseLock();\n\t\t\t\t\tstreamController.close();\n\t\t\t\t});\n\t\t\t},\n\t\t\terror: (reason) => {\n\t\t\t\toriginalController.error(reason);\n\t\t\t\tclear();\n\t\t\t}\n\t\t};\n\t\tfunction clear() {\n\t\t\tObject.assign(streamController, {\n\t\t\t\tclosed: true,\n\t\t\t\tclose: () => {},\n\t\t\t\tenqueue: () => {},\n\t\t\t\tgetReaderResource: null,\n\t\t\t\terror: () => {}\n\t\t\t});\n\t\t}\n\t\treturn streamController;\n\t}\n\t/**\n\t* Gets or creates a stream controller\n\t*/\n\tfunction getOrCreate(chunkId) {\n\t\tlet c = controllerMap.get(chunkId);\n\t\tif (!c) {\n\t\t\tc = createStreamController();\n\t\t\tcontrollerMap.set(chunkId, c);\n\t\t}\n\t\treturn c;\n\t}\n\t/**\n\t* Cancels all pending controllers and rejects deferred promises\n\t*/\n\tfunction cancelAll(reason) {\n\t\tfor (const controller of controllerMap.values()) controller.error(reason);\n\t}\n\treturn {\n\t\tgetOrCreate,\n\t\tisEmpty,\n\t\tcancelAll\n\t};\n}\n/**\n* JSON Lines stream consumer\n* @see https://jsonlines.org/\n*/\nasync function jsonlStreamConsumer(opts) {\n\tconst { deserialize = (v) => v } = opts;\n\tlet source = createConsumerStream(opts.from);\n\tif (deserialize) source = source.pipeThrough(new TransformStream({ transform(chunk, controller) {\n\t\tcontroller.enqueue(deserialize(chunk));\n\t} }));\n\tlet headDeferred = createDeferred();\n\tconst streamManager = createStreamsManager(opts.abortController);\n\tfunction decodeChunkDefinition(value) {\n\t\tconst [_path, type, chunkId] = value;\n\t\tconst controller = streamManager.getOrCreate(chunkId);\n\t\tswitch (type) {\n\t\t\tcase CHUNK_VALUE_TYPE_PROMISE: return (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.run)(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tvar _usingCtx3 = (0, import_usingCtx$1.default)();\n\t\t\t\t\tconst reader = _usingCtx3.u(controller.getReaderResource());\n\t\t\t\t\tconst { value: value$1 } = await reader.read();\n\t\t\t\t\tconst [_chunkId, status, data] = value$1;\n\t\t\t\t\tswitch (status) {\n\t\t\t\t\t\tcase PROMISE_STATUS_FULFILLED: return decode(data);\n\t\t\t\t\t\tcase PROMISE_STATUS_REJECTED:\n\t\t\t\t\t\t\tvar _opts$formatError3, _opts$formatError4;\n\t\t\t\t\t\t\tthrow (_opts$formatError3 = (_opts$formatError4 = opts.formatError) === null || _opts$formatError4 === void 0 ? void 0 : _opts$formatError4.call(opts, { error: data })) !== null && _opts$formatError3 !== void 0 ? _opts$formatError3 : new AsyncError(data);\n\t\t\t\t\t}\n\t\t\t\t} catch (_) {\n\t\t\t\t\t_usingCtx3.e = _;\n\t\t\t\t} finally {\n\t\t\t\t\t_usingCtx3.d();\n\t\t\t\t}\n\t\t\t});\n\t\t\tcase CHUNK_VALUE_TYPE_ASYNC_ITERABLE: return (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.run)((0, import_wrapAsyncGenerator$2.default)(function* () {\n\t\t\t\ttry {\n\t\t\t\t\tvar _usingCtx4 = (0, import_usingCtx$1.default)();\n\t\t\t\t\tconst reader = _usingCtx4.u(controller.getReaderResource());\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tconst { value: value$1 } = yield (0, import_awaitAsyncGenerator$1.default)(reader.read());\n\t\t\t\t\t\tconst [_chunkId, status, data] = value$1;\n\t\t\t\t\t\tswitch (status) {\n\t\t\t\t\t\t\tcase ASYNC_ITERABLE_STATUS_YIELD:\n\t\t\t\t\t\t\t\tyield decode(data);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase ASYNC_ITERABLE_STATUS_RETURN: return decode(data);\n\t\t\t\t\t\t\tcase ASYNC_ITERABLE_STATUS_ERROR:\n\t\t\t\t\t\t\t\tvar _opts$formatError5, _opts$formatError6;\n\t\t\t\t\t\t\t\tthrow (_opts$formatError5 = (_opts$formatError6 = opts.formatError) === null || _opts$formatError6 === void 0 ? void 0 : _opts$formatError6.call(opts, { error: data })) !== null && _opts$formatError5 !== void 0 ? _opts$formatError5 : new AsyncError(data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (_) {\n\t\t\t\t\t_usingCtx4.e = _;\n\t\t\t\t} finally {\n\t\t\t\t\t_usingCtx4.d();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\tfunction decode(value) {\n\t\tconst [[data], ...asyncProps] = value;\n\t\tfor (const value$1 of asyncProps) {\n\t\t\tconst [key] = value$1;\n\t\t\tconst decoded = decodeChunkDefinition(value$1);\n\t\t\tif (key === null) return decoded;\n\t\t\tdata[key] = decoded;\n\t\t}\n\t\treturn data;\n\t}\n\tconst closeOrAbort = (reason) => {\n\t\theadDeferred === null || headDeferred === void 0 || headDeferred.reject(reason);\n\t\tstreamManager.cancelAll(reason);\n\t};\n\tsource.pipeTo(new WritableStream({\n\t\twrite(chunkOrHead) {\n\t\t\tif (headDeferred) {\n\t\t\t\tconst head = chunkOrHead;\n\t\t\t\tfor (const [key, value] of Object.entries(chunkOrHead)) {\n\t\t\t\t\tconst parsed = decode(value);\n\t\t\t\t\thead[key] = parsed;\n\t\t\t\t}\n\t\t\t\theadDeferred.resolve(head);\n\t\t\t\theadDeferred = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst chunk = chunkOrHead;\n\t\t\tconst [idx] = chunk;\n\t\t\tconst controller = streamManager.getOrCreate(idx);\n\t\t\tcontroller.enqueue(chunk);\n\t\t},\n\t\tclose: () => closeOrAbort(new Error(\"Stream closed\")),\n\t\tabort: closeOrAbort\n\t}), { signal: opts.abortController.signal }).catch((error) => {\n\t\tvar _opts$onError4;\n\t\t(_opts$onError4 = opts.onError) === null || _opts$onError4 === void 0 || _opts$onError4.call(opts, { error });\n\t\tcloseOrAbort(error);\n\t});\n\treturn [await headDeferred.promise, streamManager];\n}\n\n//#endregion\n//#region ../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncGeneratorDelegate.js\nvar require_asyncGeneratorDelegate = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__commonJS)({ \"../../node_modules/.pnpm/@oxc-project+runtime@0.72.2/node_modules/@oxc-project/runtime/src/helpers/asyncGeneratorDelegate.js\"(exports, module) {\n\tvar OverloadYield = require_OverloadYield();\n\tfunction _asyncGeneratorDelegate$1(t) {\n\t\tvar e = {}, n = !1;\n\t\tfunction pump(e$1, r) {\n\t\t\treturn n = !0, r = new Promise(function(n$1) {\n\t\t\t\tn$1(t[e$1](r));\n\t\t\t}), {\n\t\t\t\tdone: !1,\n\t\t\t\tvalue: new OverloadYield(r, 1)\n\t\t\t};\n\t\t}\n\t\treturn e[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function() {\n\t\t\treturn this;\n\t\t}, e.next = function(t$1) {\n\t\t\treturn n ? (n = !1, t$1) : pump(\"next\", t$1);\n\t\t}, \"function\" == typeof t[\"throw\"] && (e[\"throw\"] = function(t$1) {\n\t\t\tif (n) throw n = !1, t$1;\n\t\t\treturn pump(\"throw\", t$1);\n\t\t}), \"function\" == typeof t[\"return\"] && (e[\"return\"] = function(t$1) {\n\t\t\treturn n ? (n = !1, t$1) : pump(\"return\", t$1);\n\t\t}), e;\n\t}\n\tmodule.exports = _asyncGeneratorDelegate$1, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n} });\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/sse.ts\nvar import_asyncIterator = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_asyncIterator(), 1);\nvar import_awaitAsyncGenerator = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_awaitAsyncGenerator(), 1);\nvar import_wrapAsyncGenerator$1 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_wrapAsyncGenerator(), 1);\nvar import_asyncGeneratorDelegate = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_asyncGeneratorDelegate(), 1);\nvar import_usingCtx = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_usingCtx(), 1);\nconst PING_EVENT = \"ping\";\nconst SERIALIZED_ERROR_EVENT = \"serialized-error\";\nconst CONNECTED_EVENT = \"connected\";\nconst RETURN_EVENT = \"return\";\n/**\n*\n* @see https://html.spec.whatwg.org/multipage/server-sent-events.html\n*/\nfunction sseStreamProducer(opts) {\n\tvar _opts$ping$enabled, _opts$ping, _opts$ping$intervalMs, _opts$ping2, _opts$client;\n\tconst { serialize = _utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.identity } = opts;\n\tconst ping = {\n\t\tenabled: (_opts$ping$enabled = (_opts$ping = opts.ping) === null || _opts$ping === void 0 ? void 0 : _opts$ping.enabled) !== null && _opts$ping$enabled !== void 0 ? _opts$ping$enabled : false,\n\t\tintervalMs: (_opts$ping$intervalMs = (_opts$ping2 = opts.ping) === null || _opts$ping2 === void 0 ? void 0 : _opts$ping2.intervalMs) !== null && _opts$ping$intervalMs !== void 0 ? _opts$ping$intervalMs : 1e3\n\t};\n\tconst client = (_opts$client = opts.client) !== null && _opts$client !== void 0 ? _opts$client : {};\n\tif (ping.enabled && client.reconnectAfterInactivityMs && ping.intervalMs > client.reconnectAfterInactivityMs) throw new Error(`Ping interval must be less than client reconnect interval to prevent unnecessary reconnection - ping.intervalMs: ${ping.intervalMs} client.reconnectAfterInactivityMs: ${client.reconnectAfterInactivityMs}`);\n\tfunction generator() {\n\t\treturn _generator.apply(this, arguments);\n\t}\n\tfunction _generator() {\n\t\t_generator = (0, import_wrapAsyncGenerator$1.default)(function* () {\n\t\t\tyield {\n\t\t\t\tevent: CONNECTED_EVENT,\n\t\t\t\tdata: JSON.stringify(client)\n\t\t\t};\n\t\t\tlet iterable = opts.data;\n\t\t\tif (opts.emitAndEndImmediately) iterable = takeWithGrace(iterable, {\n\t\t\t\tcount: 1,\n\t\t\t\tgracePeriodMs: 1\n\t\t\t});\n\t\t\tif (opts.maxDurationMs && opts.maxDurationMs > 0 && opts.maxDurationMs !== Infinity) iterable = withMaxDuration(iterable, { maxDurationMs: opts.maxDurationMs });\n\t\t\tif (ping.enabled && ping.intervalMs !== Infinity && ping.intervalMs > 0) iterable = withPing(iterable, ping.intervalMs);\n\t\t\tlet value;\n\t\t\tlet chunk;\n\t\t\tvar _iteratorAbruptCompletion = false;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError;\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = (0, import_asyncIterator.default)(iterable), _step; _iteratorAbruptCompletion = !(_step = yield (0, import_awaitAsyncGenerator.default)(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n\t\t\t\t\tvalue = _step.value;\n\t\t\t\t\t{\n\t\t\t\t\t\tif (value === PING_SYM) {\n\t\t\t\t\t\t\tyield {\n\t\t\t\t\t\t\t\tevent: PING_EVENT,\n\t\t\t\t\t\t\t\tdata: \"\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchunk = (0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.isTrackedEnvelope)(value) ? {\n\t\t\t\t\t\t\tid: value[0],\n\t\t\t\t\t\t\tdata: value[1]\n\t\t\t\t\t\t} : { data: value };\n\t\t\t\t\t\tchunk.data = JSON.stringify(serialize(chunk.data));\n\t\t\t\t\t\tyield chunk;\n\t\t\t\t\t\tvalue = null;\n\t\t\t\t\t\tchunk = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (_iteratorAbruptCompletion && _iterator.return != null) yield (0, import_awaitAsyncGenerator.default)(_iterator.return());\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) throw _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn _generator.apply(this, arguments);\n\t}\n\tfunction generatorWithErrorHandling() {\n\t\treturn _generatorWithErrorHandling.apply(this, arguments);\n\t}\n\tfunction _generatorWithErrorHandling() {\n\t\t_generatorWithErrorHandling = (0, import_wrapAsyncGenerator$1.default)(function* () {\n\t\t\ttry {\n\t\t\t\tyield* (0, import_asyncGeneratorDelegate.default)((0, import_asyncIterator.default)(generator()));\n\t\t\t\tyield {\n\t\t\t\t\tevent: RETURN_EVENT,\n\t\t\t\t\tdata: \"\"\n\t\t\t\t};\n\t\t\t} catch (cause) {\n\t\t\t\tvar _opts$formatError, _opts$formatError2;\n\t\t\t\tif (isAbortError(cause)) return;\n\t\t\t\tconst error = (0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.getTRPCErrorFromUnknown)(cause);\n\t\t\t\tconst data = (_opts$formatError = (_opts$formatError2 = opts.formatError) === null || _opts$formatError2 === void 0 ? void 0 : _opts$formatError2.call(opts, { error })) !== null && _opts$formatError !== void 0 ? _opts$formatError : null;\n\t\t\t\tyield {\n\t\t\t\t\tevent: SERIALIZED_ERROR_EVENT,\n\t\t\t\t\tdata: JSON.stringify(serialize(data))\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\treturn _generatorWithErrorHandling.apply(this, arguments);\n\t}\n\tconst stream = readableStreamFrom(generatorWithErrorHandling());\n\treturn stream.pipeThrough(new TransformStream({ transform(chunk, controller) {\n\t\tif (\"event\" in chunk) controller.enqueue(`event: ${chunk.event}\\n`);\n\t\tif (\"data\" in chunk) controller.enqueue(`data: ${chunk.data}\\n`);\n\t\tif (\"id\" in chunk) controller.enqueue(`id: ${chunk.id}\\n`);\n\t\tif (\"comment\" in chunk) controller.enqueue(`: ${chunk.comment}\\n`);\n\t\tcontroller.enqueue(\"\\n\\n\");\n\t} })).pipeThrough(new TextEncoderStream());\n}\nasync function withTimeout(opts) {\n\ttry {\n\t\tvar _usingCtx$1 = (0, import_usingCtx.default)();\n\t\tconst timeoutPromise = _usingCtx$1.u(timerResource(opts.timeoutMs));\n\t\tconst res = await Unpromise.race([opts.promise, timeoutPromise.start()]);\n\t\tif (res === disposablePromiseTimerResult) return await opts.onTimeout();\n\t\treturn res;\n\t} catch (_) {\n\t\t_usingCtx$1.e = _;\n\t} finally {\n\t\t_usingCtx$1.d();\n\t}\n}\n/**\n* @see https://html.spec.whatwg.org/multipage/server-sent-events.html\n*/\nfunction sseStreamConsumer(opts) {\n\tconst { deserialize = (v) => v } = opts;\n\tlet clientOptions = {};\n\tconst signal = opts.signal;\n\tlet _es = null;\n\tconst createStream = () => new ReadableStream({\n\t\tasync start(controller) {\n\t\t\tconst [url, init] = await Promise.all([opts.url(), opts.init()]);\n\t\t\tconst eventSource = _es = new opts.EventSource(url, init);\n\t\t\tcontroller.enqueue({\n\t\t\t\ttype: \"connecting\",\n\t\t\t\teventSource: _es,\n\t\t\t\tevent: null\n\t\t\t});\n\t\t\teventSource.addEventListener(CONNECTED_EVENT, (_msg) => {\n\t\t\t\tconst msg = _msg;\n\t\t\t\tconst options = JSON.parse(msg.data);\n\t\t\t\tclientOptions = options;\n\t\t\t\tcontroller.enqueue({\n\t\t\t\t\ttype: \"connected\",\n\t\t\t\t\toptions,\n\t\t\t\t\teventSource\n\t\t\t\t});\n\t\t\t});\n\t\t\teventSource.addEventListener(SERIALIZED_ERROR_EVENT, (_msg) => {\n\t\t\t\tconst msg = _msg;\n\t\t\t\tcontroller.enqueue({\n\t\t\t\t\ttype: \"serialized-error\",\n\t\t\t\t\terror: deserialize(JSON.parse(msg.data)),\n\t\t\t\t\teventSource\n\t\t\t\t});\n\t\t\t});\n\t\t\teventSource.addEventListener(PING_EVENT, () => {\n\t\t\t\tcontroller.enqueue({\n\t\t\t\t\ttype: \"ping\",\n\t\t\t\t\teventSource\n\t\t\t\t});\n\t\t\t});\n\t\t\teventSource.addEventListener(RETURN_EVENT, () => {\n\t\t\t\teventSource.close();\n\t\t\t\tcontroller.close();\n\t\t\t\t_es = null;\n\t\t\t});\n\t\t\teventSource.addEventListener(\"error\", (event) => {\n\t\t\t\tif (eventSource.readyState === eventSource.CLOSED) controller.error(event);\n\t\t\t\telse controller.enqueue({\n\t\t\t\t\ttype: \"connecting\",\n\t\t\t\t\teventSource,\n\t\t\t\t\tevent\n\t\t\t\t});\n\t\t\t});\n\t\t\teventSource.addEventListener(\"message\", (_msg) => {\n\t\t\t\tconst msg = _msg;\n\t\t\t\tconst chunk = deserialize(JSON.parse(msg.data));\n\t\t\t\tconst def = { data: chunk };\n\t\t\t\tif (msg.lastEventId) def.id = msg.lastEventId;\n\t\t\t\tcontroller.enqueue({\n\t\t\t\t\ttype: \"data\",\n\t\t\t\t\tdata: def,\n\t\t\t\t\teventSource\n\t\t\t\t});\n\t\t\t});\n\t\t\tconst onAbort = () => {\n\t\t\t\ttry {\n\t\t\t\t\teventSource.close();\n\t\t\t\t\tcontroller.close();\n\t\t\t\t} catch (_unused) {}\n\t\t\t};\n\t\t\tif (signal.aborted) onAbort();\n\t\t\telse signal.addEventListener(\"abort\", onAbort);\n\t\t},\n\t\tcancel() {\n\t\t\t_es === null || _es === void 0 || _es.close();\n\t\t}\n\t});\n\tconst getStreamResource = () => {\n\t\tlet stream = createStream();\n\t\tlet reader = stream.getReader();\n\t\tasync function dispose() {\n\t\t\tawait reader.cancel();\n\t\t\t_es = null;\n\t\t}\n\t\treturn makeAsyncResource({\n\t\t\tread() {\n\t\t\t\treturn reader.read();\n\t\t\t},\n\t\t\tasync recreate() {\n\t\t\t\tawait dispose();\n\t\t\t\tstream = createStream();\n\t\t\t\treader = stream.getReader();\n\t\t\t}\n\t\t}, dispose);\n\t};\n\treturn (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.run)((0, import_wrapAsyncGenerator$1.default)(function* () {\n\t\ttry {\n\t\t\tvar _usingCtx3 = (0, import_usingCtx.default)();\n\t\t\tconst stream = _usingCtx3.a(getStreamResource());\n\t\t\twhile (true) {\n\t\t\t\tlet promise = stream.read();\n\t\t\t\tconst timeoutMs = clientOptions.reconnectAfterInactivityMs;\n\t\t\t\tif (timeoutMs) promise = withTimeout({\n\t\t\t\t\tpromise,\n\t\t\t\t\ttimeoutMs,\n\t\t\t\t\tonTimeout: async () => {\n\t\t\t\t\t\tconst res = {\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\ttype: \"timeout\",\n\t\t\t\t\t\t\t\tms: timeoutMs,\n\t\t\t\t\t\t\t\teventSource: _es\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdone: false\n\t\t\t\t\t\t};\n\t\t\t\t\t\tawait stream.recreate();\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconst result = yield (0, import_awaitAsyncGenerator.default)(promise);\n\t\t\t\tif (result.done) return result.value;\n\t\t\t\tyield result.value;\n\t\t\t}\n\t\t} catch (_) {\n\t\t\t_usingCtx3.e = _;\n\t\t} finally {\n\t\t\tyield (0, import_awaitAsyncGenerator.default)(_usingCtx3.d());\n\t\t}\n\t}));\n}\nconst sseHeaders = {\n\t\"Content-Type\": \"text/event-stream\",\n\t\"Cache-Control\": \"no-cache, no-transform\",\n\t\"X-Accel-Buffering\": \"no\",\n\tConnection: \"keep-alive\"\n};\n\n//#endregion\n//#region src/unstable-core-do-not-import/http/resolveResponse.ts\nvar import_wrapAsyncGenerator = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)(require_wrapAsyncGenerator(), 1);\nvar import_objectSpread2 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.__toESM)((0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.require_objectSpread2)(), 1);\nfunction errorToAsyncIterable(err) {\n\treturn (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.run)((0, import_wrapAsyncGenerator.default)(function* () {\n\t\tthrow err;\n\t}));\n}\nconst TYPE_ACCEPTED_METHOD_MAP = {\n\tmutation: [\"POST\"],\n\tquery: [\"GET\"],\n\tsubscription: [\"GET\"]\n};\nconst TYPE_ACCEPTED_METHOD_MAP_WITH_METHOD_OVERRIDE = {\n\tmutation: [\"POST\"],\n\tquery: [\"GET\", \"POST\"],\n\tsubscription: [\"GET\", \"POST\"]\n};\nfunction initResponse(initOpts) {\n\tvar _responseMeta, _info$calls$find$proc, _info$calls$find;\n\tconst { ctx, info, responseMeta, untransformedJSON, errors = [], headers } = initOpts;\n\tlet status = untransformedJSON ? (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.getHTTPStatusCode)(untransformedJSON) : 200;\n\tconst eagerGeneration = !untransformedJSON;\n\tconst data = eagerGeneration ? [] : Array.isArray(untransformedJSON) ? untransformedJSON : [untransformedJSON];\n\tconst meta = (_responseMeta = responseMeta === null || responseMeta === void 0 ? void 0 : responseMeta({\n\t\tctx,\n\t\tinfo,\n\t\tpaths: info === null || info === void 0 ? void 0 : info.calls.map((call) => call.path),\n\t\tdata,\n\t\terrors,\n\t\teagerGeneration,\n\t\ttype: (_info$calls$find$proc = info === null || info === void 0 || (_info$calls$find = info.calls.find((call) => {\n\t\t\tvar _call$procedure;\n\t\t\treturn (_call$procedure = call.procedure) === null || _call$procedure === void 0 ? void 0 : _call$procedure._def.type;\n\t\t})) === null || _info$calls$find === void 0 || (_info$calls$find = _info$calls$find.procedure) === null || _info$calls$find === void 0 ? void 0 : _info$calls$find._def.type) !== null && _info$calls$find$proc !== void 0 ? _info$calls$find$proc : \"unknown\"\n\t})) !== null && _responseMeta !== void 0 ? _responseMeta : {};\n\tif (meta.headers) {\n\t\tif (meta.headers instanceof Headers) for (const [key, value] of meta.headers.entries()) headers.append(key, value);\n\t\telse\n /**\n\t\t* @deprecated, delete in v12\n\t\t*/\n\t\tfor (const [key, value] of Object.entries(meta.headers)) if (Array.isArray(value)) for (const v of value) headers.append(key, v);\n\t\telse if (typeof value === \"string\") headers.set(key, value);\n\t}\n\tif (meta.status) status = meta.status;\n\treturn { status };\n}\nfunction caughtErrorToData(cause, errorOpts) {\n\tconst { router, req, onError } = errorOpts.opts;\n\tconst error = (0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.getTRPCErrorFromUnknown)(cause);\n\tonError === null || onError === void 0 || onError({\n\t\terror,\n\t\tpath: errorOpts.path,\n\t\tinput: errorOpts.input,\n\t\tctx: errorOpts.ctx,\n\t\ttype: errorOpts.type,\n\t\treq\n\t});\n\tconst untransformedJSON = { error: (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.getErrorShape)({\n\t\tconfig: router._def._config,\n\t\terror,\n\t\ttype: errorOpts.type,\n\t\tpath: errorOpts.path,\n\t\tinput: errorOpts.input,\n\t\tctx: errorOpts.ctx\n\t}) };\n\tconst transformedJSON = (0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.transformTRPCResponse)(router._def._config, untransformedJSON);\n\tconst body = JSON.stringify(transformedJSON);\n\treturn {\n\t\terror,\n\t\tuntransformedJSON,\n\t\tbody\n\t};\n}\n/**\n* Check if a value is a stream-like object\n* - if it's an async iterable\n* - if it's an object with async iterables or promises\n*/\nfunction isDataStream(v) {\n\tif (!(0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(v)) return false;\n\tif ((0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isAsyncIterable)(v)) return true;\n\treturn Object.values(v).some(isPromise) || Object.values(v).some(_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isAsyncIterable);\n}\nasync function resolveResponse(opts) {\n\tvar _ref, _opts$allowBatching, _opts$batching, _opts$allowMethodOver, _config$sse$enabled, _config$sse;\n\tconst { router, req } = opts;\n\tconst headers = new Headers([[\"vary\", \"trpc-accept\"]]);\n\tconst config = router._def._config;\n\tconst url = new URL(req.url);\n\tif (req.method === \"HEAD\") return new Response(null, { status: 204 });\n\tconst allowBatching = (_ref = (_opts$allowBatching = opts.allowBatching) !== null && _opts$allowBatching !== void 0 ? _opts$allowBatching : (_opts$batching = opts.batching) === null || _opts$batching === void 0 ? void 0 : _opts$batching.enabled) !== null && _ref !== void 0 ? _ref : true;\n\tconst allowMethodOverride = ((_opts$allowMethodOver = opts.allowMethodOverride) !== null && _opts$allowMethodOver !== void 0 ? _opts$allowMethodOver : false) && req.method === \"POST\";\n\tconst infoTuple = await (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.run)(async () => {\n\t\ttry {\n\t\t\treturn [void 0, await getRequestInfo({\n\t\t\t\treq,\n\t\t\t\tpath: decodeURIComponent(opts.path),\n\t\t\t\trouter,\n\t\t\t\tsearchParams: url.searchParams,\n\t\t\t\theaders: opts.req.headers,\n\t\t\t\turl\n\t\t\t})];\n\t\t} catch (cause) {\n\t\t\treturn [(0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.getTRPCErrorFromUnknown)(cause), void 0];\n\t\t}\n\t});\n\tconst ctxManager = (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.run)(() => {\n\t\tlet result = void 0;\n\t\treturn {\n\t\t\tvalueOrUndefined: () => {\n\t\t\t\tif (!result) return void 0;\n\t\t\t\treturn result[1];\n\t\t\t},\n\t\t\tvalue: () => {\n\t\t\t\tconst [err, ctx] = result;\n\t\t\t\tif (err) throw err;\n\t\t\t\treturn ctx;\n\t\t\t},\n\t\t\tcreate: async (info) => {\n\t\t\t\tif (result) throw new Error(\"This should only be called once - report a bug in tRPC\");\n\t\t\t\ttry {\n\t\t\t\t\tconst ctx = await opts.createContext({ info });\n\t\t\t\t\tresult = [void 0, ctx];\n\t\t\t\t} catch (cause) {\n\t\t\t\t\tresult = [(0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.getTRPCErrorFromUnknown)(cause), void 0];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\tconst methodMapper = allowMethodOverride ? TYPE_ACCEPTED_METHOD_MAP_WITH_METHOD_OVERRIDE : TYPE_ACCEPTED_METHOD_MAP;\n\t/**\n\t* @deprecated\n\t*/\n\tconst isStreamCall = req.headers.get(\"trpc-accept\") === \"application/jsonl\";\n\tconst experimentalSSE = (_config$sse$enabled = (_config$sse = config.sse) === null || _config$sse === void 0 ? void 0 : _config$sse.enabled) !== null && _config$sse$enabled !== void 0 ? _config$sse$enabled : true;\n\ttry {\n\t\tconst [infoError, info] = infoTuple;\n\t\tif (infoError) throw infoError;\n\t\tif (info.isBatchCall && !allowBatching) throw new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\tcode: \"BAD_REQUEST\",\n\t\t\tmessage: `Batching is not enabled on the server`\n\t\t});\n\t\t/* istanbul ignore if -- @preserve */\n\t\tif (isStreamCall && !info.isBatchCall) throw new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\tmessage: `Streaming requests must be batched (you can do a batch of 1)`,\n\t\t\tcode: \"BAD_REQUEST\"\n\t\t});\n\t\tawait ctxManager.create(info);\n\t\tconst rpcCalls = info.calls.map(async (call) => {\n\t\t\tconst proc = call.procedure;\n\t\t\ttry {\n\t\t\t\tif (opts.error) throw opts.error;\n\t\t\t\tif (!proc) throw new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\t\t\tcode: \"NOT_FOUND\",\n\t\t\t\t\tmessage: `No procedure found on path \"${call.path}\"`\n\t\t\t\t});\n\t\t\t\tif (!methodMapper[proc._def.type].includes(req.method)) throw new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\t\t\tcode: \"METHOD_NOT_SUPPORTED\",\n\t\t\t\t\tmessage: `Unsupported ${req.method}-request to ${proc._def.type} procedure at path \"${call.path}\"`\n\t\t\t\t});\n\t\t\t\tif (proc._def.type === \"subscription\") {\n\t\t\t\t\t/* istanbul ignore if -- @preserve */\n\t\t\t\t\tif (info.isBatchCall) throw new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\t\t\t\tcode: \"BAD_REQUEST\",\n\t\t\t\t\t\tmessage: `Cannot batch subscription calls`\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconst data = await proc({\n\t\t\t\t\tpath: call.path,\n\t\t\t\t\tgetRawInput: call.getRawInput,\n\t\t\t\t\tctx: ctxManager.value(),\n\t\t\t\t\ttype: proc._def.type,\n\t\t\t\t\tsignal: opts.req.signal\n\t\t\t\t});\n\t\t\t\treturn [void 0, { data }];\n\t\t\t} catch (cause) {\n\t\t\t\tvar _opts$onError, _call$procedure$_def$, _call$procedure2;\n\t\t\t\tconst error = (0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.getTRPCErrorFromUnknown)(cause);\n\t\t\t\tconst input = call.result();\n\t\t\t\t(_opts$onError = opts.onError) === null || _opts$onError === void 0 || _opts$onError.call(opts, {\n\t\t\t\t\terror,\n\t\t\t\t\tpath: call.path,\n\t\t\t\t\tinput,\n\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\ttype: (_call$procedure$_def$ = (_call$procedure2 = call.procedure) === null || _call$procedure2 === void 0 ? void 0 : _call$procedure2._def.type) !== null && _call$procedure$_def$ !== void 0 ? _call$procedure$_def$ : \"unknown\",\n\t\t\t\t\treq: opts.req\n\t\t\t\t});\n\t\t\t\treturn [error, void 0];\n\t\t\t}\n\t\t});\n\t\tif (!info.isBatchCall) {\n\t\t\tconst [call] = info.calls;\n\t\t\tconst [error, result] = await rpcCalls[0];\n\t\t\tswitch (info.type) {\n\t\t\t\tcase \"unknown\":\n\t\t\t\tcase \"mutation\":\n\t\t\t\tcase \"query\": {\n\t\t\t\t\theaders.set(\"content-type\", \"application/json\");\n\t\t\t\t\tif (isDataStream(result === null || result === void 0 ? void 0 : result.data)) throw new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\t\t\t\tcode: \"UNSUPPORTED_MEDIA_TYPE\",\n\t\t\t\t\t\tmessage: \"Cannot use stream-like response in non-streaming request - use httpBatchStreamLink\"\n\t\t\t\t\t});\n\t\t\t\t\tconst res = error ? { error: (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.getErrorShape)({\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tinput: call.result(),\n\t\t\t\t\t\tpath: call.path,\n\t\t\t\t\t\ttype: info.type\n\t\t\t\t\t}) } : { result: { data: result.data } };\n\t\t\t\t\tconst headResponse$1 = initResponse({\n\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\tinfo,\n\t\t\t\t\t\tresponseMeta: opts.responseMeta,\n\t\t\t\t\t\terrors: error ? [error] : [],\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tuntransformedJSON: [res]\n\t\t\t\t\t});\n\t\t\t\t\treturn new Response(JSON.stringify((0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.transformTRPCResponse)(config, res)), {\n\t\t\t\t\t\tstatus: headResponse$1.status,\n\t\t\t\t\t\theaders\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tcase \"subscription\": {\n\t\t\t\t\tconst iterable = (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.run)(() => {\n\t\t\t\t\t\tif (error) return errorToAsyncIterable(error);\n\t\t\t\t\t\tif (!experimentalSSE) return errorToAsyncIterable(new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\t\t\t\t\tcode: \"METHOD_NOT_SUPPORTED\",\n\t\t\t\t\t\t\tmessage: \"Missing experimental flag \\\"sseSubscriptions\\\"\"\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tif (!(0,_observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_3__.isObservable)(result.data) && !(0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_0__.isAsyncIterable)(result.data)) return errorToAsyncIterable(new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\t\t\t\t\tmessage: `Subscription ${call.path} did not return an observable or a AsyncGenerator`,\n\t\t\t\t\t\t\tcode: \"INTERNAL_SERVER_ERROR\"\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tconst dataAsIterable = (0,_observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_3__.isObservable)(result.data) ? (0,_observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_3__.observableToAsyncIterable)(result.data, opts.req.signal) : result.data;\n\t\t\t\t\t\treturn dataAsIterable;\n\t\t\t\t\t});\n\t\t\t\t\tconst stream = sseStreamProducer((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, config.sse), {}, {\n\t\t\t\t\t\tdata: iterable,\n\t\t\t\t\t\tserialize: (v) => config.transformer.output.serialize(v),\n\t\t\t\t\t\tformatError(errorOpts) {\n\t\t\t\t\t\t\tvar _call$procedure$_def$2, _call$procedure3, _opts$onError2;\n\t\t\t\t\t\t\tconst error$1 = (0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.getTRPCErrorFromUnknown)(errorOpts.error);\n\t\t\t\t\t\t\tconst input = call === null || call === void 0 ? void 0 : call.result();\n\t\t\t\t\t\t\tconst path = call === null || call === void 0 ? void 0 : call.path;\n\t\t\t\t\t\t\tconst type = (_call$procedure$_def$2 = call === null || call === void 0 || (_call$procedure3 = call.procedure) === null || _call$procedure3 === void 0 ? void 0 : _call$procedure3._def.type) !== null && _call$procedure$_def$2 !== void 0 ? _call$procedure$_def$2 : \"unknown\";\n\t\t\t\t\t\t\t(_opts$onError2 = opts.onError) === null || _opts$onError2 === void 0 || _opts$onError2.call(opts, {\n\t\t\t\t\t\t\t\terror: error$1,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\t\t\treq: opts.req,\n\t\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst shape = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.getErrorShape)({\n\t\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\t\t\terror: error$1,\n\t\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn shape;\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t\tfor (const [key, value] of Object.entries(sseHeaders)) headers.set(key, value);\n\t\t\t\t\tconst headResponse$1 = initResponse({\n\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\tinfo,\n\t\t\t\t\t\tresponseMeta: opts.responseMeta,\n\t\t\t\t\t\terrors: [],\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tuntransformedJSON: null\n\t\t\t\t\t});\n\t\t\t\t\treturn new Response(stream, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tstatus: headResponse$1.status\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (info.accept === \"application/jsonl\") {\n\t\t\theaders.set(\"content-type\", \"application/json\");\n\t\t\theaders.set(\"transfer-encoding\", \"chunked\");\n\t\t\tconst headResponse$1 = initResponse({\n\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\tinfo,\n\t\t\t\tresponseMeta: opts.responseMeta,\n\t\t\t\terrors: [],\n\t\t\t\theaders,\n\t\t\t\tuntransformedJSON: null\n\t\t\t});\n\t\t\tconst stream = jsonlStreamProducer((0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, config.jsonl), {}, {\n\t\t\t\tmaxDepth: Infinity,\n\t\t\t\tdata: rpcCalls.map(async (res) => {\n\t\t\t\t\tconst [error, result] = await res;\n\t\t\t\t\tconst call = info.calls[0];\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tvar _procedure$_def$type, _procedure;\n\t\t\t\t\t\treturn { error: (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.getErrorShape)({\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\tinput: call.result(),\n\t\t\t\t\t\t\tpath: call.path,\n\t\t\t\t\t\t\ttype: (_procedure$_def$type = (_procedure = call.procedure) === null || _procedure === void 0 ? void 0 : _procedure._def.type) !== null && _procedure$_def$type !== void 0 ? _procedure$_def$type : \"unknown\"\n\t\t\t\t\t\t}) };\n\t\t\t\t\t}\n\t\t\t\t\t/**\n\t\t\t\t\t* Not very pretty, but we need to wrap nested data in promises\n\t\t\t\t\t* Our stream producer will only resolve top-level async values or async values that are directly nested in another async value\n\t\t\t\t\t*/\n\t\t\t\t\tconst iterable = (0,_observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_3__.isObservable)(result.data) ? (0,_observable_UMO3vUa_mjs__WEBPACK_IMPORTED_MODULE_3__.observableToAsyncIterable)(result.data, opts.req.signal) : Promise.resolve(result.data);\n\t\t\t\t\treturn { result: Promise.resolve({ data: iterable }) };\n\t\t\t\t}),\n\t\t\t\tserialize: config.transformer.output.serialize,\n\t\t\t\tonError: (cause) => {\n\t\t\t\t\tvar _opts$onError3, _info$type;\n\t\t\t\t\t(_opts$onError3 = opts.onError) === null || _opts$onError3 === void 0 || _opts$onError3.call(opts, {\n\t\t\t\t\t\terror: (0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.getTRPCErrorFromUnknown)(cause),\n\t\t\t\t\t\tpath: void 0,\n\t\t\t\t\t\tinput: void 0,\n\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\treq: opts.req,\n\t\t\t\t\t\ttype: (_info$type = info === null || info === void 0 ? void 0 : info.type) !== null && _info$type !== void 0 ? _info$type : \"unknown\"\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tformatError(errorOpts) {\n\t\t\t\t\tvar _call$procedure$_def$3, _call$procedure4;\n\t\t\t\t\tconst call = info === null || info === void 0 ? void 0 : info.calls[errorOpts.path[0]];\n\t\t\t\t\tconst error = (0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.getTRPCErrorFromUnknown)(errorOpts.error);\n\t\t\t\t\tconst input = call === null || call === void 0 ? void 0 : call.result();\n\t\t\t\t\tconst path = call === null || call === void 0 ? void 0 : call.path;\n\t\t\t\t\tconst type = (_call$procedure$_def$3 = call === null || call === void 0 || (_call$procedure4 = call.procedure) === null || _call$procedure4 === void 0 ? void 0 : _call$procedure4._def.type) !== null && _call$procedure$_def$3 !== void 0 ? _call$procedure$_def$3 : \"unknown\";\n\t\t\t\t\tconst shape = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.getErrorShape)({\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\ttype\n\t\t\t\t\t});\n\t\t\t\t\treturn shape;\n\t\t\t\t}\n\t\t\t}));\n\t\t\treturn new Response(stream, {\n\t\t\t\theaders,\n\t\t\t\tstatus: headResponse$1.status\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t* Non-streaming response:\n\t\t* - await all responses in parallel, blocking on the slowest one\n\t\t* - create headers with known response body\n\t\t* - return a complete HTTPResponse\n\t\t*/\n\t\theaders.set(\"content-type\", \"application/json\");\n\t\tconst results = (await Promise.all(rpcCalls)).map((res) => {\n\t\t\tconst [error, result] = res;\n\t\t\tif (error) return res;\n\t\t\tif (isDataStream(result.data)) return [new _tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n\t\t\t\tcode: \"UNSUPPORTED_MEDIA_TYPE\",\n\t\t\t\tmessage: \"Cannot use stream-like response in non-streaming request - use httpBatchStreamLink\"\n\t\t\t}), void 0];\n\t\t\treturn res;\n\t\t});\n\t\tconst resultAsRPCResponse = results.map(([error, result], index) => {\n\t\t\tconst call = info.calls[index];\n\t\t\tif (error) {\n\t\t\t\tvar _call$procedure$_def$4, _call$procedure5;\n\t\t\t\treturn { error: (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_2__.getErrorShape)({\n\t\t\t\t\tconfig,\n\t\t\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\t\t\terror,\n\t\t\t\t\tinput: call.result(),\n\t\t\t\t\tpath: call.path,\n\t\t\t\t\ttype: (_call$procedure$_def$4 = (_call$procedure5 = call.procedure) === null || _call$procedure5 === void 0 ? void 0 : _call$procedure5._def.type) !== null && _call$procedure$_def$4 !== void 0 ? _call$procedure$_def$4 : \"unknown\"\n\t\t\t\t}) };\n\t\t\t}\n\t\t\treturn { result: { data: result.data } };\n\t\t});\n\t\tconst errors = results.map(([error]) => error).filter(Boolean);\n\t\tconst headResponse = initResponse({\n\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\tinfo,\n\t\t\tresponseMeta: opts.responseMeta,\n\t\t\tuntransformedJSON: resultAsRPCResponse,\n\t\t\terrors,\n\t\t\theaders\n\t\t});\n\t\treturn new Response(JSON.stringify((0,_tracked_gU3ttYjg_mjs__WEBPACK_IMPORTED_MODULE_1__.transformTRPCResponse)(config, resultAsRPCResponse)), {\n\t\t\tstatus: headResponse.status,\n\t\t\theaders\n\t\t});\n\t} catch (cause) {\n\t\tvar _info$type2;\n\t\tconst [_infoError, info] = infoTuple;\n\t\tconst ctx = ctxManager.valueOrUndefined();\n\t\tconst { error, untransformedJSON, body } = caughtErrorToData(cause, {\n\t\t\topts,\n\t\t\tctx: ctxManager.valueOrUndefined(),\n\t\t\ttype: (_info$type2 = info === null || info === void 0 ? void 0 : info.type) !== null && _info$type2 !== void 0 ? _info$type2 : \"unknown\"\n\t\t});\n\t\tconst headResponse = initResponse({\n\t\t\tctx,\n\t\t\tinfo,\n\t\t\tresponseMeta: opts.responseMeta,\n\t\t\tuntransformedJSON,\n\t\t\terrors: [error],\n\t\t\theaders\n\t\t});\n\t\treturn new Response(body, {\n\t\t\tstatus: headResponse.status,\n\t\t\theaders\n\t\t});\n\t}\n}\n\n//#endregion\n\n//# sourceMappingURL=resolveResponse-CzlbRpCI.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvcmVzb2x2ZVJlc3BvbnNlLUN6bGJScENJLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBb0o7QUFDVjtBQUM5QztBQUNSOztBQUVwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sNkRBQVE7QUFDZjtBQUNBLHdHQUF3Ryx5Q0FBeUMsSUFBSSxJQUFJLGFBQWEsY0FBYztBQUNwTDtBQUNBLEdBQUc7QUFDSCxZQUFZLDREQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsWUFBWSw0REFBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkIsb0VBQU8sQ0FBQyxrRkFBcUI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNERBQVM7QUFDbEMsY0FBYyw0REFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBLFVBQVUsTUFBTTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDhCQUE4QjtBQUM5QixRQUFRLDZEQUFRLG9CQUFvQiw0REFBUztBQUM3QztBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLDJCQUEyQix5RUFBa0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDZEQUFRLDJGQUEyRixZQUFZLElBQUksYUFBYTtBQUMzSjtBQUNBO0FBQ0Esb0VBQW9FLGFBQWE7QUFDakY7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsZ0NBQWdDLDREQUFTO0FBQ3pDO0FBQ0EsbURBQW1ELDZCQUE2QjtBQUNoRixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsVUFBVSxNQUFNO0FBQ2hCLHVDQUF1Qyw0REFBUztBQUNoRDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCwwQkFBMEIseUVBQWtCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBLFVBQVUsTUFBTTtBQUNoQix1Q0FBdUMsNERBQVM7QUFDaEQ7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIseUVBQWtCO0FBQ3ZDLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDREQUFTO0FBQ3BCO0FBQ0EsMEVBQTBFLGdDQUFnQztBQUMxRyxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDZEQUFRO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0QkFBNEIsb0VBQU8sQ0FBQyxtRkFBc0I7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxTQUFTO0FBQ3JGO0FBQ0EsSUFBSTtBQUNKLEdBQUc7QUFDSDtBQUNBLFdBQVcsY0FBYztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFLFFBQVE7QUFDcEY7QUFDQSxJQUFJO0FBQ0osR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxhQUFhO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGFBQWE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGNBQWM7QUFDeEIsbUVBQW1FLGFBQWE7QUFDaEY7QUFDQTtBQUNBO0FBQ0EsVUFBVSxjQUFjO0FBQ3hCLHVEQUF1RCxhQUFhO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLFVBQVUsY0FBYztBQUN4Qix3REFBd0QsYUFBYTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixpQ0FBaUMsYUFBYTtBQUM5QztBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixpQ0FBaUMsYUFBYTtBQUM5QztBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLElBQUk7QUFDSjtBQUNBLEVBQUU7QUFDRjs7QUFFQTtBQUNBO0FBQ0EsdUJBQXVCLHVFQUFVLEdBQUc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLFFBQVE7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsS0FBSztBQUNMO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxZQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLDRCQUE0Qix1RUFBVSxHQUFHO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0Esa0NBQWtDLHVFQUFVLEdBQUc7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLGlDQUFpQyx1RUFBVSxHQUFHO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQSxFQUFFO0FBQ0Y7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0Esd0JBQXdCLG9FQUFPO0FBQy9CLG1DQUFtQyxvRUFBTztBQUMxQyxrQ0FBa0Msb0VBQU87QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSxpQkFBaUIsc0JBQXNCLFVBQVUsZUFBZTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixzQkFBc0IsVUFBVSxlQUFlO0FBQ2hFLEdBQUcsYUFBYSxpQ0FBaUMscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx3QkFBd0Isb0VBQU87QUFDL0IsbUNBQW1DLG9FQUFPO0FBQzFDLGtDQUFrQyxvRUFBTztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxnQ0FBZ0M7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGFBQWE7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxhQUFhO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBLHdCQUF3QixvRUFBTztBQUMvQixtQ0FBbUMsb0VBQU87QUFDMUMsa0NBQWtDLG9FQUFPO0FBQ3pDO0FBQ0E7QUFDQSxpQkFBaUIsc0JBQXNCLFVBQVUsZUFBZSxlQUFlO0FBQy9FLDBDQUEwQyxxQkFBcUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNEJBQTRCLHVFQUFVLEdBQUc7QUFDekM7QUFDQTtBQUNBLHdGQUF3RixJQUFJO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLG1DQUFtQyxvRUFBTztBQUMxQyxrQ0FBa0Msb0VBQU87QUFDekMsd0JBQXdCLG9FQUFPO0FBQy9CLDZCQUE2QixvRUFBTztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw2REFBUSxXQUFXLCtEQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsT0FBTztBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxvRUFBZTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFLCtHQUErRztBQUM3TDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxZQUFZO0FBQ3JCLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0EsSUFBSTtBQUNKLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Ysc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsRUFBRSx5RUFBeUU7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx5QkFBeUI7QUFDbEM7QUFDQSxvRUFBb0U7QUFDcEU7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLHdEQUFHO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnS0FBZ0ssYUFBYTtBQUM3SztBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKLGdEQUFnRCx3REFBRztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUJBQWlCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpS0FBaUssYUFBYTtBQUM5SztBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsRUFBRSxLQUFLLHFDQUFxQztBQUM1QztBQUNBLHVHQUF1RyxPQUFPO0FBQzlHO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFDQUFxQyx1RUFBVSxHQUFHO0FBQ2xEO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSwyQkFBMkIsb0VBQU87QUFDbEMsaUNBQWlDLG9FQUFPO0FBQ3hDLGtDQUFrQyxvRUFBTztBQUN6QyxvQ0FBb0Msb0VBQU87QUFDM0Msc0JBQXNCLG9FQUFPO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxZQUFZLHlEQUFRLEdBQUc7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1QQUFtUCxpQkFBaUIscUNBQXFDLGtDQUFrQztBQUMzVTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSiwrSEFBK0gsbUNBQW1DO0FBQ2xLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLDZHQUE2RztBQUMxTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHdFQUFpQjtBQUMvQjtBQUNBO0FBQ0EsUUFBUSxJQUFJO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGtCQUFrQiw4RUFBdUI7QUFDekMsbUtBQW1LLE9BQU87QUFDMUs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxpREFBaUQ7QUFDakQscURBQXFELFlBQVk7QUFDakUsbURBQW1ELFdBQVc7QUFDOUQsK0NBQStDLFNBQVM7QUFDeEQsa0RBQWtELGNBQWM7QUFDaEU7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMseUJBQXlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsUUFBUSx3REFBRztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdDQUFnQyxvRUFBTztBQUN2QywyQkFBMkIsb0VBQU8sQ0FBQyxrRkFBcUI7QUFDeEQ7QUFDQSxRQUFRLHdEQUFHO0FBQ1g7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLG1FQUFtRTtBQUM1RSxrQ0FBa0MsOEVBQWlCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLFNBQVMsdUJBQXVCO0FBQ2hDLGVBQWUsOEVBQXVCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGLDZCQUE2QixPQUFPLDBFQUFhO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRix5QkFBeUIsNEVBQXFCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSw2REFBUTtBQUNkLEtBQUssb0VBQWU7QUFDcEIsa0VBQWtFLGdFQUFlO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLFNBQVMsY0FBYztBQUN2QjtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsYUFBYTtBQUNyRTtBQUNBO0FBQ0EseUJBQXlCLHdEQUFHO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osSUFBSTtBQUNKLFdBQVcsOEVBQXVCO0FBQ2xDO0FBQ0EsRUFBRTtBQUNGLG9CQUFvQix3REFBRztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxNQUFNO0FBQ2xEO0FBQ0EsTUFBTTtBQUNOLGVBQWUsOEVBQXVCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsNERBQVM7QUFDN0Q7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLG1EQUFtRCw0REFBUztBQUM1RDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNERBQVM7QUFDbEM7QUFDQSw2Q0FBNkMsVUFBVTtBQUN2RCxLQUFLO0FBQ0wsc0VBQXNFLDREQUFTO0FBQy9FO0FBQ0EsNkJBQTZCLFdBQVcsY0FBYyxnQkFBZ0IscUJBQXFCLFVBQVU7QUFDckcsS0FBSztBQUNMO0FBQ0E7QUFDQSxxQ0FBcUMsNERBQVM7QUFDOUM7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxzQkFBc0IsTUFBTTtBQUM1QixLQUFLO0FBQ0w7QUFDQSxrQkFBa0IsOEVBQXVCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEZBQThGLDREQUFTO0FBQ3ZHO0FBQ0E7QUFDQSxNQUFNO0FBQ04sMkJBQTJCLE9BQU8sMEVBQWE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxJQUFJLElBQUksVUFBVTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTix3Q0FBd0MsNEVBQXFCO0FBQzdEO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLHNCQUFzQix3REFBRztBQUN6QjtBQUNBLDREQUE0RCw0REFBUztBQUNyRTtBQUNBO0FBQ0EsT0FBTztBQUNQLFdBQVcscUVBQVksa0JBQWtCLG9FQUFlLCtDQUErQyw0REFBUztBQUNoSCxnQ0FBZ0MsV0FBVztBQUMzQztBQUNBLE9BQU87QUFDUCw2QkFBNkIscUVBQVksZ0JBQWdCLGtGQUF5QjtBQUNsRjtBQUNBLE1BQU07QUFDTiw0R0FBNEcsaUJBQWlCO0FBQzdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDhFQUF1QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixxQkFBcUIsMEVBQWE7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osNEdBQTRHLG1CQUFtQjtBQUMvSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU8sMEVBQWE7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IscUVBQVksZ0JBQWdCLGtGQUF5QjtBQUMzRSxjQUFjLDBCQUEwQixnQkFBZ0I7QUFDeEQsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSw4RUFBdUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDhFQUF1QjtBQUMxQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMEVBQWE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsNERBQVM7QUFDdkQ7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTywwRUFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxZQUFZLFVBQVU7QUFDdEIsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gscUNBQXFDLDRFQUFxQjtBQUMxRDtBQUNBO0FBQ0EsR0FBRztBQUNILEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxVQUFVLGlDQUFpQztBQUMzQztBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDb1g7QUFDcFgiLCJzb3VyY2VzIjpbIi9Vc2Vycy9ibGFpbmVjb3dlbi9Eb2N1bWVudHMvUHJvamVjdHMvTkZMLVN0YXQtUXVlcnkvbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L3Jlc29sdmVSZXNwb25zZS1DemxiUnBDSS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19jb21tb25KUywgX190b0VTTSwgZ2V0RXJyb3JTaGFwZSwgZ2V0SFRUUFN0YXR1c0NvZGUsIHJlcXVpcmVfZGVmaW5lUHJvcGVydHksIHJlcXVpcmVfb2JqZWN0U3ByZWFkMiB9IGZyb20gXCIuL2dldEVycm9yU2hhcGUtVWhscmw0QmsubWpzXCI7XG5pbXBvcnQgeyBUUlBDRXJyb3IsIGdldFByb2NlZHVyZUF0UGF0aCwgZ2V0VFJQQ0Vycm9yRnJvbVVua25vd24sIGlzVHJhY2tlZEVudmVsb3BlLCB0cmFuc2Zvcm1UUlBDUmVzcG9uc2UgfSBmcm9tIFwiLi90cmFja2VkLWdVM3R0WWpnLm1qc1wiO1xuaW1wb3J0IHsgaWRlbnRpdHksIGlzQXN5bmNJdGVyYWJsZSwgaXNGdW5jdGlvbiwgaXNPYmplY3QsIHJ1biB9IGZyb20gXCIuL3V0aWxzLURkYmJyRGt1Lm1qc1wiO1xuaW1wb3J0IHsgaXNPYnNlcnZhYmxlLCBvYnNlcnZhYmxlVG9Bc3luY0l0ZXJhYmxlIH0gZnJvbSBcIi4vb2JzZXJ2YWJsZS1VTU8zdlVhXy5tanNcIjtcblxuLy8jcmVnaW9uIHNyYy91bnN0YWJsZS1jb3JlLWRvLW5vdC1pbXBvcnQvaHR0cC9wYXJzZUNvbm5lY3Rpb25QYXJhbXMudHNcbmZ1bmN0aW9uIHBhcnNlQ29ubmVjdGlvblBhcmFtc0Zyb21Vbmtub3duKHBhcnNlZCkge1xuXHR0cnkge1xuXHRcdGlmIChwYXJzZWQgPT09IG51bGwpIHJldHVybiBudWxsO1xuXHRcdGlmICghaXNPYmplY3QocGFyc2VkKSkgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgb2JqZWN0XCIpO1xuXHRcdGNvbnN0IG5vblN0cmluZ1ZhbHVlcyA9IE9iamVjdC5lbnRyaWVzKHBhcnNlZCkuZmlsdGVyKChbX2tleSwgdmFsdWVdKSA9PiB0eXBlb2YgdmFsdWUgIT09IFwic3RyaW5nXCIpO1xuXHRcdGlmIChub25TdHJpbmdWYWx1ZXMubGVuZ3RoID4gMCkgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCBjb25uZWN0aW9uUGFyYW1zIHRvIGJlIHN0cmluZyB2YWx1ZXMuIEdvdCAke25vblN0cmluZ1ZhbHVlcy5tYXAoKFtrZXksIHZhbHVlXSkgPT4gYCR7a2V5fTogJHt0eXBlb2YgdmFsdWV9YCkuam9pbihcIiwgXCIpfWApO1xuXHRcdHJldHVybiBwYXJzZWQ7XG5cdH0gY2F0Y2ggKGNhdXNlKSB7XG5cdFx0dGhyb3cgbmV3IFRSUENFcnJvcih7XG5cdFx0XHRjb2RlOiBcIlBBUlNFX0VSUk9SXCIsXG5cdFx0XHRtZXNzYWdlOiBcIkludmFsaWQgY29ubmVjdGlvbiBwYXJhbXMgc2hhcGVcIixcblx0XHRcdGNhdXNlXG5cdFx0fSk7XG5cdH1cbn1cbmZ1bmN0aW9uIHBhcnNlQ29ubmVjdGlvblBhcmFtc0Zyb21TdHJpbmcoc3RyKSB7XG5cdGxldCBwYXJzZWQ7XG5cdHRyeSB7XG5cdFx0cGFyc2VkID0gSlNPTi5wYXJzZShzdHIpO1xuXHR9IGNhdGNoIChjYXVzZSkge1xuXHRcdHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuXHRcdFx0Y29kZTogXCJQQVJTRV9FUlJPUlwiLFxuXHRcdFx0bWVzc2FnZTogXCJOb3QgSlNPTi1wYXJzYWJsZSBxdWVyeSBwYXJhbXNcIixcblx0XHRcdGNhdXNlXG5cdFx0fSk7XG5cdH1cblx0cmV0dXJuIHBhcnNlQ29ubmVjdGlvblBhcmFtc0Zyb21Vbmtub3duKHBhcnNlZCk7XG59XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIHNyYy91bnN0YWJsZS1jb3JlLWRvLW5vdC1pbXBvcnQvaHR0cC9jb250ZW50VHlwZS50c1xudmFyIGltcG9ydF9vYmplY3RTcHJlYWQyJDEgPSBfX3RvRVNNKHJlcXVpcmVfb2JqZWN0U3ByZWFkMigpLCAxKTtcbi8qKlxuKiBNZW1vaXplIGEgZnVuY3Rpb24gdGhhdCB0YWtlcyBubyBhcmd1bWVudHNcbiogQGludGVybmFsXG4qL1xuZnVuY3Rpb24gbWVtbyhmbikge1xuXHRsZXQgcHJvbWlzZSA9IG51bGw7XG5cdGNvbnN0IHN5bSA9IFN5bWJvbC5mb3IoXCJAdHJwYy9zZXJ2ZXIvaHR0cC9tZW1vXCIpO1xuXHRsZXQgdmFsdWUgPSBzeW07XG5cdHJldHVybiB7XG5cdFx0cmVhZDogYXN5bmMgKCkgPT4ge1xuXHRcdFx0dmFyIF9wcm9taXNlO1xuXHRcdFx0aWYgKHZhbHVlICE9PSBzeW0pIHJldHVybiB2YWx1ZTtcblx0XHRcdChfcHJvbWlzZSA9IHByb21pc2UpICE9PSBudWxsICYmIF9wcm9taXNlICE9PSB2b2lkIDAgfHwgKHByb21pc2UgPSBmbigpLmNhdGNoKChjYXVzZSkgPT4ge1xuXHRcdFx0XHRpZiAoY2F1c2UgaW5zdGFuY2VvZiBUUlBDRXJyb3IpIHRocm93IGNhdXNlO1xuXHRcdFx0XHR0aHJvdyBuZXcgVFJQQ0Vycm9yKHtcblx0XHRcdFx0XHRjb2RlOiBcIkJBRF9SRVFVRVNUXCIsXG5cdFx0XHRcdFx0bWVzc2FnZTogY2F1c2UgaW5zdGFuY2VvZiBFcnJvciA/IGNhdXNlLm1lc3NhZ2UgOiBcIkludmFsaWQgaW5wdXRcIixcblx0XHRcdFx0XHRjYXVzZVxuXHRcdFx0XHR9KTtcblx0XHRcdH0pKTtcblx0XHRcdHZhbHVlID0gYXdhaXQgcHJvbWlzZTtcblx0XHRcdHByb21pc2UgPSBudWxsO1xuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH0sXG5cdFx0cmVzdWx0OiAoKSA9PiB7XG5cdFx0XHRyZXR1cm4gdmFsdWUgIT09IHN5bSA/IHZhbHVlIDogdm9pZCAwO1xuXHRcdH1cblx0fTtcbn1cbmNvbnN0IGpzb25Db250ZW50VHlwZUhhbmRsZXIgPSB7XG5cdGlzTWF0Y2gocmVxKSB7XG5cdFx0dmFyIF9yZXEkaGVhZGVycyRnZXQ7XG5cdFx0cmV0dXJuICEhKChfcmVxJGhlYWRlcnMkZ2V0ID0gcmVxLmhlYWRlcnMuZ2V0KFwiY29udGVudC10eXBlXCIpKSA9PT0gbnVsbCB8fCBfcmVxJGhlYWRlcnMkZ2V0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVxJGhlYWRlcnMkZ2V0LnN0YXJ0c1dpdGgoXCJhcHBsaWNhdGlvbi9qc29uXCIpKTtcblx0fSxcblx0YXN5bmMgcGFyc2Uob3B0cykge1xuXHRcdHZhciBfdHlwZXMkdmFsdWVzJG5leHQkdmE7XG5cdFx0Y29uc3QgeyByZXEgfSA9IG9wdHM7XG5cdFx0Y29uc3QgaXNCYXRjaENhbGwgPSBvcHRzLnNlYXJjaFBhcmFtcy5nZXQoXCJiYXRjaFwiKSA9PT0gXCIxXCI7XG5cdFx0Y29uc3QgcGF0aHMgPSBpc0JhdGNoQ2FsbCA/IG9wdHMucGF0aC5zcGxpdChcIixcIikgOiBbb3B0cy5wYXRoXTtcblx0XHRjb25zdCBnZXRJbnB1dHMgPSBtZW1vKGFzeW5jICgpID0+IHtcblx0XHRcdGxldCBpbnB1dHMgPSB2b2lkIDA7XG5cdFx0XHRpZiAocmVxLm1ldGhvZCA9PT0gXCJHRVRcIikge1xuXHRcdFx0XHRjb25zdCBxdWVyeUlucHV0ID0gb3B0cy5zZWFyY2hQYXJhbXMuZ2V0KFwiaW5wdXRcIik7XG5cdFx0XHRcdGlmIChxdWVyeUlucHV0KSBpbnB1dHMgPSBKU09OLnBhcnNlKHF1ZXJ5SW5wdXQpO1xuXHRcdFx0fSBlbHNlIGlucHV0cyA9IGF3YWl0IHJlcS5qc29uKCk7XG5cdFx0XHRpZiAoaW5wdXRzID09PSB2b2lkIDApIHJldHVybiB7fTtcblx0XHRcdGlmICghaXNCYXRjaENhbGwpIHJldHVybiB7IDA6IG9wdHMucm91dGVyLl9kZWYuX2NvbmZpZy50cmFuc2Zvcm1lci5pbnB1dC5kZXNlcmlhbGl6ZShpbnB1dHMpIH07XG5cdFx0XHRpZiAoIWlzT2JqZWN0KGlucHV0cykpIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuXHRcdFx0XHRjb2RlOiBcIkJBRF9SRVFVRVNUXCIsXG5cdFx0XHRcdG1lc3NhZ2U6IFwiXFxcImlucHV0XFxcIiBuZWVkcyB0byBiZSBhbiBvYmplY3Qgd2hlbiBkb2luZyBhIGJhdGNoIGNhbGxcIlxuXHRcdFx0fSk7XG5cdFx0XHRjb25zdCBhY2MgPSB7fTtcblx0XHRcdGZvciAoY29uc3QgaW5kZXggb2YgcGF0aHMua2V5cygpKSB7XG5cdFx0XHRcdGNvbnN0IGlucHV0ID0gaW5wdXRzW2luZGV4XTtcblx0XHRcdFx0aWYgKGlucHV0ICE9PSB2b2lkIDApIGFjY1tpbmRleF0gPSBvcHRzLnJvdXRlci5fZGVmLl9jb25maWcudHJhbnNmb3JtZXIuaW5wdXQuZGVzZXJpYWxpemUoaW5wdXQpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGFjYztcblx0XHR9KTtcblx0XHRjb25zdCBjYWxscyA9IGF3YWl0IFByb21pc2UuYWxsKHBhdGhzLm1hcChhc3luYyAocGF0aCwgaW5kZXgpID0+IHtcblx0XHRcdGNvbnN0IHByb2NlZHVyZSA9IGF3YWl0IGdldFByb2NlZHVyZUF0UGF0aChvcHRzLnJvdXRlciwgcGF0aCk7XG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRwYXRoLFxuXHRcdFx0XHRwcm9jZWR1cmUsXG5cdFx0XHRcdGdldFJhd0lucHV0OiBhc3luYyAoKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgaW5wdXRzID0gYXdhaXQgZ2V0SW5wdXRzLnJlYWQoKTtcblx0XHRcdFx0XHRsZXQgaW5wdXQgPSBpbnB1dHNbaW5kZXhdO1xuXHRcdFx0XHRcdGlmICgocHJvY2VkdXJlID09PSBudWxsIHx8IHByb2NlZHVyZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogcHJvY2VkdXJlLl9kZWYudHlwZSkgPT09IFwic3Vic2NyaXB0aW9uXCIpIHtcblx0XHRcdFx0XHRcdHZhciBfcmVmLCBfb3B0cyRoZWFkZXJzJGdldDtcblx0XHRcdFx0XHRcdGNvbnN0IGxhc3RFdmVudElkID0gKF9yZWYgPSAoX29wdHMkaGVhZGVycyRnZXQgPSBvcHRzLmhlYWRlcnMuZ2V0KFwibGFzdC1ldmVudC1pZFwiKSkgIT09IG51bGwgJiYgX29wdHMkaGVhZGVycyRnZXQgIT09IHZvaWQgMCA/IF9vcHRzJGhlYWRlcnMkZ2V0IDogb3B0cy5zZWFyY2hQYXJhbXMuZ2V0KFwibGFzdEV2ZW50SWRcIikpICE9PSBudWxsICYmIF9yZWYgIT09IHZvaWQgMCA/IF9yZWYgOiBvcHRzLnNlYXJjaFBhcmFtcy5nZXQoXCJMYXN0LUV2ZW50LUlkXCIpO1xuXHRcdFx0XHRcdFx0aWYgKGxhc3RFdmVudElkKSBpZiAoaXNPYmplY3QoaW5wdXQpKSBpbnB1dCA9ICgwLCBpbXBvcnRfb2JqZWN0U3ByZWFkMiQxLmRlZmF1bHQpKCgwLCBpbXBvcnRfb2JqZWN0U3ByZWFkMiQxLmRlZmF1bHQpKHt9LCBpbnB1dCksIHt9LCB7IGxhc3RFdmVudElkIH0pO1xuXHRcdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHZhciBfaW5wdXQ7XG5cdFx0XHRcdFx0XHRcdChfaW5wdXQgPSBpbnB1dCkgIT09IG51bGwgJiYgX2lucHV0ICE9PSB2b2lkIDAgfHwgKGlucHV0ID0geyBsYXN0RXZlbnRJZCB9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIGlucHV0O1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRyZXN1bHQ6ICgpID0+IHtcblx0XHRcdFx0XHR2YXIgX2dldElucHV0cyRyZXN1bHQ7XG5cdFx0XHRcdFx0cmV0dXJuIChfZ2V0SW5wdXRzJHJlc3VsdCA9IGdldElucHV0cy5yZXN1bHQoKSkgPT09IG51bGwgfHwgX2dldElucHV0cyRyZXN1bHQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9nZXRJbnB1dHMkcmVzdWx0W2luZGV4XTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9KSk7XG5cdFx0Y29uc3QgdHlwZXMgPSBuZXcgU2V0KGNhbGxzLm1hcCgoY2FsbCkgPT4ge1xuXHRcdFx0dmFyIF9jYWxsJHByb2NlZHVyZTtcblx0XHRcdHJldHVybiAoX2NhbGwkcHJvY2VkdXJlID0gY2FsbC5wcm9jZWR1cmUpID09PSBudWxsIHx8IF9jYWxsJHByb2NlZHVyZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2NhbGwkcHJvY2VkdXJlLl9kZWYudHlwZTtcblx0XHR9KS5maWx0ZXIoQm9vbGVhbikpO1xuXHRcdC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtLSBAcHJlc2VydmUgKi9cblx0XHRpZiAodHlwZXMuc2l6ZSA+IDEpIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuXHRcdFx0Y29kZTogXCJCQURfUkVRVUVTVFwiLFxuXHRcdFx0bWVzc2FnZTogYENhbm5vdCBtaXggcHJvY2VkdXJlIHR5cGVzIGluIGNhbGw6ICR7QXJyYXkuZnJvbSh0eXBlcykuam9pbihcIiwgXCIpfWBcblx0XHR9KTtcblx0XHRjb25zdCB0eXBlID0gKF90eXBlcyR2YWx1ZXMkbmV4dCR2YSA9IHR5cGVzLnZhbHVlcygpLm5leHQoKS52YWx1ZSkgIT09IG51bGwgJiYgX3R5cGVzJHZhbHVlcyRuZXh0JHZhICE9PSB2b2lkIDAgPyBfdHlwZXMkdmFsdWVzJG5leHQkdmEgOiBcInVua25vd25cIjtcblx0XHRjb25zdCBjb25uZWN0aW9uUGFyYW1zU3RyID0gb3B0cy5zZWFyY2hQYXJhbXMuZ2V0KFwiY29ubmVjdGlvblBhcmFtc1wiKTtcblx0XHRjb25zdCBpbmZvID0ge1xuXHRcdFx0aXNCYXRjaENhbGwsXG5cdFx0XHRhY2NlcHQ6IHJlcS5oZWFkZXJzLmdldChcInRycGMtYWNjZXB0XCIpLFxuXHRcdFx0Y2FsbHMsXG5cdFx0XHR0eXBlLFxuXHRcdFx0Y29ubmVjdGlvblBhcmFtczogY29ubmVjdGlvblBhcmFtc1N0ciA9PT0gbnVsbCA/IG51bGwgOiBwYXJzZUNvbm5lY3Rpb25QYXJhbXNGcm9tU3RyaW5nKGNvbm5lY3Rpb25QYXJhbXNTdHIpLFxuXHRcdFx0c2lnbmFsOiByZXEuc2lnbmFsLFxuXHRcdFx0dXJsOiBvcHRzLnVybFxuXHRcdH07XG5cdFx0cmV0dXJuIGluZm87XG5cdH1cbn07XG5jb25zdCBmb3JtRGF0YUNvbnRlbnRUeXBlSGFuZGxlciA9IHtcblx0aXNNYXRjaChyZXEpIHtcblx0XHR2YXIgX3JlcSRoZWFkZXJzJGdldDI7XG5cdFx0cmV0dXJuICEhKChfcmVxJGhlYWRlcnMkZ2V0MiA9IHJlcS5oZWFkZXJzLmdldChcImNvbnRlbnQtdHlwZVwiKSkgPT09IG51bGwgfHwgX3JlcSRoZWFkZXJzJGdldDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9yZXEkaGVhZGVycyRnZXQyLnN0YXJ0c1dpdGgoXCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIpKTtcblx0fSxcblx0YXN5bmMgcGFyc2Uob3B0cykge1xuXHRcdGNvbnN0IHsgcmVxIH0gPSBvcHRzO1xuXHRcdGlmIChyZXEubWV0aG9kICE9PSBcIlBPU1RcIikgdGhyb3cgbmV3IFRSUENFcnJvcih7XG5cdFx0XHRjb2RlOiBcIk1FVEhPRF9OT1RfU1VQUE9SVEVEXCIsXG5cdFx0XHRtZXNzYWdlOiBcIk9ubHkgUE9TVCByZXF1ZXN0cyBhcmUgc3VwcG9ydGVkIGZvciBtdWx0aXBhcnQvZm9ybS1kYXRhIHJlcXVlc3RzXCJcblx0XHR9KTtcblx0XHRjb25zdCBnZXRJbnB1dHMgPSBtZW1vKGFzeW5jICgpID0+IHtcblx0XHRcdGNvbnN0IGZkID0gYXdhaXQgcmVxLmZvcm1EYXRhKCk7XG5cdFx0XHRyZXR1cm4gZmQ7XG5cdFx0fSk7XG5cdFx0Y29uc3QgcHJvY2VkdXJlID0gYXdhaXQgZ2V0UHJvY2VkdXJlQXRQYXRoKG9wdHMucm91dGVyLCBvcHRzLnBhdGgpO1xuXHRcdHJldHVybiB7XG5cdFx0XHRhY2NlcHQ6IG51bGwsXG5cdFx0XHRjYWxsczogW3tcblx0XHRcdFx0cGF0aDogb3B0cy5wYXRoLFxuXHRcdFx0XHRnZXRSYXdJbnB1dDogZ2V0SW5wdXRzLnJlYWQsXG5cdFx0XHRcdHJlc3VsdDogZ2V0SW5wdXRzLnJlc3VsdCxcblx0XHRcdFx0cHJvY2VkdXJlXG5cdFx0XHR9XSxcblx0XHRcdGlzQmF0Y2hDYWxsOiBmYWxzZSxcblx0XHRcdHR5cGU6IFwibXV0YXRpb25cIixcblx0XHRcdGNvbm5lY3Rpb25QYXJhbXM6IG51bGwsXG5cdFx0XHRzaWduYWw6IHJlcS5zaWduYWwsXG5cdFx0XHR1cmw6IG9wdHMudXJsXG5cdFx0fTtcblx0fVxufTtcbmNvbnN0IG9jdGV0U3RyZWFtQ29udGVudFR5cGVIYW5kbGVyID0ge1xuXHRpc01hdGNoKHJlcSkge1xuXHRcdHZhciBfcmVxJGhlYWRlcnMkZ2V0Mztcblx0XHRyZXR1cm4gISEoKF9yZXEkaGVhZGVycyRnZXQzID0gcmVxLmhlYWRlcnMuZ2V0KFwiY29udGVudC10eXBlXCIpKSA9PT0gbnVsbCB8fCBfcmVxJGhlYWRlcnMkZ2V0MyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3JlcSRoZWFkZXJzJGdldDMuc3RhcnRzV2l0aChcImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbVwiKSk7XG5cdH0sXG5cdGFzeW5jIHBhcnNlKG9wdHMpIHtcblx0XHRjb25zdCB7IHJlcSB9ID0gb3B0cztcblx0XHRpZiAocmVxLm1ldGhvZCAhPT0gXCJQT1NUXCIpIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuXHRcdFx0Y29kZTogXCJNRVRIT0RfTk9UX1NVUFBPUlRFRFwiLFxuXHRcdFx0bWVzc2FnZTogXCJPbmx5IFBPU1QgcmVxdWVzdHMgYXJlIHN1cHBvcnRlZCBmb3IgYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtIHJlcXVlc3RzXCJcblx0XHR9KTtcblx0XHRjb25zdCBnZXRJbnB1dHMgPSBtZW1vKGFzeW5jICgpID0+IHtcblx0XHRcdHJldHVybiByZXEuYm9keTtcblx0XHR9KTtcblx0XHRyZXR1cm4ge1xuXHRcdFx0Y2FsbHM6IFt7XG5cdFx0XHRcdHBhdGg6IG9wdHMucGF0aCxcblx0XHRcdFx0Z2V0UmF3SW5wdXQ6IGdldElucHV0cy5yZWFkLFxuXHRcdFx0XHRyZXN1bHQ6IGdldElucHV0cy5yZXN1bHQsXG5cdFx0XHRcdHByb2NlZHVyZTogYXdhaXQgZ2V0UHJvY2VkdXJlQXRQYXRoKG9wdHMucm91dGVyLCBvcHRzLnBhdGgpXG5cdFx0XHR9XSxcblx0XHRcdGlzQmF0Y2hDYWxsOiBmYWxzZSxcblx0XHRcdGFjY2VwdDogbnVsbCxcblx0XHRcdHR5cGU6IFwibXV0YXRpb25cIixcblx0XHRcdGNvbm5lY3Rpb25QYXJhbXM6IG51bGwsXG5cdFx0XHRzaWduYWw6IHJlcS5zaWduYWwsXG5cdFx0XHR1cmw6IG9wdHMudXJsXG5cdFx0fTtcblx0fVxufTtcbmNvbnN0IGhhbmRsZXJzID0gW1xuXHRqc29uQ29udGVudFR5cGVIYW5kbGVyLFxuXHRmb3JtRGF0YUNvbnRlbnRUeXBlSGFuZGxlcixcblx0b2N0ZXRTdHJlYW1Db250ZW50VHlwZUhhbmRsZXJcbl07XG5mdW5jdGlvbiBnZXRDb250ZW50VHlwZUhhbmRsZXIocmVxKSB7XG5cdGNvbnN0IGhhbmRsZXIgPSBoYW5kbGVycy5maW5kKChoYW5kbGVyJDEpID0+IGhhbmRsZXIkMS5pc01hdGNoKHJlcSkpO1xuXHRpZiAoaGFuZGxlcikgcmV0dXJuIGhhbmRsZXI7XG5cdGlmICghaGFuZGxlciAmJiByZXEubWV0aG9kID09PSBcIkdFVFwiKSByZXR1cm4ganNvbkNvbnRlbnRUeXBlSGFuZGxlcjtcblx0dGhyb3cgbmV3IFRSUENFcnJvcih7XG5cdFx0Y29kZTogXCJVTlNVUFBPUlRFRF9NRURJQV9UWVBFXCIsXG5cdFx0bWVzc2FnZTogcmVxLmhlYWRlcnMuaGFzKFwiY29udGVudC10eXBlXCIpID8gYFVuc3VwcG9ydGVkIGNvbnRlbnQtdHlwZSBcIiR7cmVxLmhlYWRlcnMuZ2V0KFwiY29udGVudC10eXBlXCIpfWAgOiBcIk1pc3NpbmcgY29udGVudC10eXBlIGhlYWRlclwiXG5cdH0pO1xufVxuYXN5bmMgZnVuY3Rpb24gZ2V0UmVxdWVzdEluZm8ob3B0cykge1xuXHRjb25zdCBoYW5kbGVyID0gZ2V0Q29udGVudFR5cGVIYW5kbGVyKG9wdHMucmVxKTtcblx0cmV0dXJuIGF3YWl0IGhhbmRsZXIucGFyc2Uob3B0cyk7XG59XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIHNyYy91bnN0YWJsZS1jb3JlLWRvLW5vdC1pbXBvcnQvaHR0cC9hYm9ydEVycm9yLnRzXG5mdW5jdGlvbiBpc0Fib3J0RXJyb3IoZXJyb3IpIHtcblx0cmV0dXJuIGlzT2JqZWN0KGVycm9yKSAmJiBlcnJvcltcIm5hbWVcIl0gPT09IFwiQWJvcnRFcnJvclwiO1xufVxuZnVuY3Rpb24gdGhyb3dBYm9ydEVycm9yKG1lc3NhZ2UgPSBcIkFib3J0RXJyb3JcIikge1xuXHR0aHJvdyBuZXcgRE9NRXhjZXB0aW9uKG1lc3NhZ2UsIFwiQWJvcnRFcnJvclwiKTtcbn1cblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gc3JjL3ZlbmRvci91bnByb21pc2UvdW5wcm9taXNlLnRzXG52YXIgaW1wb3J0X2RlZmluZVByb3BlcnR5ID0gX190b0VTTShyZXF1aXJlX2RlZmluZVByb3BlcnR5KCksIDEpO1xubGV0IF9TeW1ib2wkdG9TdHJpbmdUYWc7XG4vKiogTWVtb3J5IHNhZmUgKHdlYWttYXBwZWQpIGNhY2hlIG9mIHRoZSBQcm94eVByb21pc2UgZm9yIGVhY2ggUHJvbWlzZSxcbiogd2hpY2ggaXMgcmV0YWluZWQgZm9yIHRoZSBsaWZldGltZSBvZiB0aGUgb3JpZ2luYWwgUHJvbWlzZS5cbiovXG5jb25zdCBzdWJzY3JpYmFibGVDYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpO1xuLyoqIEEgTk9PUCBmdW5jdGlvbiBhbGxvd2luZyBhIGNvbnNpc3RlbnQgaW50ZXJmYWNlIGZvciBzZXR0bGVkXG4qIFN1YnNjcmliZWRQcm9taXNlcyAoc2V0dGxlZCBwcm9taXNlcyBhcmUgbm90IHN1YnNjcmliZWQgLSB0aGV5IHJlc29sdmVcbiogaW1tZWRpYXRlbHkpLiAqL1xuY29uc3QgTk9PUCA9ICgpID0+IHt9O1xuX1N5bWJvbCR0b1N0cmluZ1RhZyA9IFN5bWJvbC50b1N0cmluZ1RhZztcbi8qKlxuKiBFdmVyeSBgUHJvbWlzZTxUPmAgY2FuIGJlIHNoYWRvd2VkIGJ5IGEgc2luZ2xlIGBQcm94eVByb21pc2U8VD5gLiBJdCBpc1xuKiBjcmVhdGVkIG9uY2UsIGNhY2hlZCBhbmQgcmV1c2VkIHRocm91Z2hvdXQgdGhlIGxpZmV0aW1lIG9mIHRoZSBQcm9taXNlLiBHZXQgYVxuKiBQcm9taXNlJ3MgUHJveHlQcm9taXNlIHVzaW5nIGBVbnByb21pc2UucHJveHkocHJvbWlzZSlgLlxuKlxuKiBUaGUgYFByb3h5UHJvbWlzZTxUPmAgYXR0YWNoZXMgaGFuZGxlcnMgdG8gdGhlIG9yaWdpbmFsIGBQcm9taXNlPFQ+YFxuKiBgLnRoZW4oKWAgYW5kIGAuY2F0Y2goKWAganVzdCBvbmNlLiBQcm9taXNlcyBkZXJpdmVkIGZyb20gaXQgdXNlIGFcbiogc3Vic2NyaXB0aW9uLSAoYW5kIHVuc3Vic2NyaXB0aW9uLSkgYmFzZWQgbWVjaGFuaXNtIHRoYXQgbW9uaXRvcnMgdGhlc2VcbiogaGFuZGxlcnMuXG4qXG4qIEV2ZXJ5IHRpbWUgeW91IGNhbGwgYC5zdWJzY3JpYmUoKWAsIGAudGhlbigpYCBgLmNhdGNoKClgIG9yIGAuZmluYWxseSgpYCBvbiBhXG4qIGBQcm94eVByb21pc2U8VD5gIGl0IHJldHVybnMgYSBgU3Vic2NyaWJlZFByb21pc2U8VD5gIGhhdmluZyBhbiBhZGRpdGlvbmFsXG4qIGB1bnN1YnNjcmliZSgpYCBtZXRob2QuIENhbGxpbmcgYHVuc3Vic2NyaWJlKClgIGRldGFjaGVzIHJlZmVyZW5jZSBjaGFpbnNcbiogZnJvbSB0aGUgb3JpZ2luYWwsIHBvdGVudGlhbGx5IGxvbmctbGl2ZWQgUHJvbWlzZSwgZWxpbWluYXRpbmcgbWVtb3J5IGxlYWtzLlxuKlxuKiBUaGlzIGFwcHJvYWNoIGNhbiBlbGltaW5hdGUgdGhlIG1lbW9yeSBsZWFrcyB0aGF0IG90aGVyd2lzZSBjb21lIGFib3V0IGZyb21cbiogcmVwZWF0ZWQgYHJhY2UoKWAgb3IgYGFueSgpYCBjYWxscyBpbnZva2luZyBgLnRoZW4oKWAgYW5kIGAuY2F0Y2goKWAgbXVsdGlwbGVcbiogdGltZXMgb24gdGhlIHNhbWUgbG9uZy1saXZlZCBuYXRpdmUgUHJvbWlzZSAoc3Vic2NyaXB0aW9ucyB3aGljaCBjYW4gbmV2ZXIgYmVcbiogY2xlYW5lZCB1cCkuXG4qXG4qIGBVbnByb21pc2UucmFjZShwcm9taXNlcylgIGlzIGEgcmVmZXJlbmNlIGltcGxlbWVudGF0aW9uIG9mIGBQcm9taXNlLnJhY2VgXG4qIGF2b2lkaW5nIG1lbW9yeSBsZWFrcyB3aGVuIHVzaW5nIGxvbmctbGl2ZWQgdW5zZXR0bGVkIFByb21pc2VzLlxuKlxuKiBgVW5wcm9taXNlLmFueShwcm9taXNlcylgIGlzIGEgcmVmZXJlbmNlIGltcGxlbWVudGF0aW9uIG9mIGBQcm9taXNlLmFueWBcbiogYXZvaWRpbmcgbWVtb3J5IGxlYWtzIHdoZW4gdXNpbmcgbG9uZy1saXZlZCB1bnNldHRsZWQgUHJvbWlzZXMuXG4qXG4qIGBVbnByb21pc2UucmVzb2x2ZShwcm9taXNlKWAgcmV0dXJucyBhbiBlcGhlbWVyYWwgYFN1YnNjcmliZWRQcm9taXNlPFQ+YCBmb3JcbiogYW55IGdpdmVuIGBQcm9taXNlPFQ+YCBmYWNpbGl0YXRpbmcgYXJiaXRyYXJ5IGFzeW5jL2F3YWl0IHBhdHRlcm5zLiBCZWhpbmRcbiogdGhlIHNjZW5lcywgYHJlc29sdmVgIGlzIGltcGxlbWVudGVkIHNpbXBseSBhc1xuKiBgVW5wcm9taXNlLnByb3h5KHByb21pc2UpLnN1YnNjcmliZSgpYC4gRG9uJ3QgZm9yZ2V0IHRvIGNhbGwgYC51bnN1YnNjcmliZSgpYFxuKiB0byB0aWR5IHVwIVxuKlxuKi9cbnZhciBVbnByb21pc2UgPSBjbGFzcyBVbnByb21pc2Uge1xuXHRjb25zdHJ1Y3RvcihhcmcpIHtcblx0XHQoMCwgaW1wb3J0X2RlZmluZVByb3BlcnR5LmRlZmF1bHQpKHRoaXMsIFwicHJvbWlzZVwiLCB2b2lkIDApO1xuXHRcdCgwLCBpbXBvcnRfZGVmaW5lUHJvcGVydHkuZGVmYXVsdCkodGhpcywgXCJzdWJzY3JpYmVyc1wiLCBbXSk7XG5cdFx0KDAsIGltcG9ydF9kZWZpbmVQcm9wZXJ0eS5kZWZhdWx0KSh0aGlzLCBcInNldHRsZW1lbnRcIiwgbnVsbCk7XG5cdFx0KDAsIGltcG9ydF9kZWZpbmVQcm9wZXJ0eS5kZWZhdWx0KSh0aGlzLCBfU3ltYm9sJHRvU3RyaW5nVGFnLCBcIlVucHJvbWlzZVwiKTtcblx0XHRpZiAodHlwZW9mIGFyZyA9PT0gXCJmdW5jdGlvblwiKSB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShhcmcpO1xuXHRcdGVsc2UgdGhpcy5wcm9taXNlID0gYXJnO1xuXHRcdGNvbnN0IHRoZW5SZXR1cm4gPSB0aGlzLnByb21pc2UudGhlbigodmFsdWUpID0+IHtcblx0XHRcdGNvbnN0IHsgc3Vic2NyaWJlcnMgfSA9IHRoaXM7XG5cdFx0XHR0aGlzLnN1YnNjcmliZXJzID0gbnVsbDtcblx0XHRcdHRoaXMuc2V0dGxlbWVudCA9IHtcblx0XHRcdFx0c3RhdHVzOiBcImZ1bGZpbGxlZFwiLFxuXHRcdFx0XHR2YWx1ZVxuXHRcdFx0fTtcblx0XHRcdHN1YnNjcmliZXJzID09PSBudWxsIHx8IHN1YnNjcmliZXJzID09PSB2b2lkIDAgfHwgc3Vic2NyaWJlcnMuZm9yRWFjaCgoeyByZXNvbHZlIH0pID0+IHtcblx0XHRcdFx0cmVzb2x2ZSh2YWx1ZSk7XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0XHRpZiAoXCJjYXRjaFwiIGluIHRoZW5SZXR1cm4pIHRoZW5SZXR1cm4uY2F0Y2goKHJlYXNvbikgPT4ge1xuXHRcdFx0Y29uc3QgeyBzdWJzY3JpYmVycyB9ID0gdGhpcztcblx0XHRcdHRoaXMuc3Vic2NyaWJlcnMgPSBudWxsO1xuXHRcdFx0dGhpcy5zZXR0bGVtZW50ID0ge1xuXHRcdFx0XHRzdGF0dXM6IFwicmVqZWN0ZWRcIixcblx0XHRcdFx0cmVhc29uXG5cdFx0XHR9O1xuXHRcdFx0c3Vic2NyaWJlcnMgPT09IG51bGwgfHwgc3Vic2NyaWJlcnMgPT09IHZvaWQgMCB8fCBzdWJzY3JpYmVycy5mb3JFYWNoKCh7IHJlamVjdCB9KSA9PiB7XG5cdFx0XHRcdHJlamVjdChyZWFzb24pO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdH1cblx0LyoqIENyZWF0ZSBhIHByb21pc2UgdGhhdCBtaXRpZ2F0ZXMgdW5jb250cm9sbGVkIHN1YnNjcmlwdGlvbiB0byBhIGxvbmctbGl2ZWRcblx0KiBQcm9taXNlIHZpYSAudGhlbigpIGFuZCAuY2F0Y2goKSAtIG90aGVyd2lzZSBhIHNvdXJjZSBvZiBtZW1vcnkgbGVha3MuXG5cdCpcblx0KiBUaGUgcmV0dXJuZWQgcHJvbWlzZSBoYXMgYW4gYHVuc3Vic2NyaWJlKClgIG1ldGhvZCB3aGljaCBjYW4gYmUgY2FsbGVkIHdoZW5cblx0KiB0aGUgUHJvbWlzZSBpcyBubyBsb25nZXIgYmVpbmcgdHJhY2tlZCBieSBhcHBsaWNhdGlvbiBsb2dpYywgYW5kIHdoaWNoXG5cdCogZW5zdXJlcyB0aGF0IHRoZXJlIGlzIG5vIHJlZmVyZW5jZSBjaGFpbiBmcm9tIHRoZSBvcmlnaW5hbCBwcm9taXNlIHRvIHRoZVxuXHQqIG5ldyBvbmUsIGFuZCB0aGVyZWZvcmUgbm8gbWVtb3J5IGxlYWsuXG5cdCpcblx0KiBJZiBvcmlnaW5hbCBwcm9taXNlIGhhcyBub3QgeWV0IHNldHRsZWQsIHRoaXMgYWRkcyBhIG5ldyB1bmlxdWUgcHJvbWlzZVxuXHQqIHRoYXQgbGlzdGVucyB0byB0aGVuL2NhdGNoIGV2ZW50cywgYWxvbmcgd2l0aCBhbiBgdW5zdWJzY3JpYmUoKWAgbWV0aG9kIHRvXG5cdCogZGV0YWNoIGl0LlxuXHQqXG5cdCogSWYgb3JpZ2luYWwgcHJvbWlzZSBoYXMgc2V0dGxlZCwgdGhlbiBjcmVhdGVzIGEgbmV3IFByb21pc2UucmVzb2x2ZSgpIG9yXG5cdCogUHJvbWlzZS5yZWplY3QoKSBhbmQgcHJvdmlkZWQgdW5zdWJzY3JpYmUgaXMgYSBub29wLlxuXHQqXG5cdCogSWYgeW91IGNhbGwgYHVuc3Vic2NyaWJlKClgIGJlZm9yZSB0aGUgcmV0dXJuZWQgUHJvbWlzZSBoYXMgc2V0dGxlZCwgaXRcblx0KiB3aWxsIG5ldmVyIHNldHRsZS5cblx0Ki9cblx0c3Vic2NyaWJlKCkge1xuXHRcdGxldCBwcm9taXNlO1xuXHRcdGxldCB1bnN1YnNjcmliZTtcblx0XHRjb25zdCB7IHNldHRsZW1lbnQgfSA9IHRoaXM7XG5cdFx0aWYgKHNldHRsZW1lbnQgPT09IG51bGwpIHtcblx0XHRcdGlmICh0aGlzLnN1YnNjcmliZXJzID09PSBudWxsKSB0aHJvdyBuZXcgRXJyb3IoXCJVbnByb21pc2Ugc2V0dGxlZCBidXQgc3RpbGwgaGFzIHN1YnNjcmliZXJzXCIpO1xuXHRcdFx0Y29uc3Qgc3Vic2NyaWJlciA9IHdpdGhSZXNvbHZlcnMoKTtcblx0XHRcdHRoaXMuc3Vic2NyaWJlcnMgPSBsaXN0V2l0aE1lbWJlcih0aGlzLnN1YnNjcmliZXJzLCBzdWJzY3JpYmVyKTtcblx0XHRcdHByb21pc2UgPSBzdWJzY3JpYmVyLnByb21pc2U7XG5cdFx0XHR1bnN1YnNjcmliZSA9ICgpID0+IHtcblx0XHRcdFx0aWYgKHRoaXMuc3Vic2NyaWJlcnMgIT09IG51bGwpIHRoaXMuc3Vic2NyaWJlcnMgPSBsaXN0V2l0aG91dE1lbWJlcih0aGlzLnN1YnNjcmliZXJzLCBzdWJzY3JpYmVyKTtcblx0XHRcdH07XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnN0IHsgc3RhdHVzIH0gPSBzZXR0bGVtZW50O1xuXHRcdFx0aWYgKHN0YXR1cyA9PT0gXCJmdWxmaWxsZWRcIikgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZShzZXR0bGVtZW50LnZhbHVlKTtcblx0XHRcdGVsc2UgcHJvbWlzZSA9IFByb21pc2UucmVqZWN0KHNldHRsZW1lbnQucmVhc29uKTtcblx0XHRcdHVuc3Vic2NyaWJlID0gTk9PUDtcblx0XHR9XG5cdFx0cmV0dXJuIE9iamVjdC5hc3NpZ24ocHJvbWlzZSwgeyB1bnN1YnNjcmliZSB9KTtcblx0fVxuXHQvKiogU1RBTkRBUkQgUFJPTUlTRSBNRVRIT0RTIChidXQgcmV0dXJuaW5nIGEgU3Vic2NyaWJlZFByb21pc2UpICovXG5cdHRoZW4ob25mdWxmaWxsZWQsIG9ucmVqZWN0ZWQpIHtcblx0XHRjb25zdCBzdWJzY3JpYmVkID0gdGhpcy5zdWJzY3JpYmUoKTtcblx0XHRjb25zdCB7IHVuc3Vic2NyaWJlIH0gPSBzdWJzY3JpYmVkO1xuXHRcdHJldHVybiBPYmplY3QuYXNzaWduKHN1YnNjcmliZWQudGhlbihvbmZ1bGZpbGxlZCwgb25yZWplY3RlZCksIHsgdW5zdWJzY3JpYmUgfSk7XG5cdH1cblx0Y2F0Y2gob25yZWplY3RlZCkge1xuXHRcdGNvbnN0IHN1YnNjcmliZWQgPSB0aGlzLnN1YnNjcmliZSgpO1xuXHRcdGNvbnN0IHsgdW5zdWJzY3JpYmUgfSA9IHN1YnNjcmliZWQ7XG5cdFx0cmV0dXJuIE9iamVjdC5hc3NpZ24oc3Vic2NyaWJlZC5jYXRjaChvbnJlamVjdGVkKSwgeyB1bnN1YnNjcmliZSB9KTtcblx0fVxuXHRmaW5hbGx5KG9uZmluYWxseSkge1xuXHRcdGNvbnN0IHN1YnNjcmliZWQgPSB0aGlzLnN1YnNjcmliZSgpO1xuXHRcdGNvbnN0IHsgdW5zdWJzY3JpYmUgfSA9IHN1YnNjcmliZWQ7XG5cdFx0cmV0dXJuIE9iamVjdC5hc3NpZ24oc3Vic2NyaWJlZC5maW5hbGx5KG9uZmluYWxseSksIHsgdW5zdWJzY3JpYmUgfSk7XG5cdH1cblx0LyoqIFVucHJvbWlzZSBTVEFUSUMgTUVUSE9EUyAqL1xuXHQvKiogQ3JlYXRlIG9yIFJldHJpZXZlIHRoZSBwcm94eSBVbnByb21pc2UgKGEgcmUtdXNlZCBVbnByb21pc2UgZm9yIHRoZSBWTSBsaWZldGltZVxuXHQqIG9mIHRoZSBwcm92aWRlZCBQcm9taXNlIHJlZmVyZW5jZSkgKi9cblx0c3RhdGljIHByb3h5KHByb21pc2UpIHtcblx0XHRjb25zdCBjYWNoZWQgPSBVbnByb21pc2UuZ2V0U3Vic2NyaWJhYmxlUHJvbWlzZShwcm9taXNlKTtcblx0XHRyZXR1cm4gdHlwZW9mIGNhY2hlZCAhPT0gXCJ1bmRlZmluZWRcIiA/IGNhY2hlZCA6IFVucHJvbWlzZS5jcmVhdGVTdWJzY3JpYmFibGVQcm9taXNlKHByb21pc2UpO1xuXHR9XG5cdC8qKiBDcmVhdGUgYW5kIHN0b3JlIGFuIFVucHJvbWlzZSBrZXllZCBieSBhbiBvcmlnaW5hbCBQcm9taXNlLiAqL1xuXHRzdGF0aWMgY3JlYXRlU3Vic2NyaWJhYmxlUHJvbWlzZShwcm9taXNlKSB7XG5cdFx0Y29uc3QgY3JlYXRlZCA9IG5ldyBVbnByb21pc2UocHJvbWlzZSk7XG5cdFx0c3Vic2NyaWJhYmxlQ2FjaGUuc2V0KHByb21pc2UsIGNyZWF0ZWQpO1xuXHRcdHN1YnNjcmliYWJsZUNhY2hlLnNldChjcmVhdGVkLCBjcmVhdGVkKTtcblx0XHRyZXR1cm4gY3JlYXRlZDtcblx0fVxuXHQvKiogUmV0cmlldmUgYSBwcmV2aW91c2x5LWNyZWF0ZWQgVW5wcm9taXNlIGtleWVkIGJ5IGFuIG9yaWdpbmFsIFByb21pc2UuICovXG5cdHN0YXRpYyBnZXRTdWJzY3JpYmFibGVQcm9taXNlKHByb21pc2UpIHtcblx0XHRyZXR1cm4gc3Vic2NyaWJhYmxlQ2FjaGUuZ2V0KHByb21pc2UpO1xuXHR9XG5cdC8qKiBQcm9taXNlIFNUQVRJQyBNRVRIT0RTICovXG5cdC8qKiBMb29rdXAgdGhlIFVucHJvbWlzZSBmb3IgdGhpcyBwcm9taXNlLCBhbmQgZGVyaXZlIGEgU3Vic2NyaWJlZFByb21pc2UgZnJvbVxuXHQqIGl0ICh0aGF0IGNhbiBiZSBsYXRlciB1bnN1YnNjcmliZWQgdG8gZWxpbWluYXRlIE1lbW9yeSBsZWFrcykgKi9cblx0c3RhdGljIHJlc29sdmUodmFsdWUpIHtcblx0XHRjb25zdCBwcm9taXNlID0gdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmIHZhbHVlICE9PSBudWxsICYmIFwidGhlblwiIGluIHZhbHVlICYmIHR5cGVvZiB2YWx1ZS50aGVuID09PSBcImZ1bmN0aW9uXCIgPyB2YWx1ZSA6IFByb21pc2UucmVzb2x2ZSh2YWx1ZSk7XG5cdFx0cmV0dXJuIFVucHJvbWlzZS5wcm94eShwcm9taXNlKS5zdWJzY3JpYmUoKTtcblx0fVxuXHRzdGF0aWMgYXN5bmMgYW55KHZhbHVlcykge1xuXHRcdGNvbnN0IHZhbHVlc0FycmF5ID0gQXJyYXkuaXNBcnJheSh2YWx1ZXMpID8gdmFsdWVzIDogWy4uLnZhbHVlc107XG5cdFx0Y29uc3Qgc3Vic2NyaWJlZFByb21pc2VzID0gdmFsdWVzQXJyYXkubWFwKFVucHJvbWlzZS5yZXNvbHZlKTtcblx0XHR0cnkge1xuXHRcdFx0cmV0dXJuIGF3YWl0IFByb21pc2UuYW55KHN1YnNjcmliZWRQcm9taXNlcyk7XG5cdFx0fSBmaW5hbGx5IHtcblx0XHRcdHN1YnNjcmliZWRQcm9taXNlcy5mb3JFYWNoKCh7IHVuc3Vic2NyaWJlIH0pID0+IHtcblx0XHRcdFx0dW5zdWJzY3JpYmUoKTtcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxuXHRzdGF0aWMgYXN5bmMgcmFjZSh2YWx1ZXMpIHtcblx0XHRjb25zdCB2YWx1ZXNBcnJheSA9IEFycmF5LmlzQXJyYXkodmFsdWVzKSA/IHZhbHVlcyA6IFsuLi52YWx1ZXNdO1xuXHRcdGNvbnN0IHN1YnNjcmliZWRQcm9taXNlcyA9IHZhbHVlc0FycmF5Lm1hcChVbnByb21pc2UucmVzb2x2ZSk7XG5cdFx0dHJ5IHtcblx0XHRcdHJldHVybiBhd2FpdCBQcm9taXNlLnJhY2Uoc3Vic2NyaWJlZFByb21pc2VzKTtcblx0XHR9IGZpbmFsbHkge1xuXHRcdFx0c3Vic2NyaWJlZFByb21pc2VzLmZvckVhY2goKHsgdW5zdWJzY3JpYmUgfSkgPT4ge1xuXHRcdFx0XHR1bnN1YnNjcmliZSgpO1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9XG5cdC8qKiBDcmVhdGUgYSByYWNlIG9mIFN1YnNjcmliZWRQcm9taXNlcyB0aGF0IHdpbGwgZnVsZmlsIHRvIGEgc2luZ2xlIHdpbm5pbmdcblx0KiBQcm9taXNlIChpbiBhIDEtVHVwbGUpLiBFbGltaW5hdGVzIG1lbW9yeSBsZWFrcyBmcm9tIGxvbmctbGl2ZWQgcHJvbWlzZXNcblx0KiBhY2N1bXVsYXRpbmcgLnRoZW4oKSBhbmQgLmNhdGNoKCkgc3Vic2NyaWJlcnMuIEFsbG93cyBzaW1wbGUgbG9naWMgdG9cblx0KiBjb25zdW1lIHRoZSByZXN1bHQsIGxpa2UuLi5cblx0KiBgYGB0c1xuXHQqIGNvbnN0IFsgd2lubmVyIF0gPSBhd2FpdCBVbnByb21pc2UucmFjZShbIHByb21pc2VBLCBwcm9taXNlQiBdKTtcblx0KiBpZih3aW5uZXIgPT09IHByb21pc2VCKXtcblx0KiAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHByb21pc2VCO1xuXHQqICAgLy8gZG8gdGhlIHRoaW5nXG5cdCogfVxuXHQqIGBgYFxuXHQqICovXG5cdHN0YXRpYyBhc3luYyByYWNlUmVmZXJlbmNlcyhwcm9taXNlcykge1xuXHRcdGNvbnN0IHNlbGZQcm9taXNlcyA9IHByb21pc2VzLm1hcChyZXNvbHZlU2VsZlR1cGxlKTtcblx0XHR0cnkge1xuXHRcdFx0cmV0dXJuIGF3YWl0IFByb21pc2UucmFjZShzZWxmUHJvbWlzZXMpO1xuXHRcdH0gZmluYWxseSB7XG5cdFx0XHRmb3IgKGNvbnN0IHByb21pc2Ugb2Ygc2VsZlByb21pc2VzKSBwcm9taXNlLnVuc3Vic2NyaWJlKCk7XG5cdFx0fVxuXHR9XG59O1xuLyoqIFByb21pc2VzIGEgMS10dXBsZSBjb250YWluaW5nIHRoZSBvcmlnaW5hbCBwcm9taXNlIHdoZW4gaXQgcmVzb2x2ZXMuIEFsbG93c1xuKiBhd2FpdGluZyB0aGUgZXZlbnR1YWwgUHJvbWlzZSAqKipyZWZlcmVuY2UqKiogKGVhc3kgdG8gZGVzdHJ1Y3R1cmUgYW5kXG4qIGV4YWN0bHkgY29tcGFyZSB3aXRoID09PSkuIEF2b2lkcyByZXNvbHZpbmcgdG8gdGhlIFByb21pc2UgKioqdmFsdWUqKiogKHdoaWNoXG4qIG1heSBiZSBhbWJpZ3VvdXMgYW5kIHRoZXJlZm9yZSBoYXJkIHRvIGlkZW50aWZ5IGFzIHRoZSB3aW5uZXIgb2YgYSByYWNlKS5cbiogWW91IGNhbiBjYWxsIHVuc3Vic2NyaWJlIG9uIHRoZSBQcm9taXNlIHRvIG1pdGlnYXRlIG1lbW9yeSBsZWFrcy5cbiogKi9cbmZ1bmN0aW9uIHJlc29sdmVTZWxmVHVwbGUocHJvbWlzZSkge1xuXHRyZXR1cm4gVW5wcm9taXNlLnByb3h5KHByb21pc2UpLnRoZW4oKCkgPT4gW3Byb21pc2VdKTtcbn1cbi8qKiBWRU5ET1JFRCAoRnV0dXJlKSBQUk9NSVNFIFVUSUxJVElFUyAqL1xuLyoqIFJlZmVyZW5jZSBpbXBsZW1lbnRhdGlvbiBvZiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1wcm9taXNlLXdpdGgtcmVzb2x2ZXJzICovXG5mdW5jdGlvbiB3aXRoUmVzb2x2ZXJzKCkge1xuXHRsZXQgcmVzb2x2ZTtcblx0bGV0IHJlamVjdDtcblx0Y29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChfcmVzb2x2ZSwgX3JlamVjdCkgPT4ge1xuXHRcdHJlc29sdmUgPSBfcmVzb2x2ZTtcblx0XHRyZWplY3QgPSBfcmVqZWN0O1xuXHR9KTtcblx0cmV0dXJuIHtcblx0XHRwcm9taXNlLFxuXHRcdHJlc29sdmUsXG5cdFx0cmVqZWN0XG5cdH07XG59XG4vKiogSU1NVVRBQkxFIExJU1QgT1BFUkFUSU9OUyAqL1xuZnVuY3Rpb24gbGlzdFdpdGhNZW1iZXIoYXJyLCBtZW1iZXIpIHtcblx0cmV0dXJuIFsuLi5hcnIsIG1lbWJlcl07XG59XG5mdW5jdGlvbiBsaXN0V2l0aG91dEluZGV4KGFyciwgaW5kZXgpIHtcblx0cmV0dXJuIFsuLi5hcnIuc2xpY2UoMCwgaW5kZXgpLCAuLi5hcnIuc2xpY2UoaW5kZXggKyAxKV07XG59XG5mdW5jdGlvbiBsaXN0V2l0aG91dE1lbWJlcihhcnIsIG1lbWJlcikge1xuXHRjb25zdCBpbmRleCA9IGFyci5pbmRleE9mKG1lbWJlcik7XG5cdGlmIChpbmRleCAhPT0gLTEpIHJldHVybiBsaXN0V2l0aG91dEluZGV4KGFyciwgaW5kZXgpO1xuXHRyZXR1cm4gYXJyO1xufVxuXG4vLyNlbmRyZWdpb25cbi8vI3JlZ2lvbiBzcmMvdW5zdGFibGUtY29yZS1kby1ub3QtaW1wb3J0L3N0cmVhbS91dGlscy9kaXNwb3NhYmxlLnRzXG52YXIgX1N5bWJvbCwgX1N5bWJvbCRkaXNwb3NlLCBfU3ltYm9sMiwgX1N5bWJvbDIkYXN5bmNEaXNwb3NlO1xuKF9TeW1ib2wkZGlzcG9zZSA9IChfU3ltYm9sID0gU3ltYm9sKS5kaXNwb3NlKSAhPT0gbnVsbCAmJiBfU3ltYm9sJGRpc3Bvc2UgIT09IHZvaWQgMCB8fCAoX1N5bWJvbC5kaXNwb3NlID0gU3ltYm9sKCkpO1xuKF9TeW1ib2wyJGFzeW5jRGlzcG9zZSA9IChfU3ltYm9sMiA9IFN5bWJvbCkuYXN5bmNEaXNwb3NlKSAhPT0gbnVsbCAmJiBfU3ltYm9sMiRhc3luY0Rpc3Bvc2UgIT09IHZvaWQgMCB8fCAoX1N5bWJvbDIuYXN5bmNEaXNwb3NlID0gU3ltYm9sKCkpO1xuLyoqXG4qIFRha2VzIGEgdmFsdWUgYW5kIGEgZGlzcG9zZSBmdW5jdGlvbiBhbmQgcmV0dXJucyBhIG5ldyBvYmplY3QgdGhhdCBpbXBsZW1lbnRzIHRoZSBEaXNwb3NhYmxlIGludGVyZmFjZS5cbiogVGhlIHJldHVybmVkIG9iamVjdCBpcyB0aGUgb3JpZ2luYWwgdmFsdWUgYXVnbWVudGVkIHdpdGggYSBTeW1ib2wuZGlzcG9zZSBtZXRob2QuXG4qIEBwYXJhbSB0aGluZyBUaGUgdmFsdWUgdG8gbWFrZSBkaXNwb3NhYmxlXG4qIEBwYXJhbSBkaXNwb3NlIEZ1bmN0aW9uIHRvIGNhbGwgd2hlbiBkaXNwb3NpbmcgdGhlIHJlc291cmNlXG4qIEByZXR1cm5zIFRoZSBvcmlnaW5hbCB2YWx1ZSB3aXRoIFN5bWJvbC5kaXNwb3NlIG1ldGhvZCBhZGRlZFxuKi9cbmZ1bmN0aW9uIG1ha2VSZXNvdXJjZSh0aGluZywgZGlzcG9zZSkge1xuXHRjb25zdCBpdCA9IHRoaW5nO1xuXHRjb25zdCBleGlzdGluZyA9IGl0W1N5bWJvbC5kaXNwb3NlXTtcblx0aXRbU3ltYm9sLmRpc3Bvc2VdID0gKCkgPT4ge1xuXHRcdGRpc3Bvc2UoKTtcblx0XHRleGlzdGluZyA9PT0gbnVsbCB8fCBleGlzdGluZyA9PT0gdm9pZCAwIHx8IGV4aXN0aW5nKCk7XG5cdH07XG5cdHJldHVybiBpdDtcbn1cbi8qKlxuKiBUYWtlcyBhIHZhbHVlIGFuZCBhbiBhc3luYyBkaXNwb3NlIGZ1bmN0aW9uIGFuZCByZXR1cm5zIGEgbmV3IG9iamVjdCB0aGF0IGltcGxlbWVudHMgdGhlIEFzeW5jRGlzcG9zYWJsZSBpbnRlcmZhY2UuXG4qIFRoZSByZXR1cm5lZCBvYmplY3QgaXMgdGhlIG9yaWdpbmFsIHZhbHVlIGF1Z21lbnRlZCB3aXRoIGEgU3ltYm9sLmFzeW5jRGlzcG9zZSBtZXRob2QuXG4qIEBwYXJhbSB0aGluZyBUaGUgdmFsdWUgdG8gbWFrZSBhc3luYyBkaXNwb3NhYmxlXG4qIEBwYXJhbSBkaXNwb3NlIEFzeW5jIGZ1bmN0aW9uIHRvIGNhbGwgd2hlbiBkaXNwb3NpbmcgdGhlIHJlc291cmNlXG4qIEByZXR1cm5zIFRoZSBvcmlnaW5hbCB2YWx1ZSB3aXRoIFN5bWJvbC5hc3luY0Rpc3Bvc2UgbWV0aG9kIGFkZGVkXG4qL1xuZnVuY3Rpb24gbWFrZUFzeW5jUmVzb3VyY2UodGhpbmcsIGRpc3Bvc2UpIHtcblx0Y29uc3QgaXQgPSB0aGluZztcblx0Y29uc3QgZXhpc3RpbmcgPSBpdFtTeW1ib2wuYXN5bmNEaXNwb3NlXTtcblx0aXRbU3ltYm9sLmFzeW5jRGlzcG9zZV0gPSBhc3luYyAoKSA9PiB7XG5cdFx0YXdhaXQgZGlzcG9zZSgpO1xuXHRcdGF3YWl0IChleGlzdGluZyA9PT0gbnVsbCB8fCBleGlzdGluZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXhpc3RpbmcoKSk7XG5cdH07XG5cdHJldHVybiBpdDtcbn1cblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gc3JjL3Vuc3RhYmxlLWNvcmUtZG8tbm90LWltcG9ydC9zdHJlYW0vdXRpbHMvdGltZXJSZXNvdXJjZS50c1xuY29uc3QgZGlzcG9zYWJsZVByb21pc2VUaW1lclJlc3VsdCA9IFN5bWJvbCgpO1xuZnVuY3Rpb24gdGltZXJSZXNvdXJjZShtcykge1xuXHRsZXQgdGltZXIgPSBudWxsO1xuXHRyZXR1cm4gbWFrZVJlc291cmNlKHsgc3RhcnQoKSB7XG5cdFx0aWYgKHRpbWVyKSB0aHJvdyBuZXcgRXJyb3IoXCJUaW1lciBhbHJlYWR5IHN0YXJ0ZWRcIik7XG5cdFx0Y29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG5cdFx0XHR0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4gcmVzb2x2ZShkaXNwb3NhYmxlUHJvbWlzZVRpbWVyUmVzdWx0KSwgbXMpO1xuXHRcdH0pO1xuXHRcdHJldHVybiBwcm9taXNlO1xuXHR9IH0sICgpID0+IHtcblx0XHRpZiAodGltZXIpIGNsZWFyVGltZW91dCh0aW1lcik7XG5cdH0pO1xufVxuXG4vLyNlbmRyZWdpb25cbi8vI3JlZ2lvbiAuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG94Yy1wcm9qZWN0K3J1bnRpbWVAMC43Mi4yL25vZGVfbW9kdWxlcy9Ab3hjLXByb2plY3QvcnVudGltZS9zcmMvaGVscGVycy91c2luZ0N0eC5qc1xudmFyIHJlcXVpcmVfdXNpbmdDdHggPSBfX2NvbW1vbkpTKHsgXCIuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG94Yy1wcm9qZWN0K3J1bnRpbWVAMC43Mi4yL25vZGVfbW9kdWxlcy9Ab3hjLXByb2plY3QvcnVudGltZS9zcmMvaGVscGVycy91c2luZ0N0eC5qc1wiKGV4cG9ydHMsIG1vZHVsZSkge1xuXHRmdW5jdGlvbiBfdXNpbmdDdHgoKSB7XG5cdFx0dmFyIHIgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN1cHByZXNzZWRFcnJvciA/IFN1cHByZXNzZWRFcnJvciA6IGZ1bmN0aW9uKHIkMSwgZSQxKSB7XG5cdFx0XHR2YXIgbiQxID0gRXJyb3IoKTtcblx0XHRcdHJldHVybiBuJDEubmFtZSA9IFwiU3VwcHJlc3NlZEVycm9yXCIsIG4kMS5lcnJvciA9IHIkMSwgbiQxLnN1cHByZXNzZWQgPSBlJDEsIG4kMTtcblx0XHR9LCBlID0ge30sIG4gPSBbXTtcblx0XHRmdW5jdGlvbiB1c2luZyhyJDEsIGUkMSkge1xuXHRcdFx0aWYgKG51bGwgIT0gZSQxKSB7XG5cdFx0XHRcdGlmIChPYmplY3QoZSQxKSAhPT0gZSQxKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwidXNpbmcgZGVjbGFyYXRpb25zIGNhbiBvbmx5IGJlIHVzZWQgd2l0aCBvYmplY3RzLCBmdW5jdGlvbnMsIG51bGwsIG9yIHVuZGVmaW5lZC5cIik7XG5cdFx0XHRcdGlmIChyJDEpIHZhciBvID0gZSQxW1N5bWJvbC5hc3luY0Rpc3Bvc2UgfHwgU3ltYm9sW1wiZm9yXCJdKFwiU3ltYm9sLmFzeW5jRGlzcG9zZVwiKV07XG5cdFx0XHRcdGlmICh2b2lkIDAgPT09IG8gJiYgKG8gPSBlJDFbU3ltYm9sLmRpc3Bvc2UgfHwgU3ltYm9sW1wiZm9yXCJdKFwiU3ltYm9sLmRpc3Bvc2VcIildLCByJDEpKSB2YXIgdCA9IG87XG5cdFx0XHRcdGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIG8pIHRocm93IG5ldyBUeXBlRXJyb3IoXCJPYmplY3QgaXMgbm90IGRpc3Bvc2FibGUuXCIpO1xuXHRcdFx0XHR0ICYmIChvID0gZnVuY3Rpb24gbyQxKCkge1xuXHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHR0LmNhbGwoZSQxKTtcblx0XHRcdFx0XHR9IGNhdGNoIChyJDIpIHtcblx0XHRcdFx0XHRcdHJldHVybiBQcm9taXNlLnJlamVjdChyJDIpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSksIG4ucHVzaCh7XG5cdFx0XHRcdFx0djogZSQxLFxuXHRcdFx0XHRcdGQ6IG8sXG5cdFx0XHRcdFx0YTogciQxXG5cdFx0XHRcdH0pO1xuXHRcdFx0fSBlbHNlIHIkMSAmJiBuLnB1c2goe1xuXHRcdFx0XHRkOiBlJDEsXG5cdFx0XHRcdGE6IHIkMVxuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gZSQxO1xuXHRcdH1cblx0XHRyZXR1cm4ge1xuXHRcdFx0ZSxcblx0XHRcdHU6IHVzaW5nLmJpbmQobnVsbCwgITEpLFxuXHRcdFx0YTogdXNpbmcuYmluZChudWxsLCAhMCksXG5cdFx0XHRkOiBmdW5jdGlvbiBkKCkge1xuXHRcdFx0XHR2YXIgbywgdCA9IHRoaXMuZSwgcyA9IDA7XG5cdFx0XHRcdGZ1bmN0aW9uIG5leHQoKSB7XG5cdFx0XHRcdFx0Zm9yICg7IG8gPSBuLnBvcCgpOykgdHJ5IHtcblx0XHRcdFx0XHRcdGlmICghby5hICYmIDEgPT09IHMpIHJldHVybiBzID0gMCwgbi5wdXNoKG8pLCBQcm9taXNlLnJlc29sdmUoKS50aGVuKG5leHQpO1xuXHRcdFx0XHRcdFx0aWYgKG8uZCkge1xuXHRcdFx0XHRcdFx0XHR2YXIgciQxID0gby5kLmNhbGwoby52KTtcblx0XHRcdFx0XHRcdFx0aWYgKG8uYSkgcmV0dXJuIHMgfD0gMiwgUHJvbWlzZS5yZXNvbHZlKHIkMSkudGhlbihuZXh0LCBlcnIpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHMgfD0gMTtcblx0XHRcdFx0XHR9IGNhdGNoIChyJDIpIHtcblx0XHRcdFx0XHRcdHJldHVybiBlcnIociQyKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKDEgPT09IHMpIHJldHVybiB0ICE9PSBlID8gUHJvbWlzZS5yZWplY3QodCkgOiBQcm9taXNlLnJlc29sdmUoKTtcblx0XHRcdFx0XHRpZiAodCAhPT0gZSkgdGhyb3cgdDtcblx0XHRcdFx0fVxuXHRcdFx0XHRmdW5jdGlvbiBlcnIobiQxKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHQgPSB0ICE9PSBlID8gbmV3IHIobiQxLCB0KSA6IG4kMSwgbmV4dCgpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBuZXh0KCk7XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuXHRtb2R1bGUuZXhwb3J0cyA9IF91c2luZ0N0eCwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xufSB9KTtcblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BveGMtcHJvamVjdCtydW50aW1lQDAuNzIuMi9ub2RlX21vZHVsZXMvQG94Yy1wcm9qZWN0L3J1bnRpbWUvc3JjL2hlbHBlcnMvT3ZlcmxvYWRZaWVsZC5qc1xudmFyIHJlcXVpcmVfT3ZlcmxvYWRZaWVsZCA9IF9fY29tbW9uSlMoeyBcIi4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3hjLXByb2plY3QrcnVudGltZUAwLjcyLjIvbm9kZV9tb2R1bGVzL0BveGMtcHJvamVjdC9ydW50aW1lL3NyYy9oZWxwZXJzL092ZXJsb2FkWWllbGQuanNcIihleHBvcnRzLCBtb2R1bGUpIHtcblx0ZnVuY3Rpb24gX092ZXJsb2FkWWllbGQoZSwgZCkge1xuXHRcdHRoaXMudiA9IGUsIHRoaXMuayA9IGQ7XG5cdH1cblx0bW9kdWxlLmV4cG9ydHMgPSBfT3ZlcmxvYWRZaWVsZCwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xufSB9KTtcblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BveGMtcHJvamVjdCtydW50aW1lQDAuNzIuMi9ub2RlX21vZHVsZXMvQG94Yy1wcm9qZWN0L3J1bnRpbWUvc3JjL2hlbHBlcnMvYXdhaXRBc3luY0dlbmVyYXRvci5qc1xudmFyIHJlcXVpcmVfYXdhaXRBc3luY0dlbmVyYXRvciA9IF9fY29tbW9uSlMoeyBcIi4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3hjLXByb2plY3QrcnVudGltZUAwLjcyLjIvbm9kZV9tb2R1bGVzL0BveGMtcHJvamVjdC9ydW50aW1lL3NyYy9oZWxwZXJzL2F3YWl0QXN5bmNHZW5lcmF0b3IuanNcIihleHBvcnRzLCBtb2R1bGUpIHtcblx0dmFyIE92ZXJsb2FkWWllbGQkMiA9IHJlcXVpcmVfT3ZlcmxvYWRZaWVsZCgpO1xuXHRmdW5jdGlvbiBfYXdhaXRBc3luY0dlbmVyYXRvciQ1KGUpIHtcblx0XHRyZXR1cm4gbmV3IE92ZXJsb2FkWWllbGQkMihlLCAwKTtcblx0fVxuXHRtb2R1bGUuZXhwb3J0cyA9IF9hd2FpdEFzeW5jR2VuZXJhdG9yJDUsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cztcbn0gfSk7XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3hjLXByb2plY3QrcnVudGltZUAwLjcyLjIvbm9kZV9tb2R1bGVzL0BveGMtcHJvamVjdC9ydW50aW1lL3NyYy9oZWxwZXJzL3dyYXBBc3luY0dlbmVyYXRvci5qc1xudmFyIHJlcXVpcmVfd3JhcEFzeW5jR2VuZXJhdG9yID0gX19jb21tb25KUyh7IFwiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BveGMtcHJvamVjdCtydW50aW1lQDAuNzIuMi9ub2RlX21vZHVsZXMvQG94Yy1wcm9qZWN0L3J1bnRpbWUvc3JjL2hlbHBlcnMvd3JhcEFzeW5jR2VuZXJhdG9yLmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG5cdHZhciBPdmVybG9hZFlpZWxkJDEgPSByZXF1aXJlX092ZXJsb2FkWWllbGQoKTtcblx0ZnVuY3Rpb24gX3dyYXBBc3luY0dlbmVyYXRvciQ2KGUpIHtcblx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gbmV3IEFzeW5jR2VuZXJhdG9yKGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG5cdFx0fTtcblx0fVxuXHRmdW5jdGlvbiBBc3luY0dlbmVyYXRvcihlKSB7XG5cdFx0dmFyIHIsIHQ7XG5cdFx0ZnVuY3Rpb24gcmVzdW1lKHIkMSwgdCQxKSB7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHR2YXIgbiA9IGVbciQxXSh0JDEpLCBvID0gbi52YWx1ZSwgdSA9IG8gaW5zdGFuY2VvZiBPdmVybG9hZFlpZWxkJDE7XG5cdFx0XHRcdFByb21pc2UucmVzb2x2ZSh1ID8gby52IDogbykudGhlbihmdW5jdGlvbih0JDIpIHtcblx0XHRcdFx0XHRpZiAodSkge1xuXHRcdFx0XHRcdFx0dmFyIGkgPSBcInJldHVyblwiID09PSByJDEgPyBcInJldHVyblwiIDogXCJuZXh0XCI7XG5cdFx0XHRcdFx0XHRpZiAoIW8uayB8fCB0JDIuZG9uZSkgcmV0dXJuIHJlc3VtZShpLCB0JDIpO1xuXHRcdFx0XHRcdFx0dCQyID0gZVtpXSh0JDIpLnZhbHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRzZXR0bGUobi5kb25lID8gXCJyZXR1cm5cIiA6IFwibm9ybWFsXCIsIHQkMik7XG5cdFx0XHRcdH0sIGZ1bmN0aW9uKGUkMSkge1xuXHRcdFx0XHRcdHJlc3VtZShcInRocm93XCIsIGUkMSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSBjYXRjaCAoZSQxKSB7XG5cdFx0XHRcdHNldHRsZShcInRocm93XCIsIGUkMSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGZ1bmN0aW9uIHNldHRsZShlJDEsIG4pIHtcblx0XHRcdHN3aXRjaCAoZSQxKSB7XG5cdFx0XHRcdGNhc2UgXCJyZXR1cm5cIjpcblx0XHRcdFx0XHRyLnJlc29sdmUoe1xuXHRcdFx0XHRcdFx0dmFsdWU6IG4sXG5cdFx0XHRcdFx0XHRkb25lOiAhMFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwidGhyb3dcIjpcblx0XHRcdFx0XHRyLnJlamVjdChuKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDogci5yZXNvbHZlKHtcblx0XHRcdFx0XHR2YWx1ZTogbixcblx0XHRcdFx0XHRkb25lOiAhMVxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHRcdChyID0gci5uZXh0KSA/IHJlc3VtZShyLmtleSwgci5hcmcpIDogdCA9IG51bGw7XG5cdFx0fVxuXHRcdHRoaXMuX2ludm9rZSA9IGZ1bmN0aW9uKGUkMSwgbikge1xuXHRcdFx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKG8sIHUpIHtcblx0XHRcdFx0dmFyIGkgPSB7XG5cdFx0XHRcdFx0a2V5OiBlJDEsXG5cdFx0XHRcdFx0YXJnOiBuLFxuXHRcdFx0XHRcdHJlc29sdmU6IG8sXG5cdFx0XHRcdFx0cmVqZWN0OiB1LFxuXHRcdFx0XHRcdG5leHQ6IG51bGxcblx0XHRcdFx0fTtcblx0XHRcdFx0dCA/IHQgPSB0Lm5leHQgPSBpIDogKHIgPSB0ID0gaSwgcmVzdW1lKGUkMSwgbikpO1xuXHRcdFx0fSk7XG5cdFx0fSwgXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlW1wicmV0dXJuXCJdICYmICh0aGlzW1wicmV0dXJuXCJdID0gdm9pZCAwKTtcblx0fVxuXHRBc3luY0dlbmVyYXRvci5wcm90b3R5cGVbXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgU3ltYm9sLmFzeW5jSXRlcmF0b3IgfHwgXCJAQGFzeW5jSXRlcmF0b3JcIl0gPSBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcztcblx0fSwgQXN5bmNHZW5lcmF0b3IucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbihlKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2ludm9rZShcIm5leHRcIiwgZSk7XG5cdH0sIEFzeW5jR2VuZXJhdG9yLnByb3RvdHlwZVtcInRocm93XCJdID0gZnVuY3Rpb24oZSkge1xuXHRcdHJldHVybiB0aGlzLl9pbnZva2UoXCJ0aHJvd1wiLCBlKTtcblx0fSwgQXN5bmNHZW5lcmF0b3IucHJvdG90eXBlW1wicmV0dXJuXCJdID0gZnVuY3Rpb24oZSkge1xuXHRcdHJldHVybiB0aGlzLl9pbnZva2UoXCJyZXR1cm5cIiwgZSk7XG5cdH07XG5cdG1vZHVsZS5leHBvcnRzID0gX3dyYXBBc3luY0dlbmVyYXRvciQ2LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7XG59IH0pO1xuXG4vLyNlbmRyZWdpb25cbi8vI3JlZ2lvbiBzcmMvdW5zdGFibGUtY29yZS1kby1ub3QtaW1wb3J0L3N0cmVhbS91dGlscy9hc3luY0l0ZXJhYmxlLnRzXG52YXIgaW1wb3J0X3VzaW5nQ3R4JDQgPSBfX3RvRVNNKHJlcXVpcmVfdXNpbmdDdHgoKSwgMSk7XG52YXIgaW1wb3J0X2F3YWl0QXN5bmNHZW5lcmF0b3IkNCA9IF9fdG9FU00ocmVxdWlyZV9hd2FpdEFzeW5jR2VuZXJhdG9yKCksIDEpO1xudmFyIGltcG9ydF93cmFwQXN5bmNHZW5lcmF0b3IkNSA9IF9fdG9FU00ocmVxdWlyZV93cmFwQXN5bmNHZW5lcmF0b3IoKSwgMSk7XG5mdW5jdGlvbiBpdGVyYXRvclJlc291cmNlKGl0ZXJhYmxlKSB7XG5cdGNvbnN0IGl0ZXJhdG9yID0gaXRlcmFibGVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG5cdGlmIChpdGVyYXRvcltTeW1ib2wuYXN5bmNEaXNwb3NlXSkgcmV0dXJuIGl0ZXJhdG9yO1xuXHRyZXR1cm4gbWFrZUFzeW5jUmVzb3VyY2UoaXRlcmF0b3IsIGFzeW5jICgpID0+IHtcblx0XHR2YXIgX2l0ZXJhdG9yJHJldHVybjtcblx0XHRhd2FpdCAoKF9pdGVyYXRvciRyZXR1cm4gPSBpdGVyYXRvci5yZXR1cm4pID09PSBudWxsIHx8IF9pdGVyYXRvciRyZXR1cm4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9pdGVyYXRvciRyZXR1cm4uY2FsbChpdGVyYXRvcikpO1xuXHR9KTtcbn1cbi8qKlxuKiBEZXJpdmVzIGEgbmV3IHtAbGluayBBc3luY0dlbmVyYXRvcn0gYmFzZWQgb24ge0BsaW5rIGl0ZXJhYmxlfSwgdGhhdCBhdXRvbWF0aWNhbGx5IGFib3J0cyBhZnRlciB0aGUgc3BlY2lmaWVkIGR1cmF0aW9uLlxuKi9cbmZ1bmN0aW9uIHdpdGhNYXhEdXJhdGlvbihfeCwgX3gyKSB7XG5cdHJldHVybiBfd2l0aE1heER1cmF0aW9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5mdW5jdGlvbiBfd2l0aE1heER1cmF0aW9uKCkge1xuXHRfd2l0aE1heER1cmF0aW9uID0gKDAsIGltcG9ydF93cmFwQXN5bmNHZW5lcmF0b3IkNS5kZWZhdWx0KShmdW5jdGlvbiogKGl0ZXJhYmxlLCBvcHRzKSB7XG5cdFx0dHJ5IHtcblx0XHRcdHZhciBfdXNpbmdDdHgkMSA9ICgwLCBpbXBvcnRfdXNpbmdDdHgkNC5kZWZhdWx0KSgpO1xuXHRcdFx0Y29uc3QgaXRlcmF0b3IgPSBfdXNpbmdDdHgkMS5hKGl0ZXJhdG9yUmVzb3VyY2UoaXRlcmFibGUpKTtcblx0XHRcdGNvbnN0IHRpbWVyID0gX3VzaW5nQ3R4JDEudSh0aW1lclJlc291cmNlKG9wdHMubWF4RHVyYXRpb25NcykpO1xuXHRcdFx0Y29uc3QgdGltZXJQcm9taXNlID0gdGltZXIuc3RhcnQoKTtcblx0XHRcdGxldCByZXN1bHQ7XG5cdFx0XHR3aGlsZSAodHJ1ZSkge1xuXHRcdFx0XHRyZXN1bHQgPSB5aWVsZCAoMCwgaW1wb3J0X2F3YWl0QXN5bmNHZW5lcmF0b3IkNC5kZWZhdWx0KShVbnByb21pc2UucmFjZShbaXRlcmF0b3IubmV4dCgpLCB0aW1lclByb21pc2VdKSk7XG5cdFx0XHRcdGlmIChyZXN1bHQgPT09IGRpc3Bvc2FibGVQcm9taXNlVGltZXJSZXN1bHQpIHRocm93QWJvcnRFcnJvcigpO1xuXHRcdFx0XHRpZiAocmVzdWx0LmRvbmUpIHJldHVybiByZXN1bHQ7XG5cdFx0XHRcdHlpZWxkIHJlc3VsdC52YWx1ZTtcblx0XHRcdFx0cmVzdWx0ID0gbnVsbDtcblx0XHRcdH1cblx0XHR9IGNhdGNoIChfKSB7XG5cdFx0XHRfdXNpbmdDdHgkMS5lID0gXztcblx0XHR9IGZpbmFsbHkge1xuXHRcdFx0eWllbGQgKDAsIGltcG9ydF9hd2FpdEFzeW5jR2VuZXJhdG9yJDQuZGVmYXVsdCkoX3VzaW5nQ3R4JDEuZCgpKTtcblx0XHR9XG5cdH0pO1xuXHRyZXR1cm4gX3dpdGhNYXhEdXJhdGlvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuLyoqXG4qIERlcml2ZXMgYSBuZXcge0BsaW5rIEFzeW5jR2VuZXJhdG9yfSBiYXNlZCBvZiB7QGxpbmsgaXRlcmFibGV9LCB0aGF0IHlpZWxkcyBpdHMgZmlyc3Rcbioge0BsaW5rIGNvdW50fSB2YWx1ZXMuIFRoZW4sIGEgZ3JhY2UgcGVyaW9kIG9mIHtAbGluayBncmFjZVBlcmlvZE1zfSBpcyBzdGFydGVkIGluIHdoaWNoIGZ1cnRoZXJcbiogdmFsdWVzIG1heSBzdGlsbCBjb21lIHRocm91Z2guIEFmdGVyIHRoaXMgcGVyaW9kLCB0aGUgZ2VuZXJhdG9yIGFib3J0cy5cbiovXG5mdW5jdGlvbiB0YWtlV2l0aEdyYWNlKF94MywgX3g0KSB7XG5cdHJldHVybiBfdGFrZVdpdGhHcmFjZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuZnVuY3Rpb24gX3Rha2VXaXRoR3JhY2UoKSB7XG5cdF90YWtlV2l0aEdyYWNlID0gKDAsIGltcG9ydF93cmFwQXN5bmNHZW5lcmF0b3IkNS5kZWZhdWx0KShmdW5jdGlvbiogKGl0ZXJhYmxlLCBvcHRzKSB7XG5cdFx0dHJ5IHtcblx0XHRcdHZhciBfdXNpbmdDdHgzID0gKDAsIGltcG9ydF91c2luZ0N0eCQ0LmRlZmF1bHQpKCk7XG5cdFx0XHRjb25zdCBpdGVyYXRvciA9IF91c2luZ0N0eDMuYShpdGVyYXRvclJlc291cmNlKGl0ZXJhYmxlKSk7XG5cdFx0XHRsZXQgcmVzdWx0O1xuXHRcdFx0Y29uc3QgdGltZXIgPSBfdXNpbmdDdHgzLnUodGltZXJSZXNvdXJjZShvcHRzLmdyYWNlUGVyaW9kTXMpKTtcblx0XHRcdGxldCBjb3VudCA9IG9wdHMuY291bnQ7XG5cdFx0XHRsZXQgdGltZXJQcm9taXNlID0gbmV3IFByb21pc2UoKCkgPT4ge30pO1xuXHRcdFx0d2hpbGUgKHRydWUpIHtcblx0XHRcdFx0cmVzdWx0ID0geWllbGQgKDAsIGltcG9ydF9hd2FpdEFzeW5jR2VuZXJhdG9yJDQuZGVmYXVsdCkoVW5wcm9taXNlLnJhY2UoW2l0ZXJhdG9yLm5leHQoKSwgdGltZXJQcm9taXNlXSkpO1xuXHRcdFx0XHRpZiAocmVzdWx0ID09PSBkaXNwb3NhYmxlUHJvbWlzZVRpbWVyUmVzdWx0KSB0aHJvd0Fib3J0RXJyb3IoKTtcblx0XHRcdFx0aWYgKHJlc3VsdC5kb25lKSByZXR1cm4gcmVzdWx0LnZhbHVlO1xuXHRcdFx0XHR5aWVsZCByZXN1bHQudmFsdWU7XG5cdFx0XHRcdGlmICgtLWNvdW50ID09PSAwKSB0aW1lclByb21pc2UgPSB0aW1lci5zdGFydCgpO1xuXHRcdFx0XHRyZXN1bHQgPSBudWxsO1xuXHRcdFx0fVxuXHRcdH0gY2F0Y2ggKF8pIHtcblx0XHRcdF91c2luZ0N0eDMuZSA9IF87XG5cdFx0fSBmaW5hbGx5IHtcblx0XHRcdHlpZWxkICgwLCBpbXBvcnRfYXdhaXRBc3luY0dlbmVyYXRvciQ0LmRlZmF1bHQpKF91c2luZ0N0eDMuZCgpKTtcblx0XHR9XG5cdH0pO1xuXHRyZXR1cm4gX3Rha2VXaXRoR3JhY2UuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gc3JjL3Vuc3RhYmxlLWNvcmUtZG8tbm90LWltcG9ydC9zdHJlYW0vdXRpbHMvY3JlYXRlRGVmZXJyZWQudHNcbmZ1bmN0aW9uIGNyZWF0ZURlZmVycmVkKCkge1xuXHRsZXQgcmVzb2x2ZTtcblx0bGV0IHJlamVjdDtcblx0Y29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuXHRcdHJlc29sdmUgPSByZXM7XG5cdFx0cmVqZWN0ID0gcmVqO1xuXHR9KTtcblx0cmV0dXJuIHtcblx0XHRwcm9taXNlLFxuXHRcdHJlc29sdmUsXG5cdFx0cmVqZWN0XG5cdH07XG59XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIHNyYy91bnN0YWJsZS1jb3JlLWRvLW5vdC1pbXBvcnQvc3RyZWFtL3V0aWxzL21lcmdlQXN5bmNJdGVyYWJsZXMudHNcbnZhciBpbXBvcnRfdXNpbmdDdHgkMyA9IF9fdG9FU00ocmVxdWlyZV91c2luZ0N0eCgpLCAxKTtcbnZhciBpbXBvcnRfYXdhaXRBc3luY0dlbmVyYXRvciQzID0gX190b0VTTShyZXF1aXJlX2F3YWl0QXN5bmNHZW5lcmF0b3IoKSwgMSk7XG52YXIgaW1wb3J0X3dyYXBBc3luY0dlbmVyYXRvciQ0ID0gX190b0VTTShyZXF1aXJlX3dyYXBBc3luY0dlbmVyYXRvcigpLCAxKTtcbmZ1bmN0aW9uIGNyZWF0ZU1hbmFnZWRJdGVyYXRvcihpdGVyYWJsZSwgb25SZXN1bHQpIHtcblx0Y29uc3QgaXRlcmF0b3IgPSBpdGVyYWJsZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcblx0bGV0IHN0YXRlID0gXCJpZGxlXCI7XG5cdGZ1bmN0aW9uIGNsZWFudXAoKSB7XG5cdFx0c3RhdGUgPSBcImRvbmVcIjtcblx0XHRvblJlc3VsdCA9ICgpID0+IHt9O1xuXHR9XG5cdGZ1bmN0aW9uIHB1bGwoKSB7XG5cdFx0aWYgKHN0YXRlICE9PSBcImlkbGVcIikgcmV0dXJuO1xuXHRcdHN0YXRlID0gXCJwZW5kaW5nXCI7XG5cdFx0Y29uc3QgbmV4dCA9IGl0ZXJhdG9yLm5leHQoKTtcblx0XHRuZXh0LnRoZW4oKHJlc3VsdCkgPT4ge1xuXHRcdFx0aWYgKHJlc3VsdC5kb25lKSB7XG5cdFx0XHRcdHN0YXRlID0gXCJkb25lXCI7XG5cdFx0XHRcdG9uUmVzdWx0KHtcblx0XHRcdFx0XHRzdGF0dXM6IFwicmV0dXJuXCIsXG5cdFx0XHRcdFx0dmFsdWU6IHJlc3VsdC52YWx1ZVxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Y2xlYW51cCgpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRzdGF0ZSA9IFwiaWRsZVwiO1xuXHRcdFx0b25SZXN1bHQoe1xuXHRcdFx0XHRzdGF0dXM6IFwieWllbGRcIixcblx0XHRcdFx0dmFsdWU6IHJlc3VsdC52YWx1ZVxuXHRcdFx0fSk7XG5cdFx0fSkuY2F0Y2goKGNhdXNlKSA9PiB7XG5cdFx0XHRvblJlc3VsdCh7XG5cdFx0XHRcdHN0YXR1czogXCJlcnJvclwiLFxuXHRcdFx0XHRlcnJvcjogY2F1c2Vcblx0XHRcdH0pO1xuXHRcdFx0Y2xlYW51cCgpO1xuXHRcdH0pO1xuXHR9XG5cdHJldHVybiB7XG5cdFx0cHVsbCxcblx0XHRkZXN0cm95OiBhc3luYyAoKSA9PiB7XG5cdFx0XHR2YXIgX2l0ZXJhdG9yJHJldHVybjtcblx0XHRcdGNsZWFudXAoKTtcblx0XHRcdGF3YWl0ICgoX2l0ZXJhdG9yJHJldHVybiA9IGl0ZXJhdG9yLnJldHVybikgPT09IG51bGwgfHwgX2l0ZXJhdG9yJHJldHVybiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2l0ZXJhdG9yJHJldHVybi5jYWxsKGl0ZXJhdG9yKSk7XG5cdFx0fVxuXHR9O1xufVxuLyoqXG4qIENyZWF0ZXMgYSBuZXcgYXN5bmMgaXRlcmFibGUgdGhhdCBtZXJnZXMgbXVsdGlwbGUgYXN5bmMgaXRlcmFibGVzIGludG8gYSBzaW5nbGUgc3RyZWFtLlxuKiBWYWx1ZXMgZnJvbSB0aGUgaW5wdXQgaXRlcmFibGVzIGFyZSB5aWVsZGVkIGluIHRoZSBvcmRlciB0aGV5IHJlc29sdmUsIHNpbWlsYXIgdG8gUHJvbWlzZS5yYWNlKCkuXG4qXG4qIE5ldyBpdGVyYWJsZXMgY2FuIGJlIGFkZGVkIGR5bmFtaWNhbGx5IHVzaW5nIHRoZSByZXR1cm5lZCB7QGxpbmsgTWVyZ2VkQXN5bmNJdGVyYWJsZXMuYWRkfSBtZXRob2QsIGV2ZW4gYWZ0ZXIgaXRlcmF0aW9uIGhhcyBzdGFydGVkLlxuKlxuKiBJZiBhbnkgb2YgdGhlIGlucHV0IGl0ZXJhYmxlcyB0aHJvd3MgYW4gZXJyb3IsIHRoYXQgZXJyb3Igd2lsbCBiZSBwcm9wYWdhdGVkIHRocm91Z2ggdGhlIG1lcmdlZCBzdHJlYW0uXG4qIE90aGVyIGl0ZXJhYmxlcyB3aWxsIG5vdCBjb250aW51ZSB0byBiZSBwcm9jZXNzZWQuXG4qXG4qIEB0ZW1wbGF0ZSBUWWllbGQgVGhlIHR5cGUgb2YgdmFsdWVzIHlpZWxkZWQgYnkgdGhlIGlucHV0IGl0ZXJhYmxlc1xuKi9cbmZ1bmN0aW9uIG1lcmdlQXN5bmNJdGVyYWJsZXMoKSB7XG5cdGxldCBzdGF0ZSA9IFwiaWRsZVwiO1xuXHRsZXQgZmx1c2hTaWduYWwgPSBjcmVhdGVEZWZlcnJlZCgpO1xuXHQvKipcblx0KiB1c2VkIHdoaWxlIHtAbGluayBzdGF0ZX0gaXMgYGlkbGVgXG5cdCovXG5cdGNvbnN0IGl0ZXJhYmxlcyA9IFtdO1xuXHQvKipcblx0KiB1c2VkIHdoaWxlIHtAbGluayBzdGF0ZX0gaXMgYHBlbmRpbmdgXG5cdCovXG5cdGNvbnN0IGl0ZXJhdG9ycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG5cdGNvbnN0IGJ1ZmZlciA9IFtdO1xuXHRmdW5jdGlvbiBpbml0SXRlcmFibGUoaXRlcmFibGUpIHtcblx0XHRpZiAoc3RhdGUgIT09IFwicGVuZGluZ1wiKSByZXR1cm47XG5cdFx0Y29uc3QgaXRlcmF0b3IgPSBjcmVhdGVNYW5hZ2VkSXRlcmF0b3IoaXRlcmFibGUsIChyZXN1bHQpID0+IHtcblx0XHRcdGlmIChzdGF0ZSAhPT0gXCJwZW5kaW5nXCIpIHJldHVybjtcblx0XHRcdHN3aXRjaCAocmVzdWx0LnN0YXR1cykge1xuXHRcdFx0XHRjYXNlIFwieWllbGRcIjpcblx0XHRcdFx0XHRidWZmZXIucHVzaChbaXRlcmF0b3IsIHJlc3VsdF0pO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwicmV0dXJuXCI6XG5cdFx0XHRcdFx0aXRlcmF0b3JzLmRlbGV0ZShpdGVyYXRvcik7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJlcnJvclwiOlxuXHRcdFx0XHRcdGJ1ZmZlci5wdXNoKFtpdGVyYXRvciwgcmVzdWx0XSk7XG5cdFx0XHRcdFx0aXRlcmF0b3JzLmRlbGV0ZShpdGVyYXRvcik7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRmbHVzaFNpZ25hbC5yZXNvbHZlKCk7XG5cdFx0fSk7XG5cdFx0aXRlcmF0b3JzLmFkZChpdGVyYXRvcik7XG5cdFx0aXRlcmF0b3IucHVsbCgpO1xuXHR9XG5cdHJldHVybiB7XG5cdFx0YWRkKGl0ZXJhYmxlKSB7XG5cdFx0XHRzd2l0Y2ggKHN0YXRlKSB7XG5cdFx0XHRcdGNhc2UgXCJpZGxlXCI6XG5cdFx0XHRcdFx0aXRlcmFibGVzLnB1c2goaXRlcmFibGUpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwicGVuZGluZ1wiOlxuXHRcdFx0XHRcdGluaXRJdGVyYWJsZShpdGVyYWJsZSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJkb25lXCI6IGJyZWFrO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0W1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcblx0XHRcdHJldHVybiAoMCwgaW1wb3J0X3dyYXBBc3luY0dlbmVyYXRvciQ0LmRlZmF1bHQpKGZ1bmN0aW9uKiAoKSB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0dmFyIF91c2luZ0N0eCQxID0gKDAsIGltcG9ydF91c2luZ0N0eCQzLmRlZmF1bHQpKCk7XG5cdFx0XHRcdFx0aWYgKHN0YXRlICE9PSBcImlkbGVcIikgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGl0ZXJhdGUgdHdpY2VcIik7XG5cdFx0XHRcdFx0c3RhdGUgPSBcInBlbmRpbmdcIjtcblx0XHRcdFx0XHRjb25zdCBfZmluYWxseSA9IF91c2luZ0N0eCQxLmEobWFrZUFzeW5jUmVzb3VyY2Uoe30sIGFzeW5jICgpID0+IHtcblx0XHRcdFx0XHRcdHN0YXRlID0gXCJkb25lXCI7XG5cdFx0XHRcdFx0XHRjb25zdCBlcnJvcnMgPSBbXTtcblx0XHRcdFx0XHRcdGF3YWl0IFByb21pc2UuYWxsKEFycmF5LmZyb20oaXRlcmF0b3JzLnZhbHVlcygpKS5tYXAoYXN5bmMgKGl0KSA9PiB7XG5cdFx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdFx0YXdhaXQgaXQuZGVzdHJveSgpO1xuXHRcdFx0XHRcdFx0XHR9IGNhdGNoIChjYXVzZSkge1xuXHRcdFx0XHRcdFx0XHRcdGVycm9ycy5wdXNoKGNhdXNlKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSkpO1xuXHRcdFx0XHRcdFx0YnVmZmVyLmxlbmd0aCA9IDA7XG5cdFx0XHRcdFx0XHRpdGVyYXRvcnMuY2xlYXIoKTtcblx0XHRcdFx0XHRcdGZsdXNoU2lnbmFsLnJlc29sdmUoKTtcblx0XHRcdFx0XHRcdGlmIChlcnJvcnMubGVuZ3RoID4gMCkgdGhyb3cgbmV3IEFnZ3JlZ2F0ZUVycm9yKGVycm9ycyk7XG5cdFx0XHRcdFx0fSkpO1xuXHRcdFx0XHRcdHdoaWxlIChpdGVyYWJsZXMubGVuZ3RoID4gMCkgaW5pdEl0ZXJhYmxlKGl0ZXJhYmxlcy5zaGlmdCgpKTtcblx0XHRcdFx0XHR3aGlsZSAoaXRlcmF0b3JzLnNpemUgPiAwKSB7XG5cdFx0XHRcdFx0XHR5aWVsZCAoMCwgaW1wb3J0X2F3YWl0QXN5bmNHZW5lcmF0b3IkMy5kZWZhdWx0KShmbHVzaFNpZ25hbC5wcm9taXNlKTtcblx0XHRcdFx0XHRcdHdoaWxlIChidWZmZXIubGVuZ3RoID4gMCkge1xuXHRcdFx0XHRcdFx0XHRjb25zdCBbaXRlcmF0b3IsIHJlc3VsdF0gPSBidWZmZXIuc2hpZnQoKTtcblx0XHRcdFx0XHRcdFx0c3dpdGNoIChyZXN1bHQuc3RhdHVzKSB7XG5cdFx0XHRcdFx0XHRcdFx0Y2FzZSBcInlpZWxkXCI6XG5cdFx0XHRcdFx0XHRcdFx0XHR5aWVsZCByZXN1bHQudmFsdWU7XG5cdFx0XHRcdFx0XHRcdFx0XHRpdGVyYXRvci5wdWxsKCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHRjYXNlIFwiZXJyb3JcIjogdGhyb3cgcmVzdWx0LmVycm9yO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRmbHVzaFNpZ25hbCA9IGNyZWF0ZURlZmVycmVkKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGNhdGNoIChfKSB7XG5cdFx0XHRcdFx0X3VzaW5nQ3R4JDEuZSA9IF87XG5cdFx0XHRcdH0gZmluYWxseSB7XG5cdFx0XHRcdFx0eWllbGQgKDAsIGltcG9ydF9hd2FpdEFzeW5jR2VuZXJhdG9yJDMuZGVmYXVsdCkoX3VzaW5nQ3R4JDEuZCgpKTtcblx0XHRcdFx0fVxuXHRcdFx0fSkoKTtcblx0XHR9XG5cdH07XG59XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIHNyYy91bnN0YWJsZS1jb3JlLWRvLW5vdC1pbXBvcnQvc3RyZWFtL3V0aWxzL3JlYWRhYmxlU3RyZWFtRnJvbS50c1xuLyoqXG4qIENyZWF0ZXMgYSBSZWFkYWJsZVN0cmVhbSBmcm9tIGFuIEFzeW5jSXRlcmFibGUuXG4qXG4qIEBwYXJhbSBpdGVyYWJsZSAtIFRoZSBzb3VyY2UgQXN5bmNJdGVyYWJsZSB0byBzdHJlYW0gZnJvbVxuKiBAcmV0dXJucyBBIFJlYWRhYmxlU3RyZWFtIHRoYXQgeWllbGRzIHZhbHVlcyBmcm9tIHRoZSBBc3luY0l0ZXJhYmxlXG4qL1xuZnVuY3Rpb24gcmVhZGFibGVTdHJlYW1Gcm9tKGl0ZXJhYmxlKSB7XG5cdGNvbnN0IGl0ZXJhdG9yID0gaXRlcmFibGVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG5cdHJldHVybiBuZXcgUmVhZGFibGVTdHJlYW0oe1xuXHRcdGFzeW5jIGNhbmNlbCgpIHtcblx0XHRcdHZhciBfaXRlcmF0b3IkcmV0dXJuO1xuXHRcdFx0YXdhaXQgKChfaXRlcmF0b3IkcmV0dXJuID0gaXRlcmF0b3IucmV0dXJuKSA9PT0gbnVsbCB8fCBfaXRlcmF0b3IkcmV0dXJuID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfaXRlcmF0b3IkcmV0dXJuLmNhbGwoaXRlcmF0b3IpKTtcblx0XHR9LFxuXHRcdGFzeW5jIHB1bGwoY29udHJvbGxlcikge1xuXHRcdFx0Y29uc3QgcmVzdWx0ID0gYXdhaXQgaXRlcmF0b3IubmV4dCgpO1xuXHRcdFx0aWYgKHJlc3VsdC5kb25lKSB7XG5cdFx0XHRcdGNvbnRyb2xsZXIuY2xvc2UoKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0Y29udHJvbGxlci5lbnF1ZXVlKHJlc3VsdC52YWx1ZSk7XG5cdFx0fVxuXHR9KTtcbn1cblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gc3JjL3Vuc3RhYmxlLWNvcmUtZG8tbm90LWltcG9ydC9zdHJlYW0vdXRpbHMvd2l0aFBpbmcudHNcbnZhciBpbXBvcnRfdXNpbmdDdHgkMiA9IF9fdG9FU00ocmVxdWlyZV91c2luZ0N0eCgpLCAxKTtcbnZhciBpbXBvcnRfYXdhaXRBc3luY0dlbmVyYXRvciQyID0gX190b0VTTShyZXF1aXJlX2F3YWl0QXN5bmNHZW5lcmF0b3IoKSwgMSk7XG52YXIgaW1wb3J0X3dyYXBBc3luY0dlbmVyYXRvciQzID0gX190b0VTTShyZXF1aXJlX3dyYXBBc3luY0dlbmVyYXRvcigpLCAxKTtcbmNvbnN0IFBJTkdfU1lNID0gU3ltYm9sKFwicGluZ1wiKTtcbi8qKlxuKiBEZXJpdmVzIGEgbmV3IHtAbGluayBBc3luY0dlbmVyYXRvcn0gYmFzZWQgb2Yge0BsaW5rIGl0ZXJhYmxlfSwgdGhhdCB5aWVsZHMge0BsaW5rIFBJTkdfU1lNfVxuKiB3aGVuZXZlciBubyB2YWx1ZSBoYXMgYmVlbiB5aWVsZGVkIGZvciB7QGxpbmsgcGluZ0ludGVydmFsTXN9LlxuKi9cbmZ1bmN0aW9uIHdpdGhQaW5nKF94LCBfeDIpIHtcblx0cmV0dXJuIF93aXRoUGluZy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuZnVuY3Rpb24gX3dpdGhQaW5nKCkge1xuXHRfd2l0aFBpbmcgPSAoMCwgaW1wb3J0X3dyYXBBc3luY0dlbmVyYXRvciQzLmRlZmF1bHQpKGZ1bmN0aW9uKiAoaXRlcmFibGUsIHBpbmdJbnRlcnZhbE1zKSB7XG5cdFx0dHJ5IHtcblx0XHRcdHZhciBfdXNpbmdDdHgkMSA9ICgwLCBpbXBvcnRfdXNpbmdDdHgkMi5kZWZhdWx0KSgpO1xuXHRcdFx0Y29uc3QgaXRlcmF0b3IgPSBfdXNpbmdDdHgkMS5hKGl0ZXJhdG9yUmVzb3VyY2UoaXRlcmFibGUpKTtcblx0XHRcdGxldCByZXN1bHQ7XG5cdFx0XHRsZXQgbmV4dFByb21pc2UgPSBpdGVyYXRvci5uZXh0KCk7XG5cdFx0XHR3aGlsZSAodHJ1ZSkgdHJ5IHtcblx0XHRcdFx0dmFyIF91c2luZ0N0eDMgPSAoMCwgaW1wb3J0X3VzaW5nQ3R4JDIuZGVmYXVsdCkoKTtcblx0XHRcdFx0Y29uc3QgcGluZ1Byb21pc2UgPSBfdXNpbmdDdHgzLnUodGltZXJSZXNvdXJjZShwaW5nSW50ZXJ2YWxNcykpO1xuXHRcdFx0XHRyZXN1bHQgPSB5aWVsZCAoMCwgaW1wb3J0X2F3YWl0QXN5bmNHZW5lcmF0b3IkMi5kZWZhdWx0KShVbnByb21pc2UucmFjZShbbmV4dFByb21pc2UsIHBpbmdQcm9taXNlLnN0YXJ0KCldKSk7XG5cdFx0XHRcdGlmIChyZXN1bHQgPT09IGRpc3Bvc2FibGVQcm9taXNlVGltZXJSZXN1bHQpIHtcblx0XHRcdFx0XHR5aWVsZCBQSU5HX1NZTTtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAocmVzdWx0LmRvbmUpIHJldHVybiByZXN1bHQudmFsdWU7XG5cdFx0XHRcdG5leHRQcm9taXNlID0gaXRlcmF0b3IubmV4dCgpO1xuXHRcdFx0XHR5aWVsZCByZXN1bHQudmFsdWU7XG5cdFx0XHRcdHJlc3VsdCA9IG51bGw7XG5cdFx0XHR9IGNhdGNoIChfKSB7XG5cdFx0XHRcdF91c2luZ0N0eDMuZSA9IF87XG5cdFx0XHR9IGZpbmFsbHkge1xuXHRcdFx0XHRfdXNpbmdDdHgzLmQoKTtcblx0XHRcdH1cblx0XHR9IGNhdGNoIChfKSB7XG5cdFx0XHRfdXNpbmdDdHgkMS5lID0gXztcblx0XHR9IGZpbmFsbHkge1xuXHRcdFx0eWllbGQgKDAsIGltcG9ydF9hd2FpdEFzeW5jR2VuZXJhdG9yJDIuZGVmYXVsdCkoX3VzaW5nQ3R4JDEuZCgpKTtcblx0XHR9XG5cdH0pO1xuXHRyZXR1cm4gX3dpdGhQaW5nLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3hjLXByb2plY3QrcnVudGltZUAwLjcyLjIvbm9kZV9tb2R1bGVzL0BveGMtcHJvamVjdC9ydW50aW1lL3NyYy9oZWxwZXJzL2FzeW5jSXRlcmF0b3IuanNcbnZhciByZXF1aXJlX2FzeW5jSXRlcmF0b3IgPSBfX2NvbW1vbkpTKHsgXCIuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG94Yy1wcm9qZWN0K3J1bnRpbWVAMC43Mi4yL25vZGVfbW9kdWxlcy9Ab3hjLXByb2plY3QvcnVudGltZS9zcmMvaGVscGVycy9hc3luY0l0ZXJhdG9yLmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG5cdGZ1bmN0aW9uIF9hc3luY0l0ZXJhdG9yJDIocikge1xuXHRcdHZhciBuLCB0LCBvLCBlID0gMjtcblx0XHRmb3IgKFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIFN5bWJvbCAmJiAodCA9IFN5bWJvbC5hc3luY0l0ZXJhdG9yLCBvID0gU3ltYm9sLml0ZXJhdG9yKTsgZS0tOykge1xuXHRcdFx0aWYgKHQgJiYgbnVsbCAhPSAobiA9IHJbdF0pKSByZXR1cm4gbi5jYWxsKHIpO1xuXHRcdFx0aWYgKG8gJiYgbnVsbCAhPSAobiA9IHJbb10pKSByZXR1cm4gbmV3IEFzeW5jRnJvbVN5bmNJdGVyYXRvcihuLmNhbGwocikpO1xuXHRcdFx0dCA9IFwiQEBhc3luY0l0ZXJhdG9yXCIsIG8gPSBcIkBAaXRlcmF0b3JcIjtcblx0XHR9XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihcIk9iamVjdCBpcyBub3QgYXN5bmMgaXRlcmFibGVcIik7XG5cdH1cblx0ZnVuY3Rpb24gQXN5bmNGcm9tU3luY0l0ZXJhdG9yKHIpIHtcblx0XHRmdW5jdGlvbiBBc3luY0Zyb21TeW5jSXRlcmF0b3JDb250aW51YXRpb24ociQxKSB7XG5cdFx0XHRpZiAoT2JqZWN0KHIkMSkgIT09IHIkMSkgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBUeXBlRXJyb3IociQxICsgXCIgaXMgbm90IGFuIG9iamVjdC5cIikpO1xuXHRcdFx0dmFyIG4gPSByJDEuZG9uZTtcblx0XHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUociQxLnZhbHVlKS50aGVuKGZ1bmN0aW9uKHIkMikge1xuXHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdHZhbHVlOiByJDIsXG5cdFx0XHRcdFx0ZG9uZTogblxuXHRcdFx0XHR9O1xuXHRcdFx0fSk7XG5cdFx0fVxuXHRcdHJldHVybiBBc3luY0Zyb21TeW5jSXRlcmF0b3IgPSBmdW5jdGlvbiBBc3luY0Zyb21TeW5jSXRlcmF0b3IkMShyJDEpIHtcblx0XHRcdHRoaXMucyA9IHIkMSwgdGhpcy5uID0gciQxLm5leHQ7XG5cdFx0fSwgQXN5bmNGcm9tU3luY0l0ZXJhdG9yLnByb3RvdHlwZSA9IHtcblx0XHRcdHM6IG51bGwsXG5cdFx0XHRuOiBudWxsLFxuXHRcdFx0bmV4dDogZnVuY3Rpb24gbmV4dCgpIHtcblx0XHRcdFx0cmV0dXJuIEFzeW5jRnJvbVN5bmNJdGVyYXRvckNvbnRpbnVhdGlvbih0aGlzLm4uYXBwbHkodGhpcy5zLCBhcmd1bWVudHMpKTtcblx0XHRcdH0sXG5cdFx0XHRcInJldHVyblwiOiBmdW5jdGlvbiBfcmV0dXJuKHIkMSkge1xuXHRcdFx0XHR2YXIgbiA9IHRoaXMuc1tcInJldHVyblwiXTtcblx0XHRcdFx0cmV0dXJuIHZvaWQgMCA9PT0gbiA/IFByb21pc2UucmVzb2x2ZSh7XG5cdFx0XHRcdFx0dmFsdWU6IHIkMSxcblx0XHRcdFx0XHRkb25lOiAhMFxuXHRcdFx0XHR9KSA6IEFzeW5jRnJvbVN5bmNJdGVyYXRvckNvbnRpbnVhdGlvbihuLmFwcGx5KHRoaXMucywgYXJndW1lbnRzKSk7XG5cdFx0XHR9LFxuXHRcdFx0XCJ0aHJvd1wiOiBmdW5jdGlvbiBfdGhyb3cociQxKSB7XG5cdFx0XHRcdHZhciBuID0gdGhpcy5zW1wicmV0dXJuXCJdO1xuXHRcdFx0XHRyZXR1cm4gdm9pZCAwID09PSBuID8gUHJvbWlzZS5yZWplY3QociQxKSA6IEFzeW5jRnJvbVN5bmNJdGVyYXRvckNvbnRpbnVhdGlvbihuLmFwcGx5KHRoaXMucywgYXJndW1lbnRzKSk7XG5cdFx0XHR9XG5cdFx0fSwgbmV3IEFzeW5jRnJvbVN5bmNJdGVyYXRvcihyKTtcblx0fVxuXHRtb2R1bGUuZXhwb3J0cyA9IF9hc3luY0l0ZXJhdG9yJDIsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cztcbn0gfSk7XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIHNyYy91bnN0YWJsZS1jb3JlLWRvLW5vdC1pbXBvcnQvc3RyZWFtL2pzb25sLnRzXG52YXIgaW1wb3J0X2F3YWl0QXN5bmNHZW5lcmF0b3IkMSA9IF9fdG9FU00ocmVxdWlyZV9hd2FpdEFzeW5jR2VuZXJhdG9yKCksIDEpO1xudmFyIGltcG9ydF93cmFwQXN5bmNHZW5lcmF0b3IkMiA9IF9fdG9FU00ocmVxdWlyZV93cmFwQXN5bmNHZW5lcmF0b3IoKSwgMSk7XG52YXIgaW1wb3J0X3VzaW5nQ3R4JDEgPSBfX3RvRVNNKHJlcXVpcmVfdXNpbmdDdHgoKSwgMSk7XG52YXIgaW1wb3J0X2FzeW5jSXRlcmF0b3IkMSA9IF9fdG9FU00ocmVxdWlyZV9hc3luY0l0ZXJhdG9yKCksIDEpO1xuZnVuY3Rpb24gaXNQbGFpbk9iamVjdCh2YWx1ZSkge1xuXHRyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gXCJbb2JqZWN0IE9iamVjdF1cIjtcbn1cbmNvbnN0IENIVU5LX1ZBTFVFX1RZUEVfUFJPTUlTRSA9IDA7XG5jb25zdCBDSFVOS19WQUxVRV9UWVBFX0FTWU5DX0lURVJBQkxFID0gMTtcbmNvbnN0IFBST01JU0VfU1RBVFVTX0ZVTEZJTExFRCA9IDA7XG5jb25zdCBQUk9NSVNFX1NUQVRVU19SRUpFQ1RFRCA9IDE7XG5jb25zdCBBU1lOQ19JVEVSQUJMRV9TVEFUVVNfUkVUVVJOID0gMDtcbmNvbnN0IEFTWU5DX0lURVJBQkxFX1NUQVRVU19ZSUVMRCA9IDE7XG5jb25zdCBBU1lOQ19JVEVSQUJMRV9TVEFUVVNfRVJST1IgPSAyO1xuZnVuY3Rpb24gaXNQcm9taXNlKHZhbHVlKSB7XG5cdHJldHVybiAoaXNPYmplY3QodmFsdWUpIHx8IGlzRnVuY3Rpb24odmFsdWUpKSAmJiB0eXBlb2YgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2YWx1ZVtcInRoZW5cIl0pID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdmFsdWVbXCJjYXRjaFwiXSkgPT09IFwiZnVuY3Rpb25cIjtcbn1cbnZhciBNYXhEZXB0aEVycm9yID0gY2xhc3MgZXh0ZW5kcyBFcnJvciB7XG5cdGNvbnN0cnVjdG9yKHBhdGgpIHtcblx0XHRzdXBlcihcIk1heCBkZXB0aCByZWFjaGVkIGF0IHBhdGg6IFwiICsgcGF0aC5qb2luKFwiLlwiKSk7XG5cdFx0dGhpcy5wYXRoID0gcGF0aDtcblx0fVxufTtcbmZ1bmN0aW9uIGNyZWF0ZUJhdGNoU3RyZWFtUHJvZHVjZXIoX3gzKSB7XG5cdHJldHVybiBfY3JlYXRlQmF0Y2hTdHJlYW1Qcm9kdWNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuZnVuY3Rpb24gX2NyZWF0ZUJhdGNoU3RyZWFtUHJvZHVjZXIoKSB7XG5cdF9jcmVhdGVCYXRjaFN0cmVhbVByb2R1Y2VyID0gKDAsIGltcG9ydF93cmFwQXN5bmNHZW5lcmF0b3IkMi5kZWZhdWx0KShmdW5jdGlvbiogKG9wdHMpIHtcblx0XHRjb25zdCB7IGRhdGEgfSA9IG9wdHM7XG5cdFx0bGV0IGNvdW50ZXIgPSAwO1xuXHRcdGNvbnN0IHBsYWNlaG9sZGVyID0gMDtcblx0XHRjb25zdCBtZXJnZWRJdGVyYWJsZXMgPSBtZXJnZUFzeW5jSXRlcmFibGVzKCk7XG5cdFx0ZnVuY3Rpb24gcmVnaXN0ZXJBc3luYyhjYWxsYmFjaykge1xuXHRcdFx0Y29uc3QgaWR4ID0gY291bnRlcisrO1xuXHRcdFx0Y29uc3QgaXRlcmFibGUkMSA9IGNhbGxiYWNrKGlkeCk7XG5cdFx0XHRtZXJnZWRJdGVyYWJsZXMuYWRkKGl0ZXJhYmxlJDEpO1xuXHRcdFx0cmV0dXJuIGlkeDtcblx0XHR9XG5cdFx0ZnVuY3Rpb24gZW5jb2RlUHJvbWlzZShwcm9taXNlLCBwYXRoKSB7XG5cdFx0XHRyZXR1cm4gcmVnaXN0ZXJBc3luYygvKiBAX19QVVJFX18gKi8gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBfcmVmID0gKDAsIGltcG9ydF93cmFwQXN5bmNHZW5lcmF0b3IkMi5kZWZhdWx0KShmdW5jdGlvbiogKGlkeCkge1xuXHRcdFx0XHRcdGNvbnN0IGVycm9yID0gY2hlY2tNYXhEZXB0aChwYXRoKTtcblx0XHRcdFx0XHRpZiAoZXJyb3IpIHtcblx0XHRcdFx0XHRcdHByb21pc2UuY2F0Y2goKGNhdXNlKSA9PiB7XG5cdFx0XHRcdFx0XHRcdHZhciBfb3B0cyRvbkVycm9yO1xuXHRcdFx0XHRcdFx0XHQoX29wdHMkb25FcnJvciA9IG9wdHMub25FcnJvcikgPT09IG51bGwgfHwgX29wdHMkb25FcnJvciA9PT0gdm9pZCAwIHx8IF9vcHRzJG9uRXJyb3IuY2FsbChvcHRzLCB7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGNhdXNlLFxuXHRcdFx0XHRcdFx0XHRcdHBhdGhcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdHByb21pc2UgPSBQcm9taXNlLnJlamVjdChlcnJvcik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRjb25zdCBuZXh0ID0geWllbGQgKDAsIGltcG9ydF9hd2FpdEFzeW5jR2VuZXJhdG9yJDEuZGVmYXVsdCkocHJvbWlzZSk7XG5cdFx0XHRcdFx0XHR5aWVsZCBbXG5cdFx0XHRcdFx0XHRcdGlkeCxcblx0XHRcdFx0XHRcdFx0UFJPTUlTRV9TVEFUVVNfRlVMRklMTEVELFxuXHRcdFx0XHRcdFx0XHRlbmNvZGUobmV4dCwgcGF0aClcblx0XHRcdFx0XHRcdF07XG5cdFx0XHRcdFx0fSBjYXRjaCAoY2F1c2UpIHtcblx0XHRcdFx0XHRcdHZhciBfb3B0cyRvbkVycm9yMiwgX29wdHMkZm9ybWF0RXJyb3I7XG5cdFx0XHRcdFx0XHQoX29wdHMkb25FcnJvcjIgPSBvcHRzLm9uRXJyb3IpID09PSBudWxsIHx8IF9vcHRzJG9uRXJyb3IyID09PSB2b2lkIDAgfHwgX29wdHMkb25FcnJvcjIuY2FsbChvcHRzLCB7XG5cdFx0XHRcdFx0XHRcdGVycm9yOiBjYXVzZSxcblx0XHRcdFx0XHRcdFx0cGF0aFxuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHR5aWVsZCBbXG5cdFx0XHRcdFx0XHRcdGlkeCxcblx0XHRcdFx0XHRcdFx0UFJPTUlTRV9TVEFUVVNfUkVKRUNURUQsXG5cdFx0XHRcdFx0XHRcdChfb3B0cyRmb3JtYXRFcnJvciA9IG9wdHMuZm9ybWF0RXJyb3IpID09PSBudWxsIHx8IF9vcHRzJGZvcm1hdEVycm9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfb3B0cyRmb3JtYXRFcnJvci5jYWxsKG9wdHMsIHtcblx0XHRcdFx0XHRcdFx0XHRlcnJvcjogY2F1c2UsXG5cdFx0XHRcdFx0XHRcdFx0cGF0aFxuXHRcdFx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdFx0XTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oX3gpIHtcblx0XHRcdFx0XHRyZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdFx0XHR9O1xuXHRcdFx0fSgpKTtcblx0XHR9XG5cdFx0ZnVuY3Rpb24gZW5jb2RlQXN5bmNJdGVyYWJsZShpdGVyYWJsZSQxLCBwYXRoKSB7XG5cdFx0XHRyZXR1cm4gcmVnaXN0ZXJBc3luYygvKiBAX19QVVJFX18gKi8gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBfcmVmMiA9ICgwLCBpbXBvcnRfd3JhcEFzeW5jR2VuZXJhdG9yJDIuZGVmYXVsdCkoZnVuY3Rpb24qIChpZHgpIHtcblx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0dmFyIF91c2luZ0N0eCQxID0gKDAsIGltcG9ydF91c2luZ0N0eCQxLmRlZmF1bHQpKCk7XG5cdFx0XHRcdFx0XHRjb25zdCBlcnJvciA9IGNoZWNrTWF4RGVwdGgocGF0aCk7XG5cdFx0XHRcdFx0XHRpZiAoZXJyb3IpIHRocm93IGVycm9yO1xuXHRcdFx0XHRcdFx0Y29uc3QgaXRlcmF0b3IgPSBfdXNpbmdDdHgkMS5hKGl0ZXJhdG9yUmVzb3VyY2UoaXRlcmFibGUkMSkpO1xuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKHRydWUpIHtcblx0XHRcdFx0XHRcdFx0XHRjb25zdCBuZXh0ID0geWllbGQgKDAsIGltcG9ydF9hd2FpdEFzeW5jR2VuZXJhdG9yJDEuZGVmYXVsdCkoaXRlcmF0b3IubmV4dCgpKTtcblx0XHRcdFx0XHRcdFx0XHRpZiAobmV4dC5kb25lKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR5aWVsZCBbXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlkeCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0QVNZTkNfSVRFUkFCTEVfU1RBVFVTX1JFVFVSTixcblx0XHRcdFx0XHRcdFx0XHRcdFx0ZW5jb2RlKG5leHQudmFsdWUsIHBhdGgpXG5cdFx0XHRcdFx0XHRcdFx0XHRdO1xuXHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdHlpZWxkIFtcblx0XHRcdFx0XHRcdFx0XHRcdGlkeCxcblx0XHRcdFx0XHRcdFx0XHRcdEFTWU5DX0lURVJBQkxFX1NUQVRVU19ZSUVMRCxcblx0XHRcdFx0XHRcdFx0XHRcdGVuY29kZShuZXh0LnZhbHVlLCBwYXRoKVxuXHRcdFx0XHRcdFx0XHRcdF07XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gY2F0Y2ggKGNhdXNlKSB7XG5cdFx0XHRcdFx0XHRcdHZhciBfb3B0cyRvbkVycm9yMywgX29wdHMkZm9ybWF0RXJyb3IyO1xuXHRcdFx0XHRcdFx0XHQoX29wdHMkb25FcnJvcjMgPSBvcHRzLm9uRXJyb3IpID09PSBudWxsIHx8IF9vcHRzJG9uRXJyb3IzID09PSB2b2lkIDAgfHwgX29wdHMkb25FcnJvcjMuY2FsbChvcHRzLCB7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGNhdXNlLFxuXHRcdFx0XHRcdFx0XHRcdHBhdGhcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdHlpZWxkIFtcblx0XHRcdFx0XHRcdFx0XHRpZHgsXG5cdFx0XHRcdFx0XHRcdFx0QVNZTkNfSVRFUkFCTEVfU1RBVFVTX0VSUk9SLFxuXHRcdFx0XHRcdFx0XHRcdChfb3B0cyRmb3JtYXRFcnJvcjIgPSBvcHRzLmZvcm1hdEVycm9yKSA9PT0gbnVsbCB8fCBfb3B0cyRmb3JtYXRFcnJvcjIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9vcHRzJGZvcm1hdEVycm9yMi5jYWxsKG9wdHMsIHtcblx0XHRcdFx0XHRcdFx0XHRcdGVycm9yOiBjYXVzZSxcblx0XHRcdFx0XHRcdFx0XHRcdHBhdGhcblx0XHRcdFx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdFx0XHRdO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gY2F0Y2ggKF8pIHtcblx0XHRcdFx0XHRcdF91c2luZ0N0eCQxLmUgPSBfO1xuXHRcdFx0XHRcdH0gZmluYWxseSB7XG5cdFx0XHRcdFx0XHR5aWVsZCAoMCwgaW1wb3J0X2F3YWl0QXN5bmNHZW5lcmF0b3IkMS5kZWZhdWx0KShfdXNpbmdDdHgkMS5kKCkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cdFx0XHRcdHJldHVybiBmdW5jdGlvbihfeDIpIHtcblx0XHRcdFx0XHRyZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRcdFx0fTtcblx0XHRcdH0oKSk7XG5cdFx0fVxuXHRcdGZ1bmN0aW9uIGNoZWNrTWF4RGVwdGgocGF0aCkge1xuXHRcdFx0aWYgKG9wdHMubWF4RGVwdGggJiYgcGF0aC5sZW5ndGggPiBvcHRzLm1heERlcHRoKSByZXR1cm4gbmV3IE1heERlcHRoRXJyb3IocGF0aCk7XG5cdFx0XHRyZXR1cm4gbnVsbDtcblx0XHR9XG5cdFx0ZnVuY3Rpb24gZW5jb2RlQXN5bmModmFsdWUsIHBhdGgpIHtcblx0XHRcdGlmIChpc1Byb21pc2UodmFsdWUpKSByZXR1cm4gW0NIVU5LX1ZBTFVFX1RZUEVfUFJPTUlTRSwgZW5jb2RlUHJvbWlzZSh2YWx1ZSwgcGF0aCldO1xuXHRcdFx0aWYgKGlzQXN5bmNJdGVyYWJsZSh2YWx1ZSkpIHtcblx0XHRcdFx0aWYgKG9wdHMubWF4RGVwdGggJiYgcGF0aC5sZW5ndGggPj0gb3B0cy5tYXhEZXB0aCkgdGhyb3cgbmV3IEVycm9yKFwiTWF4IGRlcHRoIHJlYWNoZWRcIik7XG5cdFx0XHRcdHJldHVybiBbQ0hVTktfVkFMVUVfVFlQRV9BU1lOQ19JVEVSQUJMRSwgZW5jb2RlQXN5bmNJdGVyYWJsZSh2YWx1ZSwgcGF0aCldO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fVxuXHRcdGZ1bmN0aW9uIGVuY29kZSh2YWx1ZSwgcGF0aCkge1xuXHRcdFx0aWYgKHZhbHVlID09PSB2b2lkIDApIHJldHVybiBbW11dO1xuXHRcdFx0Y29uc3QgcmVnID0gZW5jb2RlQXN5bmModmFsdWUsIHBhdGgpO1xuXHRcdFx0aWYgKHJlZykgcmV0dXJuIFtbcGxhY2Vob2xkZXJdLCBbbnVsbCwgLi4ucmVnXV07XG5cdFx0XHRpZiAoIWlzUGxhaW5PYmplY3QodmFsdWUpKSByZXR1cm4gW1t2YWx1ZV1dO1xuXHRcdFx0Y29uc3QgbmV3T2JqID0ge307XG5cdFx0XHRjb25zdCBhc3luY1ZhbHVlcyA9IFtdO1xuXHRcdFx0Zm9yIChjb25zdCBba2V5LCBpdGVtXSBvZiBPYmplY3QuZW50cmllcyh2YWx1ZSkpIHtcblx0XHRcdFx0Y29uc3QgdHJhbnNmb3JtZWQgPSBlbmNvZGVBc3luYyhpdGVtLCBbLi4ucGF0aCwga2V5XSk7XG5cdFx0XHRcdGlmICghdHJhbnNmb3JtZWQpIHtcblx0XHRcdFx0XHRuZXdPYmpba2V5XSA9IGl0ZW07XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblx0XHRcdFx0bmV3T2JqW2tleV0gPSBwbGFjZWhvbGRlcjtcblx0XHRcdFx0YXN5bmNWYWx1ZXMucHVzaChba2V5LCAuLi50cmFuc2Zvcm1lZF0pO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIFtbbmV3T2JqXSwgLi4uYXN5bmNWYWx1ZXNdO1xuXHRcdH1cblx0XHRjb25zdCBuZXdIZWFkID0ge307XG5cdFx0Zm9yIChjb25zdCBba2V5LCBpdGVtXSBvZiBPYmplY3QuZW50cmllcyhkYXRhKSkgbmV3SGVhZFtrZXldID0gZW5jb2RlKGl0ZW0sIFtrZXldKTtcblx0XHR5aWVsZCBuZXdIZWFkO1xuXHRcdGxldCBpdGVyYWJsZSA9IG1lcmdlZEl0ZXJhYmxlcztcblx0XHRpZiAob3B0cy5waW5nTXMpIGl0ZXJhYmxlID0gd2l0aFBpbmcobWVyZ2VkSXRlcmFibGVzLCBvcHRzLnBpbmdNcyk7XG5cdFx0dmFyIF9pdGVyYXRvckFicnVwdENvbXBsZXRpb24gPSBmYWxzZTtcblx0XHR2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTtcblx0XHR2YXIgX2l0ZXJhdG9yRXJyb3I7XG5cdFx0dHJ5IHtcblx0XHRcdGZvciAodmFyIF9pdGVyYXRvciA9ICgwLCBpbXBvcnRfYXN5bmNJdGVyYXRvciQxLmRlZmF1bHQpKGl0ZXJhYmxlKSwgX3N0ZXA7IF9pdGVyYXRvckFicnVwdENvbXBsZXRpb24gPSAhKF9zdGVwID0geWllbGQgKDAsIGltcG9ydF9hd2FpdEFzeW5jR2VuZXJhdG9yJDEuZGVmYXVsdCkoX2l0ZXJhdG9yLm5leHQoKSkpLmRvbmU7IF9pdGVyYXRvckFicnVwdENvbXBsZXRpb24gPSBmYWxzZSkge1xuXHRcdFx0XHRjb25zdCB2YWx1ZSA9IF9zdGVwLnZhbHVlO1xuXHRcdFx0XHR5aWVsZCB2YWx1ZTtcblx0XHRcdH1cblx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTtcblx0XHRcdF9pdGVyYXRvckVycm9yID0gZXJyO1xuXHRcdH0gZmluYWxseSB7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHRpZiAoX2l0ZXJhdG9yQWJydXB0Q29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuICE9IG51bGwpIHlpZWxkICgwLCBpbXBvcnRfYXdhaXRBc3luY0dlbmVyYXRvciQxLmRlZmF1bHQpKF9pdGVyYXRvci5yZXR1cm4oKSk7XG5cdFx0XHR9IGZpbmFsbHkge1xuXHRcdFx0XHRpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHRocm93IF9pdGVyYXRvckVycm9yO1xuXHRcdFx0fVxuXHRcdH1cblx0fSk7XG5cdHJldHVybiBfY3JlYXRlQmF0Y2hTdHJlYW1Qcm9kdWNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuLyoqXG4qIEpTT04gTGluZXMgc3RyZWFtIHByb2R1Y2VyXG4qIEBzZWUgaHR0cHM6Ly9qc29ubGluZXMub3JnL1xuKi9cbmZ1bmN0aW9uIGpzb25sU3RyZWFtUHJvZHVjZXIob3B0cykge1xuXHRsZXQgc3RyZWFtID0gcmVhZGFibGVTdHJlYW1Gcm9tKGNyZWF0ZUJhdGNoU3RyZWFtUHJvZHVjZXIob3B0cykpO1xuXHRjb25zdCB7IHNlcmlhbGl6ZSB9ID0gb3B0cztcblx0aWYgKHNlcmlhbGl6ZSkgc3RyZWFtID0gc3RyZWFtLnBpcGVUaHJvdWdoKG5ldyBUcmFuc2Zvcm1TdHJlYW0oeyB0cmFuc2Zvcm0oY2h1bmssIGNvbnRyb2xsZXIpIHtcblx0XHRpZiAoY2h1bmsgPT09IFBJTkdfU1lNKSBjb250cm9sbGVyLmVucXVldWUoUElOR19TWU0pO1xuXHRcdGVsc2UgY29udHJvbGxlci5lbnF1ZXVlKHNlcmlhbGl6ZShjaHVuaykpO1xuXHR9IH0pKTtcblx0cmV0dXJuIHN0cmVhbS5waXBlVGhyb3VnaChuZXcgVHJhbnNmb3JtU3RyZWFtKHsgdHJhbnNmb3JtKGNodW5rLCBjb250cm9sbGVyKSB7XG5cdFx0aWYgKGNodW5rID09PSBQSU5HX1NZTSkgY29udHJvbGxlci5lbnF1ZXVlKFwiIFwiKTtcblx0XHRlbHNlIGNvbnRyb2xsZXIuZW5xdWV1ZShKU09OLnN0cmluZ2lmeShjaHVuaykgKyBcIlxcblwiKTtcblx0fSB9KSkucGlwZVRocm91Z2gobmV3IFRleHRFbmNvZGVyU3RyZWFtKCkpO1xufVxudmFyIEFzeW5jRXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcblx0Y29uc3RydWN0b3IoZGF0YSkge1xuXHRcdHN1cGVyKFwiUmVjZWl2ZWQgZXJyb3IgZnJvbSBzZXJ2ZXJcIik7XG5cdFx0dGhpcy5kYXRhID0gZGF0YTtcblx0fVxufTtcbmNvbnN0IG5vZGVKc1N0cmVhbVRvUmVhZGVyRXNxdWUgPSAoc291cmNlKSA9PiB7XG5cdHJldHVybiB7IGdldFJlYWRlcigpIHtcblx0XHRjb25zdCBzdHJlYW0gPSBuZXcgUmVhZGFibGVTdHJlYW0oeyBzdGFydChjb250cm9sbGVyKSB7XG5cdFx0XHRzb3VyY2Uub24oXCJkYXRhXCIsIChjaHVuaykgPT4ge1xuXHRcdFx0XHRjb250cm9sbGVyLmVucXVldWUoY2h1bmspO1xuXHRcdFx0fSk7XG5cdFx0XHRzb3VyY2Uub24oXCJlbmRcIiwgKCkgPT4ge1xuXHRcdFx0XHRjb250cm9sbGVyLmNsb3NlKCk7XG5cdFx0XHR9KTtcblx0XHRcdHNvdXJjZS5vbihcImVycm9yXCIsIChlcnJvcikgPT4ge1xuXHRcdFx0XHRjb250cm9sbGVyLmVycm9yKGVycm9yKTtcblx0XHRcdH0pO1xuXHRcdH0gfSk7XG5cdFx0cmV0dXJuIHN0cmVhbS5nZXRSZWFkZXIoKTtcblx0fSB9O1xufTtcbmZ1bmN0aW9uIGNyZWF0ZUxpbmVBY2N1bXVsYXRvcihmcm9tKSB7XG5cdGNvbnN0IHJlYWRlciA9IFwiZ2V0UmVhZGVyXCIgaW4gZnJvbSA/IGZyb20uZ2V0UmVhZGVyKCkgOiBub2RlSnNTdHJlYW1Ub1JlYWRlckVzcXVlKGZyb20pLmdldFJlYWRlcigpO1xuXHRsZXQgbGluZUFnZ3JlZ2F0ZSA9IFwiXCI7XG5cdHJldHVybiBuZXcgUmVhZGFibGVTdHJlYW0oe1xuXHRcdGFzeW5jIHB1bGwoY29udHJvbGxlcikge1xuXHRcdFx0Y29uc3QgeyBkb25lLCB2YWx1ZSB9ID0gYXdhaXQgcmVhZGVyLnJlYWQoKTtcblx0XHRcdGlmIChkb25lKSBjb250cm9sbGVyLmNsb3NlKCk7XG5cdFx0XHRlbHNlIGNvbnRyb2xsZXIuZW5xdWV1ZSh2YWx1ZSk7XG5cdFx0fSxcblx0XHRjYW5jZWwoKSB7XG5cdFx0XHRyZXR1cm4gcmVhZGVyLmNhbmNlbCgpO1xuXHRcdH1cblx0fSkucGlwZVRocm91Z2gobmV3IFRleHREZWNvZGVyU3RyZWFtKCkpLnBpcGVUaHJvdWdoKG5ldyBUcmFuc2Zvcm1TdHJlYW0oeyB0cmFuc2Zvcm0oY2h1bmssIGNvbnRyb2xsZXIpIHtcblx0XHR2YXIgX3BhcnRzJHBvcDtcblx0XHRsaW5lQWdncmVnYXRlICs9IGNodW5rO1xuXHRcdGNvbnN0IHBhcnRzID0gbGluZUFnZ3JlZ2F0ZS5zcGxpdChcIlxcblwiKTtcblx0XHRsaW5lQWdncmVnYXRlID0gKF9wYXJ0cyRwb3AgPSBwYXJ0cy5wb3AoKSkgIT09IG51bGwgJiYgX3BhcnRzJHBvcCAhPT0gdm9pZCAwID8gX3BhcnRzJHBvcCA6IFwiXCI7XG5cdFx0Zm9yIChjb25zdCBwYXJ0IG9mIHBhcnRzKSBjb250cm9sbGVyLmVucXVldWUocGFydCk7XG5cdH0gfSkpO1xufVxuZnVuY3Rpb24gY3JlYXRlQ29uc3VtZXJTdHJlYW0oZnJvbSkge1xuXHRjb25zdCBzdHJlYW0gPSBjcmVhdGVMaW5lQWNjdW11bGF0b3IoZnJvbSk7XG5cdGxldCBzZW50SGVhZCA9IGZhbHNlO1xuXHRyZXR1cm4gc3RyZWFtLnBpcGVUaHJvdWdoKG5ldyBUcmFuc2Zvcm1TdHJlYW0oeyB0cmFuc2Zvcm0obGluZSwgY29udHJvbGxlcikge1xuXHRcdGlmICghc2VudEhlYWQpIHtcblx0XHRcdGNvbnN0IGhlYWQgPSBKU09OLnBhcnNlKGxpbmUpO1xuXHRcdFx0Y29udHJvbGxlci5lbnF1ZXVlKGhlYWQpO1xuXHRcdFx0c2VudEhlYWQgPSB0cnVlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRjb25zdCBjaHVuayA9IEpTT04ucGFyc2UobGluZSk7XG5cdFx0XHRjb250cm9sbGVyLmVucXVldWUoY2h1bmspO1xuXHRcdH1cblx0fSB9KSk7XG59XG4vKipcbiogQ3JlYXRlcyBhIGhhbmRsZXIgZm9yIG1hbmFnaW5nIHN0cmVhbSBjb250cm9sbGVycyBhbmQgdGhlaXIgbGlmZWN5Y2xlXG4qL1xuZnVuY3Rpb24gY3JlYXRlU3RyZWFtc01hbmFnZXIoYWJvcnRDb250cm9sbGVyKSB7XG5cdGNvbnN0IGNvbnRyb2xsZXJNYXAgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuXHQvKipcblx0KiBDaGVja3MgaWYgdGhlcmUgYXJlIG5vIHBlbmRpbmcgY29udHJvbGxlcnMgb3IgZGVmZXJyZWQgcHJvbWlzZXNcblx0Ki9cblx0ZnVuY3Rpb24gaXNFbXB0eSgpIHtcblx0XHRyZXR1cm4gQXJyYXkuZnJvbShjb250cm9sbGVyTWFwLnZhbHVlcygpKS5ldmVyeSgoYykgPT4gYy5jbG9zZWQpO1xuXHR9XG5cdC8qKlxuXHQqIENyZWF0ZXMgYSBzdHJlYW0gY29udHJvbGxlclxuXHQqL1xuXHRmdW5jdGlvbiBjcmVhdGVTdHJlYW1Db250cm9sbGVyKCkge1xuXHRcdGxldCBvcmlnaW5hbENvbnRyb2xsZXI7XG5cdFx0Y29uc3Qgc3RyZWFtID0gbmV3IFJlYWRhYmxlU3RyZWFtKHsgc3RhcnQoY29udHJvbGxlcikge1xuXHRcdFx0b3JpZ2luYWxDb250cm9sbGVyID0gY29udHJvbGxlcjtcblx0XHR9IH0pO1xuXHRcdGNvbnN0IHN0cmVhbUNvbnRyb2xsZXIgPSB7XG5cdFx0XHRlbnF1ZXVlOiAodikgPT4gb3JpZ2luYWxDb250cm9sbGVyLmVucXVldWUodiksXG5cdFx0XHRjbG9zZTogKCkgPT4ge1xuXHRcdFx0XHRvcmlnaW5hbENvbnRyb2xsZXIuY2xvc2UoKTtcblx0XHRcdFx0Y2xlYXIoKTtcblx0XHRcdFx0aWYgKGlzRW1wdHkoKSkgYWJvcnRDb250cm9sbGVyLmFib3J0KCk7XG5cdFx0XHR9LFxuXHRcdFx0Y2xvc2VkOiBmYWxzZSxcblx0XHRcdGdldFJlYWRlclJlc291cmNlOiAoKSA9PiB7XG5cdFx0XHRcdGNvbnN0IHJlYWRlciA9IHN0cmVhbS5nZXRSZWFkZXIoKTtcblx0XHRcdFx0cmV0dXJuIG1ha2VSZXNvdXJjZShyZWFkZXIsICgpID0+IHtcblx0XHRcdFx0XHRyZWFkZXIucmVsZWFzZUxvY2soKTtcblx0XHRcdFx0XHRzdHJlYW1Db250cm9sbGVyLmNsb3NlKCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSxcblx0XHRcdGVycm9yOiAocmVhc29uKSA9PiB7XG5cdFx0XHRcdG9yaWdpbmFsQ29udHJvbGxlci5lcnJvcihyZWFzb24pO1xuXHRcdFx0XHRjbGVhcigpO1xuXHRcdFx0fVxuXHRcdH07XG5cdFx0ZnVuY3Rpb24gY2xlYXIoKSB7XG5cdFx0XHRPYmplY3QuYXNzaWduKHN0cmVhbUNvbnRyb2xsZXIsIHtcblx0XHRcdFx0Y2xvc2VkOiB0cnVlLFxuXHRcdFx0XHRjbG9zZTogKCkgPT4ge30sXG5cdFx0XHRcdGVucXVldWU6ICgpID0+IHt9LFxuXHRcdFx0XHRnZXRSZWFkZXJSZXNvdXJjZTogbnVsbCxcblx0XHRcdFx0ZXJyb3I6ICgpID0+IHt9XG5cdFx0XHR9KTtcblx0XHR9XG5cdFx0cmV0dXJuIHN0cmVhbUNvbnRyb2xsZXI7XG5cdH1cblx0LyoqXG5cdCogR2V0cyBvciBjcmVhdGVzIGEgc3RyZWFtIGNvbnRyb2xsZXJcblx0Ki9cblx0ZnVuY3Rpb24gZ2V0T3JDcmVhdGUoY2h1bmtJZCkge1xuXHRcdGxldCBjID0gY29udHJvbGxlck1hcC5nZXQoY2h1bmtJZCk7XG5cdFx0aWYgKCFjKSB7XG5cdFx0XHRjID0gY3JlYXRlU3RyZWFtQ29udHJvbGxlcigpO1xuXHRcdFx0Y29udHJvbGxlck1hcC5zZXQoY2h1bmtJZCwgYyk7XG5cdFx0fVxuXHRcdHJldHVybiBjO1xuXHR9XG5cdC8qKlxuXHQqIENhbmNlbHMgYWxsIHBlbmRpbmcgY29udHJvbGxlcnMgYW5kIHJlamVjdHMgZGVmZXJyZWQgcHJvbWlzZXNcblx0Ki9cblx0ZnVuY3Rpb24gY2FuY2VsQWxsKHJlYXNvbikge1xuXHRcdGZvciAoY29uc3QgY29udHJvbGxlciBvZiBjb250cm9sbGVyTWFwLnZhbHVlcygpKSBjb250cm9sbGVyLmVycm9yKHJlYXNvbik7XG5cdH1cblx0cmV0dXJuIHtcblx0XHRnZXRPckNyZWF0ZSxcblx0XHRpc0VtcHR5LFxuXHRcdGNhbmNlbEFsbFxuXHR9O1xufVxuLyoqXG4qIEpTT04gTGluZXMgc3RyZWFtIGNvbnN1bWVyXG4qIEBzZWUgaHR0cHM6Ly9qc29ubGluZXMub3JnL1xuKi9cbmFzeW5jIGZ1bmN0aW9uIGpzb25sU3RyZWFtQ29uc3VtZXIob3B0cykge1xuXHRjb25zdCB7IGRlc2VyaWFsaXplID0gKHYpID0+IHYgfSA9IG9wdHM7XG5cdGxldCBzb3VyY2UgPSBjcmVhdGVDb25zdW1lclN0cmVhbShvcHRzLmZyb20pO1xuXHRpZiAoZGVzZXJpYWxpemUpIHNvdXJjZSA9IHNvdXJjZS5waXBlVGhyb3VnaChuZXcgVHJhbnNmb3JtU3RyZWFtKHsgdHJhbnNmb3JtKGNodW5rLCBjb250cm9sbGVyKSB7XG5cdFx0Y29udHJvbGxlci5lbnF1ZXVlKGRlc2VyaWFsaXplKGNodW5rKSk7XG5cdH0gfSkpO1xuXHRsZXQgaGVhZERlZmVycmVkID0gY3JlYXRlRGVmZXJyZWQoKTtcblx0Y29uc3Qgc3RyZWFtTWFuYWdlciA9IGNyZWF0ZVN0cmVhbXNNYW5hZ2VyKG9wdHMuYWJvcnRDb250cm9sbGVyKTtcblx0ZnVuY3Rpb24gZGVjb2RlQ2h1bmtEZWZpbml0aW9uKHZhbHVlKSB7XG5cdFx0Y29uc3QgW19wYXRoLCB0eXBlLCBjaHVua0lkXSA9IHZhbHVlO1xuXHRcdGNvbnN0IGNvbnRyb2xsZXIgPSBzdHJlYW1NYW5hZ2VyLmdldE9yQ3JlYXRlKGNodW5rSWQpO1xuXHRcdHN3aXRjaCAodHlwZSkge1xuXHRcdFx0Y2FzZSBDSFVOS19WQUxVRV9UWVBFX1BST01JU0U6IHJldHVybiBydW4oYXN5bmMgKCkgPT4ge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdHZhciBfdXNpbmdDdHgzID0gKDAsIGltcG9ydF91c2luZ0N0eCQxLmRlZmF1bHQpKCk7XG5cdFx0XHRcdFx0Y29uc3QgcmVhZGVyID0gX3VzaW5nQ3R4My51KGNvbnRyb2xsZXIuZ2V0UmVhZGVyUmVzb3VyY2UoKSk7XG5cdFx0XHRcdFx0Y29uc3QgeyB2YWx1ZTogdmFsdWUkMSB9ID0gYXdhaXQgcmVhZGVyLnJlYWQoKTtcblx0XHRcdFx0XHRjb25zdCBbX2NodW5rSWQsIHN0YXR1cywgZGF0YV0gPSB2YWx1ZSQxO1xuXHRcdFx0XHRcdHN3aXRjaCAoc3RhdHVzKSB7XG5cdFx0XHRcdFx0XHRjYXNlIFBST01JU0VfU1RBVFVTX0ZVTEZJTExFRDogcmV0dXJuIGRlY29kZShkYXRhKTtcblx0XHRcdFx0XHRcdGNhc2UgUFJPTUlTRV9TVEFUVVNfUkVKRUNURUQ6XG5cdFx0XHRcdFx0XHRcdHZhciBfb3B0cyRmb3JtYXRFcnJvcjMsIF9vcHRzJGZvcm1hdEVycm9yNDtcblx0XHRcdFx0XHRcdFx0dGhyb3cgKF9vcHRzJGZvcm1hdEVycm9yMyA9IChfb3B0cyRmb3JtYXRFcnJvcjQgPSBvcHRzLmZvcm1hdEVycm9yKSA9PT0gbnVsbCB8fCBfb3B0cyRmb3JtYXRFcnJvcjQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9vcHRzJGZvcm1hdEVycm9yNC5jYWxsKG9wdHMsIHsgZXJyb3I6IGRhdGEgfSkpICE9PSBudWxsICYmIF9vcHRzJGZvcm1hdEVycm9yMyAhPT0gdm9pZCAwID8gX29wdHMkZm9ybWF0RXJyb3IzIDogbmV3IEFzeW5jRXJyb3IoZGF0YSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGNhdGNoIChfKSB7XG5cdFx0XHRcdFx0X3VzaW5nQ3R4My5lID0gXztcblx0XHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0XHRfdXNpbmdDdHgzLmQoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0XHRjYXNlIENIVU5LX1ZBTFVFX1RZUEVfQVNZTkNfSVRFUkFCTEU6IHJldHVybiBydW4oKDAsIGltcG9ydF93cmFwQXN5bmNHZW5lcmF0b3IkMi5kZWZhdWx0KShmdW5jdGlvbiogKCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdHZhciBfdXNpbmdDdHg0ID0gKDAsIGltcG9ydF91c2luZ0N0eCQxLmRlZmF1bHQpKCk7XG5cdFx0XHRcdFx0Y29uc3QgcmVhZGVyID0gX3VzaW5nQ3R4NC51KGNvbnRyb2xsZXIuZ2V0UmVhZGVyUmVzb3VyY2UoKSk7XG5cdFx0XHRcdFx0d2hpbGUgKHRydWUpIHtcblx0XHRcdFx0XHRcdGNvbnN0IHsgdmFsdWU6IHZhbHVlJDEgfSA9IHlpZWxkICgwLCBpbXBvcnRfYXdhaXRBc3luY0dlbmVyYXRvciQxLmRlZmF1bHQpKHJlYWRlci5yZWFkKCkpO1xuXHRcdFx0XHRcdFx0Y29uc3QgW19jaHVua0lkLCBzdGF0dXMsIGRhdGFdID0gdmFsdWUkMTtcblx0XHRcdFx0XHRcdHN3aXRjaCAoc3RhdHVzKSB7XG5cdFx0XHRcdFx0XHRcdGNhc2UgQVNZTkNfSVRFUkFCTEVfU1RBVFVTX1lJRUxEOlxuXHRcdFx0XHRcdFx0XHRcdHlpZWxkIGRlY29kZShkYXRhKTtcblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0Y2FzZSBBU1lOQ19JVEVSQUJMRV9TVEFUVVNfUkVUVVJOOiByZXR1cm4gZGVjb2RlKGRhdGEpO1xuXHRcdFx0XHRcdFx0XHRjYXNlIEFTWU5DX0lURVJBQkxFX1NUQVRVU19FUlJPUjpcblx0XHRcdFx0XHRcdFx0XHR2YXIgX29wdHMkZm9ybWF0RXJyb3I1LCBfb3B0cyRmb3JtYXRFcnJvcjY7XG5cdFx0XHRcdFx0XHRcdFx0dGhyb3cgKF9vcHRzJGZvcm1hdEVycm9yNSA9IChfb3B0cyRmb3JtYXRFcnJvcjYgPSBvcHRzLmZvcm1hdEVycm9yKSA9PT0gbnVsbCB8fCBfb3B0cyRmb3JtYXRFcnJvcjYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9vcHRzJGZvcm1hdEVycm9yNi5jYWxsKG9wdHMsIHsgZXJyb3I6IGRhdGEgfSkpICE9PSBudWxsICYmIF9vcHRzJGZvcm1hdEVycm9yNSAhPT0gdm9pZCAwID8gX29wdHMkZm9ybWF0RXJyb3I1IDogbmV3IEFzeW5jRXJyb3IoZGF0YSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGNhdGNoIChfKSB7XG5cdFx0XHRcdFx0X3VzaW5nQ3R4NC5lID0gXztcblx0XHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0XHRfdXNpbmdDdHg0LmQoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSkpO1xuXHRcdH1cblx0fVxuXHRmdW5jdGlvbiBkZWNvZGUodmFsdWUpIHtcblx0XHRjb25zdCBbW2RhdGFdLCAuLi5hc3luY1Byb3BzXSA9IHZhbHVlO1xuXHRcdGZvciAoY29uc3QgdmFsdWUkMSBvZiBhc3luY1Byb3BzKSB7XG5cdFx0XHRjb25zdCBba2V5XSA9IHZhbHVlJDE7XG5cdFx0XHRjb25zdCBkZWNvZGVkID0gZGVjb2RlQ2h1bmtEZWZpbml0aW9uKHZhbHVlJDEpO1xuXHRcdFx0aWYgKGtleSA9PT0gbnVsbCkgcmV0dXJuIGRlY29kZWQ7XG5cdFx0XHRkYXRhW2tleV0gPSBkZWNvZGVkO1xuXHRcdH1cblx0XHRyZXR1cm4gZGF0YTtcblx0fVxuXHRjb25zdCBjbG9zZU9yQWJvcnQgPSAocmVhc29uKSA9PiB7XG5cdFx0aGVhZERlZmVycmVkID09PSBudWxsIHx8IGhlYWREZWZlcnJlZCA9PT0gdm9pZCAwIHx8IGhlYWREZWZlcnJlZC5yZWplY3QocmVhc29uKTtcblx0XHRzdHJlYW1NYW5hZ2VyLmNhbmNlbEFsbChyZWFzb24pO1xuXHR9O1xuXHRzb3VyY2UucGlwZVRvKG5ldyBXcml0YWJsZVN0cmVhbSh7XG5cdFx0d3JpdGUoY2h1bmtPckhlYWQpIHtcblx0XHRcdGlmIChoZWFkRGVmZXJyZWQpIHtcblx0XHRcdFx0Y29uc3QgaGVhZCA9IGNodW5rT3JIZWFkO1xuXHRcdFx0XHRmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhjaHVua09ySGVhZCkpIHtcblx0XHRcdFx0XHRjb25zdCBwYXJzZWQgPSBkZWNvZGUodmFsdWUpO1xuXHRcdFx0XHRcdGhlYWRba2V5XSA9IHBhcnNlZDtcblx0XHRcdFx0fVxuXHRcdFx0XHRoZWFkRGVmZXJyZWQucmVzb2x2ZShoZWFkKTtcblx0XHRcdFx0aGVhZERlZmVycmVkID0gbnVsbDtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0Y29uc3QgY2h1bmsgPSBjaHVua09ySGVhZDtcblx0XHRcdGNvbnN0IFtpZHhdID0gY2h1bms7XG5cdFx0XHRjb25zdCBjb250cm9sbGVyID0gc3RyZWFtTWFuYWdlci5nZXRPckNyZWF0ZShpZHgpO1xuXHRcdFx0Y29udHJvbGxlci5lbnF1ZXVlKGNodW5rKTtcblx0XHR9LFxuXHRcdGNsb3NlOiAoKSA9PiBjbG9zZU9yQWJvcnQobmV3IEVycm9yKFwiU3RyZWFtIGNsb3NlZFwiKSksXG5cdFx0YWJvcnQ6IGNsb3NlT3JBYm9ydFxuXHR9KSwgeyBzaWduYWw6IG9wdHMuYWJvcnRDb250cm9sbGVyLnNpZ25hbCB9KS5jYXRjaCgoZXJyb3IpID0+IHtcblx0XHR2YXIgX29wdHMkb25FcnJvcjQ7XG5cdFx0KF9vcHRzJG9uRXJyb3I0ID0gb3B0cy5vbkVycm9yKSA9PT0gbnVsbCB8fCBfb3B0cyRvbkVycm9yNCA9PT0gdm9pZCAwIHx8IF9vcHRzJG9uRXJyb3I0LmNhbGwob3B0cywgeyBlcnJvciB9KTtcblx0XHRjbG9zZU9yQWJvcnQoZXJyb3IpO1xuXHR9KTtcblx0cmV0dXJuIFthd2FpdCBoZWFkRGVmZXJyZWQucHJvbWlzZSwgc3RyZWFtTWFuYWdlcl07XG59XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIC4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3hjLXByb2plY3QrcnVudGltZUAwLjcyLjIvbm9kZV9tb2R1bGVzL0BveGMtcHJvamVjdC9ydW50aW1lL3NyYy9oZWxwZXJzL2FzeW5jR2VuZXJhdG9yRGVsZWdhdGUuanNcbnZhciByZXF1aXJlX2FzeW5jR2VuZXJhdG9yRGVsZWdhdGUgPSBfX2NvbW1vbkpTKHsgXCIuLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG94Yy1wcm9qZWN0K3J1bnRpbWVAMC43Mi4yL25vZGVfbW9kdWxlcy9Ab3hjLXByb2plY3QvcnVudGltZS9zcmMvaGVscGVycy9hc3luY0dlbmVyYXRvckRlbGVnYXRlLmpzXCIoZXhwb3J0cywgbW9kdWxlKSB7XG5cdHZhciBPdmVybG9hZFlpZWxkID0gcmVxdWlyZV9PdmVybG9hZFlpZWxkKCk7XG5cdGZ1bmN0aW9uIF9hc3luY0dlbmVyYXRvckRlbGVnYXRlJDEodCkge1xuXHRcdHZhciBlID0ge30sIG4gPSAhMTtcblx0XHRmdW5jdGlvbiBwdW1wKGUkMSwgcikge1xuXHRcdFx0cmV0dXJuIG4gPSAhMCwgciA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKG4kMSkge1xuXHRcdFx0XHRuJDEodFtlJDFdKHIpKTtcblx0XHRcdH0pLCB7XG5cdFx0XHRcdGRvbmU6ICExLFxuXHRcdFx0XHR2YWx1ZTogbmV3IE92ZXJsb2FkWWllbGQociwgMSlcblx0XHRcdH07XG5cdFx0fVxuXHRcdHJldHVybiBlW1widW5kZWZpbmVkXCIgIT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3IgfHwgXCJAQGl0ZXJhdG9yXCJdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LCBlLm5leHQgPSBmdW5jdGlvbih0JDEpIHtcblx0XHRcdHJldHVybiBuID8gKG4gPSAhMSwgdCQxKSA6IHB1bXAoXCJuZXh0XCIsIHQkMSk7XG5cdFx0fSwgXCJmdW5jdGlvblwiID09IHR5cGVvZiB0W1widGhyb3dcIl0gJiYgKGVbXCJ0aHJvd1wiXSA9IGZ1bmN0aW9uKHQkMSkge1xuXHRcdFx0aWYgKG4pIHRocm93IG4gPSAhMSwgdCQxO1xuXHRcdFx0cmV0dXJuIHB1bXAoXCJ0aHJvd1wiLCB0JDEpO1xuXHRcdH0pLCBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIHRbXCJyZXR1cm5cIl0gJiYgKGVbXCJyZXR1cm5cIl0gPSBmdW5jdGlvbih0JDEpIHtcblx0XHRcdHJldHVybiBuID8gKG4gPSAhMSwgdCQxKSA6IHB1bXAoXCJyZXR1cm5cIiwgdCQxKTtcblx0XHR9KSwgZTtcblx0fVxuXHRtb2R1bGUuZXhwb3J0cyA9IF9hc3luY0dlbmVyYXRvckRlbGVnYXRlJDEsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cztcbn0gfSk7XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIHNyYy91bnN0YWJsZS1jb3JlLWRvLW5vdC1pbXBvcnQvc3RyZWFtL3NzZS50c1xudmFyIGltcG9ydF9hc3luY0l0ZXJhdG9yID0gX190b0VTTShyZXF1aXJlX2FzeW5jSXRlcmF0b3IoKSwgMSk7XG52YXIgaW1wb3J0X2F3YWl0QXN5bmNHZW5lcmF0b3IgPSBfX3RvRVNNKHJlcXVpcmVfYXdhaXRBc3luY0dlbmVyYXRvcigpLCAxKTtcbnZhciBpbXBvcnRfd3JhcEFzeW5jR2VuZXJhdG9yJDEgPSBfX3RvRVNNKHJlcXVpcmVfd3JhcEFzeW5jR2VuZXJhdG9yKCksIDEpO1xudmFyIGltcG9ydF9hc3luY0dlbmVyYXRvckRlbGVnYXRlID0gX190b0VTTShyZXF1aXJlX2FzeW5jR2VuZXJhdG9yRGVsZWdhdGUoKSwgMSk7XG52YXIgaW1wb3J0X3VzaW5nQ3R4ID0gX190b0VTTShyZXF1aXJlX3VzaW5nQ3R4KCksIDEpO1xuY29uc3QgUElOR19FVkVOVCA9IFwicGluZ1wiO1xuY29uc3QgU0VSSUFMSVpFRF9FUlJPUl9FVkVOVCA9IFwic2VyaWFsaXplZC1lcnJvclwiO1xuY29uc3QgQ09OTkVDVEVEX0VWRU5UID0gXCJjb25uZWN0ZWRcIjtcbmNvbnN0IFJFVFVSTl9FVkVOVCA9IFwicmV0dXJuXCI7XG4vKipcbipcbiogQHNlZSBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zZXJ2ZXItc2VudC1ldmVudHMuaHRtbFxuKi9cbmZ1bmN0aW9uIHNzZVN0cmVhbVByb2R1Y2VyKG9wdHMpIHtcblx0dmFyIF9vcHRzJHBpbmckZW5hYmxlZCwgX29wdHMkcGluZywgX29wdHMkcGluZyRpbnRlcnZhbE1zLCBfb3B0cyRwaW5nMiwgX29wdHMkY2xpZW50O1xuXHRjb25zdCB7IHNlcmlhbGl6ZSA9IGlkZW50aXR5IH0gPSBvcHRzO1xuXHRjb25zdCBwaW5nID0ge1xuXHRcdGVuYWJsZWQ6IChfb3B0cyRwaW5nJGVuYWJsZWQgPSAoX29wdHMkcGluZyA9IG9wdHMucGluZykgPT09IG51bGwgfHwgX29wdHMkcGluZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdHMkcGluZy5lbmFibGVkKSAhPT0gbnVsbCAmJiBfb3B0cyRwaW5nJGVuYWJsZWQgIT09IHZvaWQgMCA/IF9vcHRzJHBpbmckZW5hYmxlZCA6IGZhbHNlLFxuXHRcdGludGVydmFsTXM6IChfb3B0cyRwaW5nJGludGVydmFsTXMgPSAoX29wdHMkcGluZzIgPSBvcHRzLnBpbmcpID09PSBudWxsIHx8IF9vcHRzJHBpbmcyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfb3B0cyRwaW5nMi5pbnRlcnZhbE1zKSAhPT0gbnVsbCAmJiBfb3B0cyRwaW5nJGludGVydmFsTXMgIT09IHZvaWQgMCA/IF9vcHRzJHBpbmckaW50ZXJ2YWxNcyA6IDFlM1xuXHR9O1xuXHRjb25zdCBjbGllbnQgPSAoX29wdHMkY2xpZW50ID0gb3B0cy5jbGllbnQpICE9PSBudWxsICYmIF9vcHRzJGNsaWVudCAhPT0gdm9pZCAwID8gX29wdHMkY2xpZW50IDoge307XG5cdGlmIChwaW5nLmVuYWJsZWQgJiYgY2xpZW50LnJlY29ubmVjdEFmdGVySW5hY3Rpdml0eU1zICYmIHBpbmcuaW50ZXJ2YWxNcyA+IGNsaWVudC5yZWNvbm5lY3RBZnRlckluYWN0aXZpdHlNcykgdGhyb3cgbmV3IEVycm9yKGBQaW5nIGludGVydmFsIG11c3QgYmUgbGVzcyB0aGFuIGNsaWVudCByZWNvbm5lY3QgaW50ZXJ2YWwgdG8gcHJldmVudCB1bm5lY2Vzc2FyeSByZWNvbm5lY3Rpb24gLSBwaW5nLmludGVydmFsTXM6ICR7cGluZy5pbnRlcnZhbE1zfSBjbGllbnQucmVjb25uZWN0QWZ0ZXJJbmFjdGl2aXR5TXM6ICR7Y2xpZW50LnJlY29ubmVjdEFmdGVySW5hY3Rpdml0eU1zfWApO1xuXHRmdW5jdGlvbiBnZW5lcmF0b3IoKSB7XG5cdFx0cmV0dXJuIF9nZW5lcmF0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0fVxuXHRmdW5jdGlvbiBfZ2VuZXJhdG9yKCkge1xuXHRcdF9nZW5lcmF0b3IgPSAoMCwgaW1wb3J0X3dyYXBBc3luY0dlbmVyYXRvciQxLmRlZmF1bHQpKGZ1bmN0aW9uKiAoKSB7XG5cdFx0XHR5aWVsZCB7XG5cdFx0XHRcdGV2ZW50OiBDT05ORUNURURfRVZFTlQsXG5cdFx0XHRcdGRhdGE6IEpTT04uc3RyaW5naWZ5KGNsaWVudClcblx0XHRcdH07XG5cdFx0XHRsZXQgaXRlcmFibGUgPSBvcHRzLmRhdGE7XG5cdFx0XHRpZiAob3B0cy5lbWl0QW5kRW5kSW1tZWRpYXRlbHkpIGl0ZXJhYmxlID0gdGFrZVdpdGhHcmFjZShpdGVyYWJsZSwge1xuXHRcdFx0XHRjb3VudDogMSxcblx0XHRcdFx0Z3JhY2VQZXJpb2RNczogMVxuXHRcdFx0fSk7XG5cdFx0XHRpZiAob3B0cy5tYXhEdXJhdGlvbk1zICYmIG9wdHMubWF4RHVyYXRpb25NcyA+IDAgJiYgb3B0cy5tYXhEdXJhdGlvbk1zICE9PSBJbmZpbml0eSkgaXRlcmFibGUgPSB3aXRoTWF4RHVyYXRpb24oaXRlcmFibGUsIHsgbWF4RHVyYXRpb25Nczogb3B0cy5tYXhEdXJhdGlvbk1zIH0pO1xuXHRcdFx0aWYgKHBpbmcuZW5hYmxlZCAmJiBwaW5nLmludGVydmFsTXMgIT09IEluZmluaXR5ICYmIHBpbmcuaW50ZXJ2YWxNcyA+IDApIGl0ZXJhYmxlID0gd2l0aFBpbmcoaXRlcmFibGUsIHBpbmcuaW50ZXJ2YWxNcyk7XG5cdFx0XHRsZXQgdmFsdWU7XG5cdFx0XHRsZXQgY2h1bms7XG5cdFx0XHR2YXIgX2l0ZXJhdG9yQWJydXB0Q29tcGxldGlvbiA9IGZhbHNlO1xuXHRcdFx0dmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7XG5cdFx0XHR2YXIgX2l0ZXJhdG9yRXJyb3I7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHRmb3IgKHZhciBfaXRlcmF0b3IgPSAoMCwgaW1wb3J0X2FzeW5jSXRlcmF0b3IuZGVmYXVsdCkoaXRlcmFibGUpLCBfc3RlcDsgX2l0ZXJhdG9yQWJydXB0Q29tcGxldGlvbiA9ICEoX3N0ZXAgPSB5aWVsZCAoMCwgaW1wb3J0X2F3YWl0QXN5bmNHZW5lcmF0b3IuZGVmYXVsdCkoX2l0ZXJhdG9yLm5leHQoKSkpLmRvbmU7IF9pdGVyYXRvckFicnVwdENvbXBsZXRpb24gPSBmYWxzZSkge1xuXHRcdFx0XHRcdHZhbHVlID0gX3N0ZXAudmFsdWU7XG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0aWYgKHZhbHVlID09PSBQSU5HX1NZTSkge1xuXHRcdFx0XHRcdFx0XHR5aWVsZCB7XG5cdFx0XHRcdFx0XHRcdFx0ZXZlbnQ6IFBJTkdfRVZFTlQsXG5cdFx0XHRcdFx0XHRcdFx0ZGF0YTogXCJcIlxuXHRcdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGNodW5rID0gaXNUcmFja2VkRW52ZWxvcGUodmFsdWUpID8ge1xuXHRcdFx0XHRcdFx0XHRpZDogdmFsdWVbMF0sXG5cdFx0XHRcdFx0XHRcdGRhdGE6IHZhbHVlWzFdXG5cdFx0XHRcdFx0XHR9IDogeyBkYXRhOiB2YWx1ZSB9O1xuXHRcdFx0XHRcdFx0Y2h1bmsuZGF0YSA9IEpTT04uc3RyaW5naWZ5KHNlcmlhbGl6ZShjaHVuay5kYXRhKSk7XG5cdFx0XHRcdFx0XHR5aWVsZCBjaHVuaztcblx0XHRcdFx0XHRcdHZhbHVlID0gbnVsbDtcblx0XHRcdFx0XHRcdGNodW5rID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gY2F0Y2ggKGVycikge1xuXHRcdFx0XHRfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7XG5cdFx0XHRcdF9pdGVyYXRvckVycm9yID0gZXJyO1xuXHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRpZiAoX2l0ZXJhdG9yQWJydXB0Q29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuICE9IG51bGwpIHlpZWxkICgwLCBpbXBvcnRfYXdhaXRBc3luY0dlbmVyYXRvci5kZWZhdWx0KShfaXRlcmF0b3IucmV0dXJuKCkpO1xuXHRcdFx0XHR9IGZpbmFsbHkge1xuXHRcdFx0XHRcdGlmIChfZGlkSXRlcmF0b3JFcnJvcikgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KTtcblx0XHRyZXR1cm4gX2dlbmVyYXRvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHR9XG5cdGZ1bmN0aW9uIGdlbmVyYXRvcldpdGhFcnJvckhhbmRsaW5nKCkge1xuXHRcdHJldHVybiBfZ2VuZXJhdG9yV2l0aEVycm9ySGFuZGxpbmcuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0fVxuXHRmdW5jdGlvbiBfZ2VuZXJhdG9yV2l0aEVycm9ySGFuZGxpbmcoKSB7XG5cdFx0X2dlbmVyYXRvcldpdGhFcnJvckhhbmRsaW5nID0gKDAsIGltcG9ydF93cmFwQXN5bmNHZW5lcmF0b3IkMS5kZWZhdWx0KShmdW5jdGlvbiogKCkge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0eWllbGQqICgwLCBpbXBvcnRfYXN5bmNHZW5lcmF0b3JEZWxlZ2F0ZS5kZWZhdWx0KSgoMCwgaW1wb3J0X2FzeW5jSXRlcmF0b3IuZGVmYXVsdCkoZ2VuZXJhdG9yKCkpKTtcblx0XHRcdFx0eWllbGQge1xuXHRcdFx0XHRcdGV2ZW50OiBSRVRVUk5fRVZFTlQsXG5cdFx0XHRcdFx0ZGF0YTogXCJcIlxuXHRcdFx0XHR9O1xuXHRcdFx0fSBjYXRjaCAoY2F1c2UpIHtcblx0XHRcdFx0dmFyIF9vcHRzJGZvcm1hdEVycm9yLCBfb3B0cyRmb3JtYXRFcnJvcjI7XG5cdFx0XHRcdGlmIChpc0Fib3J0RXJyb3IoY2F1c2UpKSByZXR1cm47XG5cdFx0XHRcdGNvbnN0IGVycm9yID0gZ2V0VFJQQ0Vycm9yRnJvbVVua25vd24oY2F1c2UpO1xuXHRcdFx0XHRjb25zdCBkYXRhID0gKF9vcHRzJGZvcm1hdEVycm9yID0gKF9vcHRzJGZvcm1hdEVycm9yMiA9IG9wdHMuZm9ybWF0RXJyb3IpID09PSBudWxsIHx8IF9vcHRzJGZvcm1hdEVycm9yMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdHMkZm9ybWF0RXJyb3IyLmNhbGwob3B0cywgeyBlcnJvciB9KSkgIT09IG51bGwgJiYgX29wdHMkZm9ybWF0RXJyb3IgIT09IHZvaWQgMCA/IF9vcHRzJGZvcm1hdEVycm9yIDogbnVsbDtcblx0XHRcdFx0eWllbGQge1xuXHRcdFx0XHRcdGV2ZW50OiBTRVJJQUxJWkVEX0VSUk9SX0VWRU5ULFxuXHRcdFx0XHRcdGRhdGE6IEpTT04uc3RyaW5naWZ5KHNlcmlhbGl6ZShkYXRhKSlcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRyZXR1cm4gX2dlbmVyYXRvcldpdGhFcnJvckhhbmRsaW5nLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdH1cblx0Y29uc3Qgc3RyZWFtID0gcmVhZGFibGVTdHJlYW1Gcm9tKGdlbmVyYXRvcldpdGhFcnJvckhhbmRsaW5nKCkpO1xuXHRyZXR1cm4gc3RyZWFtLnBpcGVUaHJvdWdoKG5ldyBUcmFuc2Zvcm1TdHJlYW0oeyB0cmFuc2Zvcm0oY2h1bmssIGNvbnRyb2xsZXIpIHtcblx0XHRpZiAoXCJldmVudFwiIGluIGNodW5rKSBjb250cm9sbGVyLmVucXVldWUoYGV2ZW50OiAke2NodW5rLmV2ZW50fVxcbmApO1xuXHRcdGlmIChcImRhdGFcIiBpbiBjaHVuaykgY29udHJvbGxlci5lbnF1ZXVlKGBkYXRhOiAke2NodW5rLmRhdGF9XFxuYCk7XG5cdFx0aWYgKFwiaWRcIiBpbiBjaHVuaykgY29udHJvbGxlci5lbnF1ZXVlKGBpZDogJHtjaHVuay5pZH1cXG5gKTtcblx0XHRpZiAoXCJjb21tZW50XCIgaW4gY2h1bmspIGNvbnRyb2xsZXIuZW5xdWV1ZShgOiAke2NodW5rLmNvbW1lbnR9XFxuYCk7XG5cdFx0Y29udHJvbGxlci5lbnF1ZXVlKFwiXFxuXFxuXCIpO1xuXHR9IH0pKS5waXBlVGhyb3VnaChuZXcgVGV4dEVuY29kZXJTdHJlYW0oKSk7XG59XG5hc3luYyBmdW5jdGlvbiB3aXRoVGltZW91dChvcHRzKSB7XG5cdHRyeSB7XG5cdFx0dmFyIF91c2luZ0N0eCQxID0gKDAsIGltcG9ydF91c2luZ0N0eC5kZWZhdWx0KSgpO1xuXHRcdGNvbnN0IHRpbWVvdXRQcm9taXNlID0gX3VzaW5nQ3R4JDEudSh0aW1lclJlc291cmNlKG9wdHMudGltZW91dE1zKSk7XG5cdFx0Y29uc3QgcmVzID0gYXdhaXQgVW5wcm9taXNlLnJhY2UoW29wdHMucHJvbWlzZSwgdGltZW91dFByb21pc2Uuc3RhcnQoKV0pO1xuXHRcdGlmIChyZXMgPT09IGRpc3Bvc2FibGVQcm9taXNlVGltZXJSZXN1bHQpIHJldHVybiBhd2FpdCBvcHRzLm9uVGltZW91dCgpO1xuXHRcdHJldHVybiByZXM7XG5cdH0gY2F0Y2ggKF8pIHtcblx0XHRfdXNpbmdDdHgkMS5lID0gXztcblx0fSBmaW5hbGx5IHtcblx0XHRfdXNpbmdDdHgkMS5kKCk7XG5cdH1cbn1cbi8qKlxuKiBAc2VlIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NlcnZlci1zZW50LWV2ZW50cy5odG1sXG4qL1xuZnVuY3Rpb24gc3NlU3RyZWFtQ29uc3VtZXIob3B0cykge1xuXHRjb25zdCB7IGRlc2VyaWFsaXplID0gKHYpID0+IHYgfSA9IG9wdHM7XG5cdGxldCBjbGllbnRPcHRpb25zID0ge307XG5cdGNvbnN0IHNpZ25hbCA9IG9wdHMuc2lnbmFsO1xuXHRsZXQgX2VzID0gbnVsbDtcblx0Y29uc3QgY3JlYXRlU3RyZWFtID0gKCkgPT4gbmV3IFJlYWRhYmxlU3RyZWFtKHtcblx0XHRhc3luYyBzdGFydChjb250cm9sbGVyKSB7XG5cdFx0XHRjb25zdCBbdXJsLCBpbml0XSA9IGF3YWl0IFByb21pc2UuYWxsKFtvcHRzLnVybCgpLCBvcHRzLmluaXQoKV0pO1xuXHRcdFx0Y29uc3QgZXZlbnRTb3VyY2UgPSBfZXMgPSBuZXcgb3B0cy5FdmVudFNvdXJjZSh1cmwsIGluaXQpO1xuXHRcdFx0Y29udHJvbGxlci5lbnF1ZXVlKHtcblx0XHRcdFx0dHlwZTogXCJjb25uZWN0aW5nXCIsXG5cdFx0XHRcdGV2ZW50U291cmNlOiBfZXMsXG5cdFx0XHRcdGV2ZW50OiBudWxsXG5cdFx0XHR9KTtcblx0XHRcdGV2ZW50U291cmNlLmFkZEV2ZW50TGlzdGVuZXIoQ09OTkVDVEVEX0VWRU5ULCAoX21zZykgPT4ge1xuXHRcdFx0XHRjb25zdCBtc2cgPSBfbXNnO1xuXHRcdFx0XHRjb25zdCBvcHRpb25zID0gSlNPTi5wYXJzZShtc2cuZGF0YSk7XG5cdFx0XHRcdGNsaWVudE9wdGlvbnMgPSBvcHRpb25zO1xuXHRcdFx0XHRjb250cm9sbGVyLmVucXVldWUoe1xuXHRcdFx0XHRcdHR5cGU6IFwiY29ubmVjdGVkXCIsXG5cdFx0XHRcdFx0b3B0aW9ucyxcblx0XHRcdFx0XHRldmVudFNvdXJjZVxuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXHRcdFx0ZXZlbnRTb3VyY2UuYWRkRXZlbnRMaXN0ZW5lcihTRVJJQUxJWkVEX0VSUk9SX0VWRU5ULCAoX21zZykgPT4ge1xuXHRcdFx0XHRjb25zdCBtc2cgPSBfbXNnO1xuXHRcdFx0XHRjb250cm9sbGVyLmVucXVldWUoe1xuXHRcdFx0XHRcdHR5cGU6IFwic2VyaWFsaXplZC1lcnJvclwiLFxuXHRcdFx0XHRcdGVycm9yOiBkZXNlcmlhbGl6ZShKU09OLnBhcnNlKG1zZy5kYXRhKSksXG5cdFx0XHRcdFx0ZXZlbnRTb3VyY2Vcblx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblx0XHRcdGV2ZW50U291cmNlLmFkZEV2ZW50TGlzdGVuZXIoUElOR19FVkVOVCwgKCkgPT4ge1xuXHRcdFx0XHRjb250cm9sbGVyLmVucXVldWUoe1xuXHRcdFx0XHRcdHR5cGU6IFwicGluZ1wiLFxuXHRcdFx0XHRcdGV2ZW50U291cmNlXG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0XHRldmVudFNvdXJjZS5hZGRFdmVudExpc3RlbmVyKFJFVFVSTl9FVkVOVCwgKCkgPT4ge1xuXHRcdFx0XHRldmVudFNvdXJjZS5jbG9zZSgpO1xuXHRcdFx0XHRjb250cm9sbGVyLmNsb3NlKCk7XG5cdFx0XHRcdF9lcyA9IG51bGw7XG5cdFx0XHR9KTtcblx0XHRcdGV2ZW50U291cmNlLmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLCAoZXZlbnQpID0+IHtcblx0XHRcdFx0aWYgKGV2ZW50U291cmNlLnJlYWR5U3RhdGUgPT09IGV2ZW50U291cmNlLkNMT1NFRCkgY29udHJvbGxlci5lcnJvcihldmVudCk7XG5cdFx0XHRcdGVsc2UgY29udHJvbGxlci5lbnF1ZXVlKHtcblx0XHRcdFx0XHR0eXBlOiBcImNvbm5lY3RpbmdcIixcblx0XHRcdFx0XHRldmVudFNvdXJjZSxcblx0XHRcdFx0XHRldmVudFxuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXHRcdFx0ZXZlbnRTb3VyY2UuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgKF9tc2cpID0+IHtcblx0XHRcdFx0Y29uc3QgbXNnID0gX21zZztcblx0XHRcdFx0Y29uc3QgY2h1bmsgPSBkZXNlcmlhbGl6ZShKU09OLnBhcnNlKG1zZy5kYXRhKSk7XG5cdFx0XHRcdGNvbnN0IGRlZiA9IHsgZGF0YTogY2h1bmsgfTtcblx0XHRcdFx0aWYgKG1zZy5sYXN0RXZlbnRJZCkgZGVmLmlkID0gbXNnLmxhc3RFdmVudElkO1xuXHRcdFx0XHRjb250cm9sbGVyLmVucXVldWUoe1xuXHRcdFx0XHRcdHR5cGU6IFwiZGF0YVwiLFxuXHRcdFx0XHRcdGRhdGE6IGRlZixcblx0XHRcdFx0XHRldmVudFNvdXJjZVxuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXHRcdFx0Y29uc3Qgb25BYm9ydCA9ICgpID0+IHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRldmVudFNvdXJjZS5jbG9zZSgpO1xuXHRcdFx0XHRcdGNvbnRyb2xsZXIuY2xvc2UoKTtcblx0XHRcdFx0fSBjYXRjaCAoX3VudXNlZCkge31cblx0XHRcdH07XG5cdFx0XHRpZiAoc2lnbmFsLmFib3J0ZWQpIG9uQWJvcnQoKTtcblx0XHRcdGVsc2Ugc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0KTtcblx0XHR9LFxuXHRcdGNhbmNlbCgpIHtcblx0XHRcdF9lcyA9PT0gbnVsbCB8fCBfZXMgPT09IHZvaWQgMCB8fCBfZXMuY2xvc2UoKTtcblx0XHR9XG5cdH0pO1xuXHRjb25zdCBnZXRTdHJlYW1SZXNvdXJjZSA9ICgpID0+IHtcblx0XHRsZXQgc3RyZWFtID0gY3JlYXRlU3RyZWFtKCk7XG5cdFx0bGV0IHJlYWRlciA9IHN0cmVhbS5nZXRSZWFkZXIoKTtcblx0XHRhc3luYyBmdW5jdGlvbiBkaXNwb3NlKCkge1xuXHRcdFx0YXdhaXQgcmVhZGVyLmNhbmNlbCgpO1xuXHRcdFx0X2VzID0gbnVsbDtcblx0XHR9XG5cdFx0cmV0dXJuIG1ha2VBc3luY1Jlc291cmNlKHtcblx0XHRcdHJlYWQoKSB7XG5cdFx0XHRcdHJldHVybiByZWFkZXIucmVhZCgpO1xuXHRcdFx0fSxcblx0XHRcdGFzeW5jIHJlY3JlYXRlKCkge1xuXHRcdFx0XHRhd2FpdCBkaXNwb3NlKCk7XG5cdFx0XHRcdHN0cmVhbSA9IGNyZWF0ZVN0cmVhbSgpO1xuXHRcdFx0XHRyZWFkZXIgPSBzdHJlYW0uZ2V0UmVhZGVyKCk7XG5cdFx0XHR9XG5cdFx0fSwgZGlzcG9zZSk7XG5cdH07XG5cdHJldHVybiBydW4oKDAsIGltcG9ydF93cmFwQXN5bmNHZW5lcmF0b3IkMS5kZWZhdWx0KShmdW5jdGlvbiogKCkge1xuXHRcdHRyeSB7XG5cdFx0XHR2YXIgX3VzaW5nQ3R4MyA9ICgwLCBpbXBvcnRfdXNpbmdDdHguZGVmYXVsdCkoKTtcblx0XHRcdGNvbnN0IHN0cmVhbSA9IF91c2luZ0N0eDMuYShnZXRTdHJlYW1SZXNvdXJjZSgpKTtcblx0XHRcdHdoaWxlICh0cnVlKSB7XG5cdFx0XHRcdGxldCBwcm9taXNlID0gc3RyZWFtLnJlYWQoKTtcblx0XHRcdFx0Y29uc3QgdGltZW91dE1zID0gY2xpZW50T3B0aW9ucy5yZWNvbm5lY3RBZnRlckluYWN0aXZpdHlNcztcblx0XHRcdFx0aWYgKHRpbWVvdXRNcykgcHJvbWlzZSA9IHdpdGhUaW1lb3V0KHtcblx0XHRcdFx0XHRwcm9taXNlLFxuXHRcdFx0XHRcdHRpbWVvdXRNcyxcblx0XHRcdFx0XHRvblRpbWVvdXQ6IGFzeW5jICgpID0+IHtcblx0XHRcdFx0XHRcdGNvbnN0IHJlcyA9IHtcblx0XHRcdFx0XHRcdFx0dmFsdWU6IHtcblx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcInRpbWVvdXRcIixcblx0XHRcdFx0XHRcdFx0XHRtczogdGltZW91dE1zLFxuXHRcdFx0XHRcdFx0XHRcdGV2ZW50U291cmNlOiBfZXNcblx0XHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRcdFx0ZG9uZTogZmFsc2Vcblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHRhd2FpdCBzdHJlYW0ucmVjcmVhdGUoKTtcblx0XHRcdFx0XHRcdHJldHVybiByZXM7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdFx0Y29uc3QgcmVzdWx0ID0geWllbGQgKDAsIGltcG9ydF9hd2FpdEFzeW5jR2VuZXJhdG9yLmRlZmF1bHQpKHByb21pc2UpO1xuXHRcdFx0XHRpZiAocmVzdWx0LmRvbmUpIHJldHVybiByZXN1bHQudmFsdWU7XG5cdFx0XHRcdHlpZWxkIHJlc3VsdC52YWx1ZTtcblx0XHRcdH1cblx0XHR9IGNhdGNoIChfKSB7XG5cdFx0XHRfdXNpbmdDdHgzLmUgPSBfO1xuXHRcdH0gZmluYWxseSB7XG5cdFx0XHR5aWVsZCAoMCwgaW1wb3J0X2F3YWl0QXN5bmNHZW5lcmF0b3IuZGVmYXVsdCkoX3VzaW5nQ3R4My5kKCkpO1xuXHRcdH1cblx0fSkpO1xufVxuY29uc3Qgc3NlSGVhZGVycyA9IHtcblx0XCJDb250ZW50LVR5cGVcIjogXCJ0ZXh0L2V2ZW50LXN0cmVhbVwiLFxuXHRcIkNhY2hlLUNvbnRyb2xcIjogXCJuby1jYWNoZSwgbm8tdHJhbnNmb3JtXCIsXG5cdFwiWC1BY2NlbC1CdWZmZXJpbmdcIjogXCJub1wiLFxuXHRDb25uZWN0aW9uOiBcImtlZXAtYWxpdmVcIlxufTtcblxuLy8jZW5kcmVnaW9uXG4vLyNyZWdpb24gc3JjL3Vuc3RhYmxlLWNvcmUtZG8tbm90LWltcG9ydC9odHRwL3Jlc29sdmVSZXNwb25zZS50c1xudmFyIGltcG9ydF93cmFwQXN5bmNHZW5lcmF0b3IgPSBfX3RvRVNNKHJlcXVpcmVfd3JhcEFzeW5jR2VuZXJhdG9yKCksIDEpO1xudmFyIGltcG9ydF9vYmplY3RTcHJlYWQyID0gX190b0VTTShyZXF1aXJlX29iamVjdFNwcmVhZDIoKSwgMSk7XG5mdW5jdGlvbiBlcnJvclRvQXN5bmNJdGVyYWJsZShlcnIpIHtcblx0cmV0dXJuIHJ1bigoMCwgaW1wb3J0X3dyYXBBc3luY0dlbmVyYXRvci5kZWZhdWx0KShmdW5jdGlvbiogKCkge1xuXHRcdHRocm93IGVycjtcblx0fSkpO1xufVxuY29uc3QgVFlQRV9BQ0NFUFRFRF9NRVRIT0RfTUFQID0ge1xuXHRtdXRhdGlvbjogW1wiUE9TVFwiXSxcblx0cXVlcnk6IFtcIkdFVFwiXSxcblx0c3Vic2NyaXB0aW9uOiBbXCJHRVRcIl1cbn07XG5jb25zdCBUWVBFX0FDQ0VQVEVEX01FVEhPRF9NQVBfV0lUSF9NRVRIT0RfT1ZFUlJJREUgPSB7XG5cdG11dGF0aW9uOiBbXCJQT1NUXCJdLFxuXHRxdWVyeTogW1wiR0VUXCIsIFwiUE9TVFwiXSxcblx0c3Vic2NyaXB0aW9uOiBbXCJHRVRcIiwgXCJQT1NUXCJdXG59O1xuZnVuY3Rpb24gaW5pdFJlc3BvbnNlKGluaXRPcHRzKSB7XG5cdHZhciBfcmVzcG9uc2VNZXRhLCBfaW5mbyRjYWxscyRmaW5kJHByb2MsIF9pbmZvJGNhbGxzJGZpbmQ7XG5cdGNvbnN0IHsgY3R4LCBpbmZvLCByZXNwb25zZU1ldGEsIHVudHJhbnNmb3JtZWRKU09OLCBlcnJvcnMgPSBbXSwgaGVhZGVycyB9ID0gaW5pdE9wdHM7XG5cdGxldCBzdGF0dXMgPSB1bnRyYW5zZm9ybWVkSlNPTiA/IGdldEhUVFBTdGF0dXNDb2RlKHVudHJhbnNmb3JtZWRKU09OKSA6IDIwMDtcblx0Y29uc3QgZWFnZXJHZW5lcmF0aW9uID0gIXVudHJhbnNmb3JtZWRKU09OO1xuXHRjb25zdCBkYXRhID0gZWFnZXJHZW5lcmF0aW9uID8gW10gOiBBcnJheS5pc0FycmF5KHVudHJhbnNmb3JtZWRKU09OKSA/IHVudHJhbnNmb3JtZWRKU09OIDogW3VudHJhbnNmb3JtZWRKU09OXTtcblx0Y29uc3QgbWV0YSA9IChfcmVzcG9uc2VNZXRhID0gcmVzcG9uc2VNZXRhID09PSBudWxsIHx8IHJlc3BvbnNlTWV0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVzcG9uc2VNZXRhKHtcblx0XHRjdHgsXG5cdFx0aW5mbyxcblx0XHRwYXRoczogaW5mbyA9PT0gbnVsbCB8fCBpbmZvID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbmZvLmNhbGxzLm1hcCgoY2FsbCkgPT4gY2FsbC5wYXRoKSxcblx0XHRkYXRhLFxuXHRcdGVycm9ycyxcblx0XHRlYWdlckdlbmVyYXRpb24sXG5cdFx0dHlwZTogKF9pbmZvJGNhbGxzJGZpbmQkcHJvYyA9IGluZm8gPT09IG51bGwgfHwgaW5mbyA9PT0gdm9pZCAwIHx8IChfaW5mbyRjYWxscyRmaW5kID0gaW5mby5jYWxscy5maW5kKChjYWxsKSA9PiB7XG5cdFx0XHR2YXIgX2NhbGwkcHJvY2VkdXJlO1xuXHRcdFx0cmV0dXJuIChfY2FsbCRwcm9jZWR1cmUgPSBjYWxsLnByb2NlZHVyZSkgPT09IG51bGwgfHwgX2NhbGwkcHJvY2VkdXJlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfY2FsbCRwcm9jZWR1cmUuX2RlZi50eXBlO1xuXHRcdH0pKSA9PT0gbnVsbCB8fCBfaW5mbyRjYWxscyRmaW5kID09PSB2b2lkIDAgfHwgKF9pbmZvJGNhbGxzJGZpbmQgPSBfaW5mbyRjYWxscyRmaW5kLnByb2NlZHVyZSkgPT09IG51bGwgfHwgX2luZm8kY2FsbHMkZmluZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2luZm8kY2FsbHMkZmluZC5fZGVmLnR5cGUpICE9PSBudWxsICYmIF9pbmZvJGNhbGxzJGZpbmQkcHJvYyAhPT0gdm9pZCAwID8gX2luZm8kY2FsbHMkZmluZCRwcm9jIDogXCJ1bmtub3duXCJcblx0fSkpICE9PSBudWxsICYmIF9yZXNwb25zZU1ldGEgIT09IHZvaWQgMCA/IF9yZXNwb25zZU1ldGEgOiB7fTtcblx0aWYgKG1ldGEuaGVhZGVycykge1xuXHRcdGlmIChtZXRhLmhlYWRlcnMgaW5zdGFuY2VvZiBIZWFkZXJzKSBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBtZXRhLmhlYWRlcnMuZW50cmllcygpKSBoZWFkZXJzLmFwcGVuZChrZXksIHZhbHVlKTtcblx0XHRlbHNlXG4gLyoqXG5cdFx0KiBAZGVwcmVjYXRlZCwgZGVsZXRlIGluIHYxMlxuXHRcdCovXG5cdFx0Zm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMobWV0YS5oZWFkZXJzKSkgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSBmb3IgKGNvbnN0IHYgb2YgdmFsdWUpIGhlYWRlcnMuYXBwZW5kKGtleSwgdik7XG5cdFx0ZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSBoZWFkZXJzLnNldChrZXksIHZhbHVlKTtcblx0fVxuXHRpZiAobWV0YS5zdGF0dXMpIHN0YXR1cyA9IG1ldGEuc3RhdHVzO1xuXHRyZXR1cm4geyBzdGF0dXMgfTtcbn1cbmZ1bmN0aW9uIGNhdWdodEVycm9yVG9EYXRhKGNhdXNlLCBlcnJvck9wdHMpIHtcblx0Y29uc3QgeyByb3V0ZXIsIHJlcSwgb25FcnJvciB9ID0gZXJyb3JPcHRzLm9wdHM7XG5cdGNvbnN0IGVycm9yID0gZ2V0VFJQQ0Vycm9yRnJvbVVua25vd24oY2F1c2UpO1xuXHRvbkVycm9yID09PSBudWxsIHx8IG9uRXJyb3IgPT09IHZvaWQgMCB8fCBvbkVycm9yKHtcblx0XHRlcnJvcixcblx0XHRwYXRoOiBlcnJvck9wdHMucGF0aCxcblx0XHRpbnB1dDogZXJyb3JPcHRzLmlucHV0LFxuXHRcdGN0eDogZXJyb3JPcHRzLmN0eCxcblx0XHR0eXBlOiBlcnJvck9wdHMudHlwZSxcblx0XHRyZXFcblx0fSk7XG5cdGNvbnN0IHVudHJhbnNmb3JtZWRKU09OID0geyBlcnJvcjogZ2V0RXJyb3JTaGFwZSh7XG5cdFx0Y29uZmlnOiByb3V0ZXIuX2RlZi5fY29uZmlnLFxuXHRcdGVycm9yLFxuXHRcdHR5cGU6IGVycm9yT3B0cy50eXBlLFxuXHRcdHBhdGg6IGVycm9yT3B0cy5wYXRoLFxuXHRcdGlucHV0OiBlcnJvck9wdHMuaW5wdXQsXG5cdFx0Y3R4OiBlcnJvck9wdHMuY3R4XG5cdH0pIH07XG5cdGNvbnN0IHRyYW5zZm9ybWVkSlNPTiA9IHRyYW5zZm9ybVRSUENSZXNwb25zZShyb3V0ZXIuX2RlZi5fY29uZmlnLCB1bnRyYW5zZm9ybWVkSlNPTik7XG5cdGNvbnN0IGJvZHkgPSBKU09OLnN0cmluZ2lmeSh0cmFuc2Zvcm1lZEpTT04pO1xuXHRyZXR1cm4ge1xuXHRcdGVycm9yLFxuXHRcdHVudHJhbnNmb3JtZWRKU09OLFxuXHRcdGJvZHlcblx0fTtcbn1cbi8qKlxuKiBDaGVjayBpZiBhIHZhbHVlIGlzIGEgc3RyZWFtLWxpa2Ugb2JqZWN0XG4qIC0gaWYgaXQncyBhbiBhc3luYyBpdGVyYWJsZVxuKiAtIGlmIGl0J3MgYW4gb2JqZWN0IHdpdGggYXN5bmMgaXRlcmFibGVzIG9yIHByb21pc2VzXG4qL1xuZnVuY3Rpb24gaXNEYXRhU3RyZWFtKHYpIHtcblx0aWYgKCFpc09iamVjdCh2KSkgcmV0dXJuIGZhbHNlO1xuXHRpZiAoaXNBc3luY0l0ZXJhYmxlKHYpKSByZXR1cm4gdHJ1ZTtcblx0cmV0dXJuIE9iamVjdC52YWx1ZXModikuc29tZShpc1Byb21pc2UpIHx8IE9iamVjdC52YWx1ZXModikuc29tZShpc0FzeW5jSXRlcmFibGUpO1xufVxuYXN5bmMgZnVuY3Rpb24gcmVzb2x2ZVJlc3BvbnNlKG9wdHMpIHtcblx0dmFyIF9yZWYsIF9vcHRzJGFsbG93QmF0Y2hpbmcsIF9vcHRzJGJhdGNoaW5nLCBfb3B0cyRhbGxvd01ldGhvZE92ZXIsIF9jb25maWckc3NlJGVuYWJsZWQsIF9jb25maWckc3NlO1xuXHRjb25zdCB7IHJvdXRlciwgcmVxIH0gPSBvcHRzO1xuXHRjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoW1tcInZhcnlcIiwgXCJ0cnBjLWFjY2VwdFwiXV0pO1xuXHRjb25zdCBjb25maWcgPSByb3V0ZXIuX2RlZi5fY29uZmlnO1xuXHRjb25zdCB1cmwgPSBuZXcgVVJMKHJlcS51cmwpO1xuXHRpZiAocmVxLm1ldGhvZCA9PT0gXCJIRUFEXCIpIHJldHVybiBuZXcgUmVzcG9uc2UobnVsbCwgeyBzdGF0dXM6IDIwNCB9KTtcblx0Y29uc3QgYWxsb3dCYXRjaGluZyA9IChfcmVmID0gKF9vcHRzJGFsbG93QmF0Y2hpbmcgPSBvcHRzLmFsbG93QmF0Y2hpbmcpICE9PSBudWxsICYmIF9vcHRzJGFsbG93QmF0Y2hpbmcgIT09IHZvaWQgMCA/IF9vcHRzJGFsbG93QmF0Y2hpbmcgOiAoX29wdHMkYmF0Y2hpbmcgPSBvcHRzLmJhdGNoaW5nKSA9PT0gbnVsbCB8fCBfb3B0cyRiYXRjaGluZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdHMkYmF0Y2hpbmcuZW5hYmxlZCkgIT09IG51bGwgJiYgX3JlZiAhPT0gdm9pZCAwID8gX3JlZiA6IHRydWU7XG5cdGNvbnN0IGFsbG93TWV0aG9kT3ZlcnJpZGUgPSAoKF9vcHRzJGFsbG93TWV0aG9kT3ZlciA9IG9wdHMuYWxsb3dNZXRob2RPdmVycmlkZSkgIT09IG51bGwgJiYgX29wdHMkYWxsb3dNZXRob2RPdmVyICE9PSB2b2lkIDAgPyBfb3B0cyRhbGxvd01ldGhvZE92ZXIgOiBmYWxzZSkgJiYgcmVxLm1ldGhvZCA9PT0gXCJQT1NUXCI7XG5cdGNvbnN0IGluZm9UdXBsZSA9IGF3YWl0IHJ1bihhc3luYyAoKSA9PiB7XG5cdFx0dHJ5IHtcblx0XHRcdHJldHVybiBbdm9pZCAwLCBhd2FpdCBnZXRSZXF1ZXN0SW5mbyh7XG5cdFx0XHRcdHJlcSxcblx0XHRcdFx0cGF0aDogZGVjb2RlVVJJQ29tcG9uZW50KG9wdHMucGF0aCksXG5cdFx0XHRcdHJvdXRlcixcblx0XHRcdFx0c2VhcmNoUGFyYW1zOiB1cmwuc2VhcmNoUGFyYW1zLFxuXHRcdFx0XHRoZWFkZXJzOiBvcHRzLnJlcS5oZWFkZXJzLFxuXHRcdFx0XHR1cmxcblx0XHRcdH0pXTtcblx0XHR9IGNhdGNoIChjYXVzZSkge1xuXHRcdFx0cmV0dXJuIFtnZXRUUlBDRXJyb3JGcm9tVW5rbm93bihjYXVzZSksIHZvaWQgMF07XG5cdFx0fVxuXHR9KTtcblx0Y29uc3QgY3R4TWFuYWdlciA9IHJ1bigoKSA9PiB7XG5cdFx0bGV0IHJlc3VsdCA9IHZvaWQgMDtcblx0XHRyZXR1cm4ge1xuXHRcdFx0dmFsdWVPclVuZGVmaW5lZDogKCkgPT4ge1xuXHRcdFx0XHRpZiAoIXJlc3VsdCkgcmV0dXJuIHZvaWQgMDtcblx0XHRcdFx0cmV0dXJuIHJlc3VsdFsxXTtcblx0XHRcdH0sXG5cdFx0XHR2YWx1ZTogKCkgPT4ge1xuXHRcdFx0XHRjb25zdCBbZXJyLCBjdHhdID0gcmVzdWx0O1xuXHRcdFx0XHRpZiAoZXJyKSB0aHJvdyBlcnI7XG5cdFx0XHRcdHJldHVybiBjdHg7XG5cdFx0XHR9LFxuXHRcdFx0Y3JlYXRlOiBhc3luYyAoaW5mbykgPT4ge1xuXHRcdFx0XHRpZiAocmVzdWx0KSB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBvbmNlIC0gcmVwb3J0IGEgYnVnIGluIHRSUENcIik7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Y29uc3QgY3R4ID0gYXdhaXQgb3B0cy5jcmVhdGVDb250ZXh0KHsgaW5mbyB9KTtcblx0XHRcdFx0XHRyZXN1bHQgPSBbdm9pZCAwLCBjdHhdO1xuXHRcdFx0XHR9IGNhdGNoIChjYXVzZSkge1xuXHRcdFx0XHRcdHJlc3VsdCA9IFtnZXRUUlBDRXJyb3JGcm9tVW5rbm93bihjYXVzZSksIHZvaWQgMF07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9KTtcblx0Y29uc3QgbWV0aG9kTWFwcGVyID0gYWxsb3dNZXRob2RPdmVycmlkZSA/IFRZUEVfQUNDRVBURURfTUVUSE9EX01BUF9XSVRIX01FVEhPRF9PVkVSUklERSA6IFRZUEVfQUNDRVBURURfTUVUSE9EX01BUDtcblx0LyoqXG5cdCogQGRlcHJlY2F0ZWRcblx0Ki9cblx0Y29uc3QgaXNTdHJlYW1DYWxsID0gcmVxLmhlYWRlcnMuZ2V0KFwidHJwYy1hY2NlcHRcIikgPT09IFwiYXBwbGljYXRpb24vanNvbmxcIjtcblx0Y29uc3QgZXhwZXJpbWVudGFsU1NFID0gKF9jb25maWckc3NlJGVuYWJsZWQgPSAoX2NvbmZpZyRzc2UgPSBjb25maWcuc3NlKSA9PT0gbnVsbCB8fCBfY29uZmlnJHNzZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2NvbmZpZyRzc2UuZW5hYmxlZCkgIT09IG51bGwgJiYgX2NvbmZpZyRzc2UkZW5hYmxlZCAhPT0gdm9pZCAwID8gX2NvbmZpZyRzc2UkZW5hYmxlZCA6IHRydWU7XG5cdHRyeSB7XG5cdFx0Y29uc3QgW2luZm9FcnJvciwgaW5mb10gPSBpbmZvVHVwbGU7XG5cdFx0aWYgKGluZm9FcnJvcikgdGhyb3cgaW5mb0Vycm9yO1xuXHRcdGlmIChpbmZvLmlzQmF0Y2hDYWxsICYmICFhbGxvd0JhdGNoaW5nKSB0aHJvdyBuZXcgVFJQQ0Vycm9yKHtcblx0XHRcdGNvZGU6IFwiQkFEX1JFUVVFU1RcIixcblx0XHRcdG1lc3NhZ2U6IGBCYXRjaGluZyBpcyBub3QgZW5hYmxlZCBvbiB0aGUgc2VydmVyYFxuXHRcdH0pO1xuXHRcdC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtLSBAcHJlc2VydmUgKi9cblx0XHRpZiAoaXNTdHJlYW1DYWxsICYmICFpbmZvLmlzQmF0Y2hDYWxsKSB0aHJvdyBuZXcgVFJQQ0Vycm9yKHtcblx0XHRcdG1lc3NhZ2U6IGBTdHJlYW1pbmcgcmVxdWVzdHMgbXVzdCBiZSBiYXRjaGVkICh5b3UgY2FuIGRvIGEgYmF0Y2ggb2YgMSlgLFxuXHRcdFx0Y29kZTogXCJCQURfUkVRVUVTVFwiXG5cdFx0fSk7XG5cdFx0YXdhaXQgY3R4TWFuYWdlci5jcmVhdGUoaW5mbyk7XG5cdFx0Y29uc3QgcnBjQ2FsbHMgPSBpbmZvLmNhbGxzLm1hcChhc3luYyAoY2FsbCkgPT4ge1xuXHRcdFx0Y29uc3QgcHJvYyA9IGNhbGwucHJvY2VkdXJlO1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0aWYgKG9wdHMuZXJyb3IpIHRocm93IG9wdHMuZXJyb3I7XG5cdFx0XHRcdGlmICghcHJvYykgdGhyb3cgbmV3IFRSUENFcnJvcih7XG5cdFx0XHRcdFx0Y29kZTogXCJOT1RfRk9VTkRcIixcblx0XHRcdFx0XHRtZXNzYWdlOiBgTm8gcHJvY2VkdXJlIGZvdW5kIG9uIHBhdGggXCIke2NhbGwucGF0aH1cImBcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGlmICghbWV0aG9kTWFwcGVyW3Byb2MuX2RlZi50eXBlXS5pbmNsdWRlcyhyZXEubWV0aG9kKSkgdGhyb3cgbmV3IFRSUENFcnJvcih7XG5cdFx0XHRcdFx0Y29kZTogXCJNRVRIT0RfTk9UX1NVUFBPUlRFRFwiLFxuXHRcdFx0XHRcdG1lc3NhZ2U6IGBVbnN1cHBvcnRlZCAke3JlcS5tZXRob2R9LXJlcXVlc3QgdG8gJHtwcm9jLl9kZWYudHlwZX0gcHJvY2VkdXJlIGF0IHBhdGggXCIke2NhbGwucGF0aH1cImBcblx0XHRcdFx0fSk7XG5cdFx0XHRcdGlmIChwcm9jLl9kZWYudHlwZSA9PT0gXCJzdWJzY3JpcHRpb25cIikge1xuXHRcdFx0XHRcdC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAtLSBAcHJlc2VydmUgKi9cblx0XHRcdFx0XHRpZiAoaW5mby5pc0JhdGNoQ2FsbCkgdGhyb3cgbmV3IFRSUENFcnJvcih7XG5cdFx0XHRcdFx0XHRjb2RlOiBcIkJBRF9SRVFVRVNUXCIsXG5cdFx0XHRcdFx0XHRtZXNzYWdlOiBgQ2Fubm90IGJhdGNoIHN1YnNjcmlwdGlvbiBjYWxsc2Bcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb25zdCBkYXRhID0gYXdhaXQgcHJvYyh7XG5cdFx0XHRcdFx0cGF0aDogY2FsbC5wYXRoLFxuXHRcdFx0XHRcdGdldFJhd0lucHV0OiBjYWxsLmdldFJhd0lucHV0LFxuXHRcdFx0XHRcdGN0eDogY3R4TWFuYWdlci52YWx1ZSgpLFxuXHRcdFx0XHRcdHR5cGU6IHByb2MuX2RlZi50eXBlLFxuXHRcdFx0XHRcdHNpZ25hbDogb3B0cy5yZXEuc2lnbmFsXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm4gW3ZvaWQgMCwgeyBkYXRhIH1dO1xuXHRcdFx0fSBjYXRjaCAoY2F1c2UpIHtcblx0XHRcdFx0dmFyIF9vcHRzJG9uRXJyb3IsIF9jYWxsJHByb2NlZHVyZSRfZGVmJCwgX2NhbGwkcHJvY2VkdXJlMjtcblx0XHRcdFx0Y29uc3QgZXJyb3IgPSBnZXRUUlBDRXJyb3JGcm9tVW5rbm93bihjYXVzZSk7XG5cdFx0XHRcdGNvbnN0IGlucHV0ID0gY2FsbC5yZXN1bHQoKTtcblx0XHRcdFx0KF9vcHRzJG9uRXJyb3IgPSBvcHRzLm9uRXJyb3IpID09PSBudWxsIHx8IF9vcHRzJG9uRXJyb3IgPT09IHZvaWQgMCB8fCBfb3B0cyRvbkVycm9yLmNhbGwob3B0cywge1xuXHRcdFx0XHRcdGVycm9yLFxuXHRcdFx0XHRcdHBhdGg6IGNhbGwucGF0aCxcblx0XHRcdFx0XHRpbnB1dCxcblx0XHRcdFx0XHRjdHg6IGN0eE1hbmFnZXIudmFsdWVPclVuZGVmaW5lZCgpLFxuXHRcdFx0XHRcdHR5cGU6IChfY2FsbCRwcm9jZWR1cmUkX2RlZiQgPSAoX2NhbGwkcHJvY2VkdXJlMiA9IGNhbGwucHJvY2VkdXJlKSA9PT0gbnVsbCB8fCBfY2FsbCRwcm9jZWR1cmUyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfY2FsbCRwcm9jZWR1cmUyLl9kZWYudHlwZSkgIT09IG51bGwgJiYgX2NhbGwkcHJvY2VkdXJlJF9kZWYkICE9PSB2b2lkIDAgPyBfY2FsbCRwcm9jZWR1cmUkX2RlZiQgOiBcInVua25vd25cIixcblx0XHRcdFx0XHRyZXE6IG9wdHMucmVxXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm4gW2Vycm9yLCB2b2lkIDBdO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdGlmICghaW5mby5pc0JhdGNoQ2FsbCkge1xuXHRcdFx0Y29uc3QgW2NhbGxdID0gaW5mby5jYWxscztcblx0XHRcdGNvbnN0IFtlcnJvciwgcmVzdWx0XSA9IGF3YWl0IHJwY0NhbGxzWzBdO1xuXHRcdFx0c3dpdGNoIChpbmZvLnR5cGUpIHtcblx0XHRcdFx0Y2FzZSBcInVua25vd25cIjpcblx0XHRcdFx0Y2FzZSBcIm11dGF0aW9uXCI6XG5cdFx0XHRcdGNhc2UgXCJxdWVyeVwiOiB7XG5cdFx0XHRcdFx0aGVhZGVycy5zZXQoXCJjb250ZW50LXR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xuXHRcdFx0XHRcdGlmIChpc0RhdGFTdHJlYW0ocmVzdWx0ID09PSBudWxsIHx8IHJlc3VsdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVzdWx0LmRhdGEpKSB0aHJvdyBuZXcgVFJQQ0Vycm9yKHtcblx0XHRcdFx0XHRcdGNvZGU6IFwiVU5TVVBQT1JURURfTUVESUFfVFlQRVwiLFxuXHRcdFx0XHRcdFx0bWVzc2FnZTogXCJDYW5ub3QgdXNlIHN0cmVhbS1saWtlIHJlc3BvbnNlIGluIG5vbi1zdHJlYW1pbmcgcmVxdWVzdCAtIHVzZSBodHRwQmF0Y2hTdHJlYW1MaW5rXCJcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRjb25zdCByZXMgPSBlcnJvciA/IHsgZXJyb3I6IGdldEVycm9yU2hhcGUoe1xuXHRcdFx0XHRcdFx0Y29uZmlnLFxuXHRcdFx0XHRcdFx0Y3R4OiBjdHhNYW5hZ2VyLnZhbHVlT3JVbmRlZmluZWQoKSxcblx0XHRcdFx0XHRcdGVycm9yLFxuXHRcdFx0XHRcdFx0aW5wdXQ6IGNhbGwucmVzdWx0KCksXG5cdFx0XHRcdFx0XHRwYXRoOiBjYWxsLnBhdGgsXG5cdFx0XHRcdFx0XHR0eXBlOiBpbmZvLnR5cGVcblx0XHRcdFx0XHR9KSB9IDogeyByZXN1bHQ6IHsgZGF0YTogcmVzdWx0LmRhdGEgfSB9O1xuXHRcdFx0XHRcdGNvbnN0IGhlYWRSZXNwb25zZSQxID0gaW5pdFJlc3BvbnNlKHtcblx0XHRcdFx0XHRcdGN0eDogY3R4TWFuYWdlci52YWx1ZU9yVW5kZWZpbmVkKCksXG5cdFx0XHRcdFx0XHRpbmZvLFxuXHRcdFx0XHRcdFx0cmVzcG9uc2VNZXRhOiBvcHRzLnJlc3BvbnNlTWV0YSxcblx0XHRcdFx0XHRcdGVycm9yczogZXJyb3IgPyBbZXJyb3JdIDogW10sXG5cdFx0XHRcdFx0XHRoZWFkZXJzLFxuXHRcdFx0XHRcdFx0dW50cmFuc2Zvcm1lZEpTT046IFtyZXNdXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0cmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh0cmFuc2Zvcm1UUlBDUmVzcG9uc2UoY29uZmlnLCByZXMpKSwge1xuXHRcdFx0XHRcdFx0c3RhdHVzOiBoZWFkUmVzcG9uc2UkMS5zdGF0dXMsXG5cdFx0XHRcdFx0XHRoZWFkZXJzXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y2FzZSBcInN1YnNjcmlwdGlvblwiOiB7XG5cdFx0XHRcdFx0Y29uc3QgaXRlcmFibGUgPSBydW4oKCkgPT4ge1xuXHRcdFx0XHRcdFx0aWYgKGVycm9yKSByZXR1cm4gZXJyb3JUb0FzeW5jSXRlcmFibGUoZXJyb3IpO1xuXHRcdFx0XHRcdFx0aWYgKCFleHBlcmltZW50YWxTU0UpIHJldHVybiBlcnJvclRvQXN5bmNJdGVyYWJsZShuZXcgVFJQQ0Vycm9yKHtcblx0XHRcdFx0XHRcdFx0Y29kZTogXCJNRVRIT0RfTk9UX1NVUFBPUlRFRFwiLFxuXHRcdFx0XHRcdFx0XHRtZXNzYWdlOiBcIk1pc3NpbmcgZXhwZXJpbWVudGFsIGZsYWcgXFxcInNzZVN1YnNjcmlwdGlvbnNcXFwiXCJcblx0XHRcdFx0XHRcdH0pKTtcblx0XHRcdFx0XHRcdGlmICghaXNPYnNlcnZhYmxlKHJlc3VsdC5kYXRhKSAmJiAhaXNBc3luY0l0ZXJhYmxlKHJlc3VsdC5kYXRhKSkgcmV0dXJuIGVycm9yVG9Bc3luY0l0ZXJhYmxlKG5ldyBUUlBDRXJyb3Ioe1xuXHRcdFx0XHRcdFx0XHRtZXNzYWdlOiBgU3Vic2NyaXB0aW9uICR7Y2FsbC5wYXRofSBkaWQgbm90IHJldHVybiBhbiBvYnNlcnZhYmxlIG9yIGEgQXN5bmNHZW5lcmF0b3JgLFxuXHRcdFx0XHRcdFx0XHRjb2RlOiBcIklOVEVSTkFMX1NFUlZFUl9FUlJPUlwiXG5cdFx0XHRcdFx0XHR9KSk7XG5cdFx0XHRcdFx0XHRjb25zdCBkYXRhQXNJdGVyYWJsZSA9IGlzT2JzZXJ2YWJsZShyZXN1bHQuZGF0YSkgPyBvYnNlcnZhYmxlVG9Bc3luY0l0ZXJhYmxlKHJlc3VsdC5kYXRhLCBvcHRzLnJlcS5zaWduYWwpIDogcmVzdWx0LmRhdGE7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZGF0YUFzSXRlcmFibGU7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0Y29uc3Qgc3RyZWFtID0gc3NlU3RyZWFtUHJvZHVjZXIoKDAsIGltcG9ydF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKCgwLCBpbXBvcnRfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSh7fSwgY29uZmlnLnNzZSksIHt9LCB7XG5cdFx0XHRcdFx0XHRkYXRhOiBpdGVyYWJsZSxcblx0XHRcdFx0XHRcdHNlcmlhbGl6ZTogKHYpID0+IGNvbmZpZy50cmFuc2Zvcm1lci5vdXRwdXQuc2VyaWFsaXplKHYpLFxuXHRcdFx0XHRcdFx0Zm9ybWF0RXJyb3IoZXJyb3JPcHRzKSB7XG5cdFx0XHRcdFx0XHRcdHZhciBfY2FsbCRwcm9jZWR1cmUkX2RlZiQyLCBfY2FsbCRwcm9jZWR1cmUzLCBfb3B0cyRvbkVycm9yMjtcblx0XHRcdFx0XHRcdFx0Y29uc3QgZXJyb3IkMSA9IGdldFRSUENFcnJvckZyb21Vbmtub3duKGVycm9yT3B0cy5lcnJvcik7XG5cdFx0XHRcdFx0XHRcdGNvbnN0IGlucHV0ID0gY2FsbCA9PT0gbnVsbCB8fCBjYWxsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjYWxsLnJlc3VsdCgpO1xuXHRcdFx0XHRcdFx0XHRjb25zdCBwYXRoID0gY2FsbCA9PT0gbnVsbCB8fCBjYWxsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjYWxsLnBhdGg7XG5cdFx0XHRcdFx0XHRcdGNvbnN0IHR5cGUgPSAoX2NhbGwkcHJvY2VkdXJlJF9kZWYkMiA9IGNhbGwgPT09IG51bGwgfHwgY2FsbCA9PT0gdm9pZCAwIHx8IChfY2FsbCRwcm9jZWR1cmUzID0gY2FsbC5wcm9jZWR1cmUpID09PSBudWxsIHx8IF9jYWxsJHByb2NlZHVyZTMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jYWxsJHByb2NlZHVyZTMuX2RlZi50eXBlKSAhPT0gbnVsbCAmJiBfY2FsbCRwcm9jZWR1cmUkX2RlZiQyICE9PSB2b2lkIDAgPyBfY2FsbCRwcm9jZWR1cmUkX2RlZiQyIDogXCJ1bmtub3duXCI7XG5cdFx0XHRcdFx0XHRcdChfb3B0cyRvbkVycm9yMiA9IG9wdHMub25FcnJvcikgPT09IG51bGwgfHwgX29wdHMkb25FcnJvcjIgPT09IHZvaWQgMCB8fCBfb3B0cyRvbkVycm9yMi5jYWxsKG9wdHMsIHtcblx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyb3IkMSxcblx0XHRcdFx0XHRcdFx0XHRwYXRoLFxuXHRcdFx0XHRcdFx0XHRcdGlucHV0LFxuXHRcdFx0XHRcdFx0XHRcdGN0eDogY3R4TWFuYWdlci52YWx1ZU9yVW5kZWZpbmVkKCksXG5cdFx0XHRcdFx0XHRcdFx0cmVxOiBvcHRzLnJlcSxcblx0XHRcdFx0XHRcdFx0XHR0eXBlXG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHRjb25zdCBzaGFwZSA9IGdldEVycm9yU2hhcGUoe1xuXHRcdFx0XHRcdFx0XHRcdGNvbmZpZyxcblx0XHRcdFx0XHRcdFx0XHRjdHg6IGN0eE1hbmFnZXIudmFsdWVPclVuZGVmaW5lZCgpLFxuXHRcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnJvciQxLFxuXHRcdFx0XHRcdFx0XHRcdGlucHV0LFxuXHRcdFx0XHRcdFx0XHRcdHBhdGgsXG5cdFx0XHRcdFx0XHRcdFx0dHlwZVxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHNoYXBlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pKTtcblx0XHRcdFx0XHRmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhzc2VIZWFkZXJzKSkgaGVhZGVycy5zZXQoa2V5LCB2YWx1ZSk7XG5cdFx0XHRcdFx0Y29uc3QgaGVhZFJlc3BvbnNlJDEgPSBpbml0UmVzcG9uc2Uoe1xuXHRcdFx0XHRcdFx0Y3R4OiBjdHhNYW5hZ2VyLnZhbHVlT3JVbmRlZmluZWQoKSxcblx0XHRcdFx0XHRcdGluZm8sXG5cdFx0XHRcdFx0XHRyZXNwb25zZU1ldGE6IG9wdHMucmVzcG9uc2VNZXRhLFxuXHRcdFx0XHRcdFx0ZXJyb3JzOiBbXSxcblx0XHRcdFx0XHRcdGhlYWRlcnMsXG5cdFx0XHRcdFx0XHR1bnRyYW5zZm9ybWVkSlNPTjogbnVsbFxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdHJldHVybiBuZXcgUmVzcG9uc2Uoc3RyZWFtLCB7XG5cdFx0XHRcdFx0XHRoZWFkZXJzLFxuXHRcdFx0XHRcdFx0c3RhdHVzOiBoZWFkUmVzcG9uc2UkMS5zdGF0dXNcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRpZiAoaW5mby5hY2NlcHQgPT09IFwiYXBwbGljYXRpb24vanNvbmxcIikge1xuXHRcdFx0aGVhZGVycy5zZXQoXCJjb250ZW50LXR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xuXHRcdFx0aGVhZGVycy5zZXQoXCJ0cmFuc2Zlci1lbmNvZGluZ1wiLCBcImNodW5rZWRcIik7XG5cdFx0XHRjb25zdCBoZWFkUmVzcG9uc2UkMSA9IGluaXRSZXNwb25zZSh7XG5cdFx0XHRcdGN0eDogY3R4TWFuYWdlci52YWx1ZU9yVW5kZWZpbmVkKCksXG5cdFx0XHRcdGluZm8sXG5cdFx0XHRcdHJlc3BvbnNlTWV0YTogb3B0cy5yZXNwb25zZU1ldGEsXG5cdFx0XHRcdGVycm9yczogW10sXG5cdFx0XHRcdGhlYWRlcnMsXG5cdFx0XHRcdHVudHJhbnNmb3JtZWRKU09OOiBudWxsXG5cdFx0XHR9KTtcblx0XHRcdGNvbnN0IHN0cmVhbSA9IGpzb25sU3RyZWFtUHJvZHVjZXIoKDAsIGltcG9ydF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKCgwLCBpbXBvcnRfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSh7fSwgY29uZmlnLmpzb25sKSwge30sIHtcblx0XHRcdFx0bWF4RGVwdGg6IEluZmluaXR5LFxuXHRcdFx0XHRkYXRhOiBycGNDYWxscy5tYXAoYXN5bmMgKHJlcykgPT4ge1xuXHRcdFx0XHRcdGNvbnN0IFtlcnJvciwgcmVzdWx0XSA9IGF3YWl0IHJlcztcblx0XHRcdFx0XHRjb25zdCBjYWxsID0gaW5mby5jYWxsc1swXTtcblx0XHRcdFx0XHRpZiAoZXJyb3IpIHtcblx0XHRcdFx0XHRcdHZhciBfcHJvY2VkdXJlJF9kZWYkdHlwZSwgX3Byb2NlZHVyZTtcblx0XHRcdFx0XHRcdHJldHVybiB7IGVycm9yOiBnZXRFcnJvclNoYXBlKHtcblx0XHRcdFx0XHRcdFx0Y29uZmlnLFxuXHRcdFx0XHRcdFx0XHRjdHg6IGN0eE1hbmFnZXIudmFsdWVPclVuZGVmaW5lZCgpLFxuXHRcdFx0XHRcdFx0XHRlcnJvcixcblx0XHRcdFx0XHRcdFx0aW5wdXQ6IGNhbGwucmVzdWx0KCksXG5cdFx0XHRcdFx0XHRcdHBhdGg6IGNhbGwucGF0aCxcblx0XHRcdFx0XHRcdFx0dHlwZTogKF9wcm9jZWR1cmUkX2RlZiR0eXBlID0gKF9wcm9jZWR1cmUgPSBjYWxsLnByb2NlZHVyZSkgPT09IG51bGwgfHwgX3Byb2NlZHVyZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3Byb2NlZHVyZS5fZGVmLnR5cGUpICE9PSBudWxsICYmIF9wcm9jZWR1cmUkX2RlZiR0eXBlICE9PSB2b2lkIDAgPyBfcHJvY2VkdXJlJF9kZWYkdHlwZSA6IFwidW5rbm93blwiXG5cdFx0XHRcdFx0XHR9KSB9O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHQvKipcblx0XHRcdFx0XHQqIE5vdCB2ZXJ5IHByZXR0eSwgYnV0IHdlIG5lZWQgdG8gd3JhcCBuZXN0ZWQgZGF0YSBpbiBwcm9taXNlc1xuXHRcdFx0XHRcdCogT3VyIHN0cmVhbSBwcm9kdWNlciB3aWxsIG9ubHkgcmVzb2x2ZSB0b3AtbGV2ZWwgYXN5bmMgdmFsdWVzIG9yIGFzeW5jIHZhbHVlcyB0aGF0IGFyZSBkaXJlY3RseSBuZXN0ZWQgaW4gYW5vdGhlciBhc3luYyB2YWx1ZVxuXHRcdFx0XHRcdCovXG5cdFx0XHRcdFx0Y29uc3QgaXRlcmFibGUgPSBpc09ic2VydmFibGUocmVzdWx0LmRhdGEpID8gb2JzZXJ2YWJsZVRvQXN5bmNJdGVyYWJsZShyZXN1bHQuZGF0YSwgb3B0cy5yZXEuc2lnbmFsKSA6IFByb21pc2UucmVzb2x2ZShyZXN1bHQuZGF0YSk7XG5cdFx0XHRcdFx0cmV0dXJuIHsgcmVzdWx0OiBQcm9taXNlLnJlc29sdmUoeyBkYXRhOiBpdGVyYWJsZSB9KSB9O1xuXHRcdFx0XHR9KSxcblx0XHRcdFx0c2VyaWFsaXplOiBjb25maWcudHJhbnNmb3JtZXIub3V0cHV0LnNlcmlhbGl6ZSxcblx0XHRcdFx0b25FcnJvcjogKGNhdXNlKSA9PiB7XG5cdFx0XHRcdFx0dmFyIF9vcHRzJG9uRXJyb3IzLCBfaW5mbyR0eXBlO1xuXHRcdFx0XHRcdChfb3B0cyRvbkVycm9yMyA9IG9wdHMub25FcnJvcikgPT09IG51bGwgfHwgX29wdHMkb25FcnJvcjMgPT09IHZvaWQgMCB8fCBfb3B0cyRvbkVycm9yMy5jYWxsKG9wdHMsIHtcblx0XHRcdFx0XHRcdGVycm9yOiBnZXRUUlBDRXJyb3JGcm9tVW5rbm93bihjYXVzZSksXG5cdFx0XHRcdFx0XHRwYXRoOiB2b2lkIDAsXG5cdFx0XHRcdFx0XHRpbnB1dDogdm9pZCAwLFxuXHRcdFx0XHRcdFx0Y3R4OiBjdHhNYW5hZ2VyLnZhbHVlT3JVbmRlZmluZWQoKSxcblx0XHRcdFx0XHRcdHJlcTogb3B0cy5yZXEsXG5cdFx0XHRcdFx0XHR0eXBlOiAoX2luZm8kdHlwZSA9IGluZm8gPT09IG51bGwgfHwgaW5mbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW5mby50eXBlKSAhPT0gbnVsbCAmJiBfaW5mbyR0eXBlICE9PSB2b2lkIDAgPyBfaW5mbyR0eXBlIDogXCJ1bmtub3duXCJcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSxcblx0XHRcdFx0Zm9ybWF0RXJyb3IoZXJyb3JPcHRzKSB7XG5cdFx0XHRcdFx0dmFyIF9jYWxsJHByb2NlZHVyZSRfZGVmJDMsIF9jYWxsJHByb2NlZHVyZTQ7XG5cdFx0XHRcdFx0Y29uc3QgY2FsbCA9IGluZm8gPT09IG51bGwgfHwgaW5mbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW5mby5jYWxsc1tlcnJvck9wdHMucGF0aFswXV07XG5cdFx0XHRcdFx0Y29uc3QgZXJyb3IgPSBnZXRUUlBDRXJyb3JGcm9tVW5rbm93bihlcnJvck9wdHMuZXJyb3IpO1xuXHRcdFx0XHRcdGNvbnN0IGlucHV0ID0gY2FsbCA9PT0gbnVsbCB8fCBjYWxsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjYWxsLnJlc3VsdCgpO1xuXHRcdFx0XHRcdGNvbnN0IHBhdGggPSBjYWxsID09PSBudWxsIHx8IGNhbGwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNhbGwucGF0aDtcblx0XHRcdFx0XHRjb25zdCB0eXBlID0gKF9jYWxsJHByb2NlZHVyZSRfZGVmJDMgPSBjYWxsID09PSBudWxsIHx8IGNhbGwgPT09IHZvaWQgMCB8fCAoX2NhbGwkcHJvY2VkdXJlNCA9IGNhbGwucHJvY2VkdXJlKSA9PT0gbnVsbCB8fCBfY2FsbCRwcm9jZWR1cmU0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfY2FsbCRwcm9jZWR1cmU0Ll9kZWYudHlwZSkgIT09IG51bGwgJiYgX2NhbGwkcHJvY2VkdXJlJF9kZWYkMyAhPT0gdm9pZCAwID8gX2NhbGwkcHJvY2VkdXJlJF9kZWYkMyA6IFwidW5rbm93blwiO1xuXHRcdFx0XHRcdGNvbnN0IHNoYXBlID0gZ2V0RXJyb3JTaGFwZSh7XG5cdFx0XHRcdFx0XHRjb25maWcsXG5cdFx0XHRcdFx0XHRjdHg6IGN0eE1hbmFnZXIudmFsdWVPclVuZGVmaW5lZCgpLFxuXHRcdFx0XHRcdFx0ZXJyb3IsXG5cdFx0XHRcdFx0XHRpbnB1dCxcblx0XHRcdFx0XHRcdHBhdGgsXG5cdFx0XHRcdFx0XHR0eXBlXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0cmV0dXJuIHNoYXBlO1xuXHRcdFx0XHR9XG5cdFx0XHR9KSk7XG5cdFx0XHRyZXR1cm4gbmV3IFJlc3BvbnNlKHN0cmVhbSwge1xuXHRcdFx0XHRoZWFkZXJzLFxuXHRcdFx0XHRzdGF0dXM6IGhlYWRSZXNwb25zZSQxLnN0YXR1c1xuXHRcdFx0fSk7XG5cdFx0fVxuXHRcdC8qKlxuXHRcdCogTm9uLXN0cmVhbWluZyByZXNwb25zZTpcblx0XHQqIC0gYXdhaXQgYWxsIHJlc3BvbnNlcyBpbiBwYXJhbGxlbCwgYmxvY2tpbmcgb24gdGhlIHNsb3dlc3Qgb25lXG5cdFx0KiAtIGNyZWF0ZSBoZWFkZXJzIHdpdGgga25vd24gcmVzcG9uc2UgYm9keVxuXHRcdCogLSByZXR1cm4gYSBjb21wbGV0ZSBIVFRQUmVzcG9uc2Vcblx0XHQqL1xuXHRcdGhlYWRlcnMuc2V0KFwiY29udGVudC10eXBlXCIsIFwiYXBwbGljYXRpb24vanNvblwiKTtcblx0XHRjb25zdCByZXN1bHRzID0gKGF3YWl0IFByb21pc2UuYWxsKHJwY0NhbGxzKSkubWFwKChyZXMpID0+IHtcblx0XHRcdGNvbnN0IFtlcnJvciwgcmVzdWx0XSA9IHJlcztcblx0XHRcdGlmIChlcnJvcikgcmV0dXJuIHJlcztcblx0XHRcdGlmIChpc0RhdGFTdHJlYW0ocmVzdWx0LmRhdGEpKSByZXR1cm4gW25ldyBUUlBDRXJyb3Ioe1xuXHRcdFx0XHRjb2RlOiBcIlVOU1VQUE9SVEVEX01FRElBX1RZUEVcIixcblx0XHRcdFx0bWVzc2FnZTogXCJDYW5ub3QgdXNlIHN0cmVhbS1saWtlIHJlc3BvbnNlIGluIG5vbi1zdHJlYW1pbmcgcmVxdWVzdCAtIHVzZSBodHRwQmF0Y2hTdHJlYW1MaW5rXCJcblx0XHRcdH0pLCB2b2lkIDBdO1xuXHRcdFx0cmV0dXJuIHJlcztcblx0XHR9KTtcblx0XHRjb25zdCByZXN1bHRBc1JQQ1Jlc3BvbnNlID0gcmVzdWx0cy5tYXAoKFtlcnJvciwgcmVzdWx0XSwgaW5kZXgpID0+IHtcblx0XHRcdGNvbnN0IGNhbGwgPSBpbmZvLmNhbGxzW2luZGV4XTtcblx0XHRcdGlmIChlcnJvcikge1xuXHRcdFx0XHR2YXIgX2NhbGwkcHJvY2VkdXJlJF9kZWYkNCwgX2NhbGwkcHJvY2VkdXJlNTtcblx0XHRcdFx0cmV0dXJuIHsgZXJyb3I6IGdldEVycm9yU2hhcGUoe1xuXHRcdFx0XHRcdGNvbmZpZyxcblx0XHRcdFx0XHRjdHg6IGN0eE1hbmFnZXIudmFsdWVPclVuZGVmaW5lZCgpLFxuXHRcdFx0XHRcdGVycm9yLFxuXHRcdFx0XHRcdGlucHV0OiBjYWxsLnJlc3VsdCgpLFxuXHRcdFx0XHRcdHBhdGg6IGNhbGwucGF0aCxcblx0XHRcdFx0XHR0eXBlOiAoX2NhbGwkcHJvY2VkdXJlJF9kZWYkNCA9IChfY2FsbCRwcm9jZWR1cmU1ID0gY2FsbC5wcm9jZWR1cmUpID09PSBudWxsIHx8IF9jYWxsJHByb2NlZHVyZTUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jYWxsJHByb2NlZHVyZTUuX2RlZi50eXBlKSAhPT0gbnVsbCAmJiBfY2FsbCRwcm9jZWR1cmUkX2RlZiQ0ICE9PSB2b2lkIDAgPyBfY2FsbCRwcm9jZWR1cmUkX2RlZiQ0IDogXCJ1bmtub3duXCJcblx0XHRcdFx0fSkgfTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB7IHJlc3VsdDogeyBkYXRhOiByZXN1bHQuZGF0YSB9IH07XG5cdFx0fSk7XG5cdFx0Y29uc3QgZXJyb3JzID0gcmVzdWx0cy5tYXAoKFtlcnJvcl0pID0+IGVycm9yKS5maWx0ZXIoQm9vbGVhbik7XG5cdFx0Y29uc3QgaGVhZFJlc3BvbnNlID0gaW5pdFJlc3BvbnNlKHtcblx0XHRcdGN0eDogY3R4TWFuYWdlci52YWx1ZU9yVW5kZWZpbmVkKCksXG5cdFx0XHRpbmZvLFxuXHRcdFx0cmVzcG9uc2VNZXRhOiBvcHRzLnJlc3BvbnNlTWV0YSxcblx0XHRcdHVudHJhbnNmb3JtZWRKU09OOiByZXN1bHRBc1JQQ1Jlc3BvbnNlLFxuXHRcdFx0ZXJyb3JzLFxuXHRcdFx0aGVhZGVyc1xuXHRcdH0pO1xuXHRcdHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkodHJhbnNmb3JtVFJQQ1Jlc3BvbnNlKGNvbmZpZywgcmVzdWx0QXNSUENSZXNwb25zZSkpLCB7XG5cdFx0XHRzdGF0dXM6IGhlYWRSZXNwb25zZS5zdGF0dXMsXG5cdFx0XHRoZWFkZXJzXG5cdFx0fSk7XG5cdH0gY2F0Y2ggKGNhdXNlKSB7XG5cdFx0dmFyIF9pbmZvJHR5cGUyO1xuXHRcdGNvbnN0IFtfaW5mb0Vycm9yLCBpbmZvXSA9IGluZm9UdXBsZTtcblx0XHRjb25zdCBjdHggPSBjdHhNYW5hZ2VyLnZhbHVlT3JVbmRlZmluZWQoKTtcblx0XHRjb25zdCB7IGVycm9yLCB1bnRyYW5zZm9ybWVkSlNPTiwgYm9keSB9ID0gY2F1Z2h0RXJyb3JUb0RhdGEoY2F1c2UsIHtcblx0XHRcdG9wdHMsXG5cdFx0XHRjdHg6IGN0eE1hbmFnZXIudmFsdWVPclVuZGVmaW5lZCgpLFxuXHRcdFx0dHlwZTogKF9pbmZvJHR5cGUyID0gaW5mbyA9PT0gbnVsbCB8fCBpbmZvID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbmZvLnR5cGUpICE9PSBudWxsICYmIF9pbmZvJHR5cGUyICE9PSB2b2lkIDAgPyBfaW5mbyR0eXBlMiA6IFwidW5rbm93blwiXG5cdFx0fSk7XG5cdFx0Y29uc3QgaGVhZFJlc3BvbnNlID0gaW5pdFJlc3BvbnNlKHtcblx0XHRcdGN0eCxcblx0XHRcdGluZm8sXG5cdFx0XHRyZXNwb25zZU1ldGE6IG9wdHMucmVzcG9uc2VNZXRhLFxuXHRcdFx0dW50cmFuc2Zvcm1lZEpTT04sXG5cdFx0XHRlcnJvcnM6IFtlcnJvcl0sXG5cdFx0XHRoZWFkZXJzXG5cdFx0fSk7XG5cdFx0cmV0dXJuIG5ldyBSZXNwb25zZShib2R5LCB7XG5cdFx0XHRzdGF0dXM6IGhlYWRSZXNwb25zZS5zdGF0dXMsXG5cdFx0XHRoZWFkZXJzXG5cdFx0fSk7XG5cdH1cbn1cblxuLy8jZW5kcmVnaW9uXG5leHBvcnQgeyBVbnByb21pc2UsIGNyZWF0ZURlZmVycmVkLCBnZXRSZXF1ZXN0SW5mbywgaXNBYm9ydEVycm9yLCBpc1Byb21pc2UsIGl0ZXJhdG9yUmVzb3VyY2UsIGpzb25sU3RyZWFtQ29uc3VtZXIsIGpzb25sU3RyZWFtUHJvZHVjZXIsIG1ha2VBc3luY1Jlc291cmNlLCBtYWtlUmVzb3VyY2UsIHBhcnNlQ29ubmVjdGlvblBhcmFtc0Zyb21TdHJpbmcsIHBhcnNlQ29ubmVjdGlvblBhcmFtc0Zyb21Vbmtub3duLCByZXF1aXJlX3VzaW5nQ3R4LCByZXNvbHZlUmVzcG9uc2UsIHNzZUhlYWRlcnMsIHNzZVN0cmVhbUNvbnN1bWVyLCBzc2VTdHJlYW1Qcm9kdWNlciwgdGFrZVdpdGhHcmFjZSwgdGhyb3dBYm9ydEVycm9yLCB3aXRoTWF4RHVyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc29sdmVSZXNwb25zZS1DemxiUnBDSS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/resolveResponse-CzlbRpCI.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPCError: () => (/* binding */ TRPCError),\n/* harmony export */   callProcedure: () => (/* binding */ callProcedure),\n/* harmony export */   createCallerFactory: () => (/* binding */ createCallerFactory),\n/* harmony export */   createRouterFactory: () => (/* binding */ createRouterFactory),\n/* harmony export */   defaultFormatter: () => (/* binding */ defaultFormatter),\n/* harmony export */   defaultTransformer: () => (/* binding */ defaultTransformer),\n/* harmony export */   getCauseFromUnknown: () => (/* binding */ getCauseFromUnknown),\n/* harmony export */   getDataTransformer: () => (/* binding */ getDataTransformer),\n/* harmony export */   getProcedureAtPath: () => (/* binding */ getProcedureAtPath),\n/* harmony export */   getTRPCErrorFromUnknown: () => (/* binding */ getTRPCErrorFromUnknown),\n/* harmony export */   isTrackedEnvelope: () => (/* binding */ isTrackedEnvelope),\n/* harmony export */   lazy: () => (/* binding */ lazy),\n/* harmony export */   mergeRouters: () => (/* binding */ mergeRouters),\n/* harmony export */   sse: () => (/* binding */ sse),\n/* harmony export */   tracked: () => (/* binding */ tracked),\n/* harmony export */   transformResult: () => (/* binding */ transformResult),\n/* harmony export */   transformTRPCResponse: () => (/* binding */ transformTRPCResponse)\n/* harmony export */ });\n/* harmony import */ var _getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getErrorShape-Uhlrl4Bk.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/getErrorShape-Uhlrl4Bk.mjs\");\n/* harmony import */ var _utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils-DdbbrDku.mjs */ \"(ssr)/./node_modules/@trpc/server/dist/utils-DdbbrDku.mjs\");\n\n\n\n//#region src/unstable-core-do-not-import/error/formatter.ts\nconst defaultFormatter = ({ shape }) => {\n\treturn shape;\n};\n\n//#endregion\n//#region src/unstable-core-do-not-import/error/TRPCError.ts\nvar import_defineProperty = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_0__.require_defineProperty)(), 1);\nvar UnknownCauseError = class extends Error {};\nfunction getCauseFromUnknown(cause) {\n\tif (cause instanceof Error) return cause;\n\tconst type = typeof cause;\n\tif (type === \"undefined\" || type === \"function\" || cause === null) return void 0;\n\tif (type !== \"object\") return new Error(String(cause));\n\tif ((0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_1__.isObject)(cause)) return Object.assign(new UnknownCauseError(), cause);\n\treturn void 0;\n}\nfunction getTRPCErrorFromUnknown(cause) {\n\tif (cause instanceof TRPCError) return cause;\n\tif (cause instanceof Error && cause.name === \"TRPCError\") return cause;\n\tconst trpcError = new TRPCError({\n\t\tcode: \"INTERNAL_SERVER_ERROR\",\n\t\tcause\n\t});\n\tif (cause instanceof Error && cause.stack) trpcError.stack = cause.stack;\n\treturn trpcError;\n}\nvar TRPCError = class extends Error {\n\tconstructor(opts) {\n\t\tvar _ref, _opts$message, _this$cause;\n\t\tconst cause = getCauseFromUnknown(opts.cause);\n\t\tconst message = (_ref = (_opts$message = opts.message) !== null && _opts$message !== void 0 ? _opts$message : cause === null || cause === void 0 ? void 0 : cause.message) !== null && _ref !== void 0 ? _ref : opts.code;\n\t\tsuper(message, { cause });\n\t\t(0, import_defineProperty.default)(this, \"cause\", void 0);\n\t\t(0, import_defineProperty.default)(this, \"code\", void 0);\n\t\tthis.code = opts.code;\n\t\tthis.name = \"TRPCError\";\n\t\t(_this$cause = this.cause) !== null && _this$cause !== void 0 || (this.cause = cause);\n\t}\n};\n\n//#endregion\n//#region src/unstable-core-do-not-import/transformer.ts\nvar import_objectSpread2$1 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\n/**\n* @internal\n*/\nfunction getDataTransformer(transformer) {\n\tif (\"input\" in transformer) return transformer;\n\treturn {\n\t\tinput: transformer,\n\t\toutput: transformer\n\t};\n}\n/**\n* @internal\n*/\nconst defaultTransformer = {\n\tinput: {\n\t\tserialize: (obj) => obj,\n\t\tdeserialize: (obj) => obj\n\t},\n\toutput: {\n\t\tserialize: (obj) => obj,\n\t\tdeserialize: (obj) => obj\n\t}\n};\nfunction transformTRPCResponseItem(config, item) {\n\tif (\"error\" in item) return (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, item), {}, { error: config.transformer.output.serialize(item.error) });\n\tif (\"data\" in item.result) return (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, item), {}, { result: (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, item.result), {}, { data: config.transformer.output.serialize(item.result.data) }) });\n\treturn item;\n}\n/**\n* Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n**/\nfunction transformTRPCResponse(config, itemOrItems) {\n\treturn Array.isArray(itemOrItems) ? itemOrItems.map((item) => transformTRPCResponseItem(config, item)) : transformTRPCResponseItem(config, itemOrItems);\n}\n/** @internal */\nfunction transformResultInner(response, transformer) {\n\tif (\"error\" in response) {\n\t\tconst error = transformer.deserialize(response.error);\n\t\treturn {\n\t\t\tok: false,\n\t\t\terror: (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, response), {}, { error })\n\t\t};\n\t}\n\tconst result = (0, import_objectSpread2$1.default)((0, import_objectSpread2$1.default)({}, response.result), (!response.result.type || response.result.type === \"data\") && {\n\t\ttype: \"data\",\n\t\tdata: transformer.deserialize(response.result.data)\n\t});\n\treturn {\n\t\tok: true,\n\t\tresult\n\t};\n}\nvar TransformResultError = class extends Error {\n\tconstructor() {\n\t\tsuper(\"Unable to transform response from server\");\n\t}\n};\n/**\n* Transforms and validates that the result is a valid TRPCResponse\n* @internal\n*/\nfunction transformResult(response, transformer) {\n\tlet result;\n\ttry {\n\t\tresult = transformResultInner(response, transformer);\n\t} catch (_unused) {\n\t\tthrow new TransformResultError();\n\t}\n\tif (!result.ok && (!(0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_1__.isObject)(result.error.error) || typeof result.error.error[\"code\"] !== \"number\")) throw new TransformResultError();\n\tif (result.ok && !(0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_1__.isObject)(result.result)) throw new TransformResultError();\n\treturn result;\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/router.ts\nvar import_objectSpread2 = (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_0__.__toESM)((0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_0__.require_objectSpread2)(), 1);\nconst lazySymbol = Symbol(\"lazy\");\nfunction once(fn) {\n\tconst uncalled = Symbol();\n\tlet result = uncalled;\n\treturn () => {\n\t\tif (result === uncalled) result = fn();\n\t\treturn result;\n\t};\n}\n/**\n* Lazy load a router\n* @see https://trpc.io/docs/server/merging-routers#lazy-load\n*/\nfunction lazy(importRouter) {\n\tasync function resolve() {\n\t\tconst mod = await importRouter();\n\t\tif (isRouter(mod)) return mod;\n\t\tconst routers = Object.values(mod);\n\t\tif (routers.length !== 1 || !isRouter(routers[0])) throw new Error(\"Invalid router module - either define exactly 1 export or return the router directly.\\nExample: `lazy(() => import('./slow.js').then((m) => m.slowRouter))`\");\n\t\treturn routers[0];\n\t}\n\tresolve[lazySymbol] = true;\n\treturn resolve;\n}\nfunction isLazy(input) {\n\treturn typeof input === \"function\" && lazySymbol in input;\n}\nfunction isRouter(value) {\n\treturn (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_1__.isObject)(value) && (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_1__.isObject)(value[\"_def\"]) && \"router\" in value[\"_def\"];\n}\nconst emptyRouter = {\n\t_ctx: null,\n\t_errorShape: null,\n\t_meta: null,\n\tqueries: {},\n\tmutations: {},\n\tsubscriptions: {},\n\terrorFormatter: defaultFormatter,\n\ttransformer: defaultTransformer\n};\n/**\n* Reserved words that can't be used as router or procedure names\n*/\nconst reservedWords = [\n\t\"then\",\n\t\"call\",\n\t\"apply\"\n];\n/**\n* @internal\n*/\nfunction createRouterFactory(config) {\n\tfunction createRouterInner(input) {\n\t\tconst reservedWordsUsed = new Set(Object.keys(input).filter((v) => reservedWords.includes(v)));\n\t\tif (reservedWordsUsed.size > 0) throw new Error(\"Reserved words used in `router({})` call: \" + Array.from(reservedWordsUsed).join(\", \"));\n\t\tconst procedures = (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_1__.omitPrototype)({});\n\t\tconst lazy$1 = (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_1__.omitPrototype)({});\n\t\tfunction createLazyLoader(opts) {\n\t\t\treturn {\n\t\t\t\tref: opts.ref,\n\t\t\t\tload: once(async () => {\n\t\t\t\t\tconst router$1 = await opts.ref();\n\t\t\t\t\tconst lazyPath = [...opts.path, opts.key];\n\t\t\t\t\tconst lazyKey = lazyPath.join(\".\");\n\t\t\t\t\topts.aggregate[opts.key] = step(router$1._def.record, lazyPath);\n\t\t\t\t\tdelete lazy$1[lazyKey];\n\t\t\t\t\tfor (const [nestedKey, nestedItem] of Object.entries(router$1._def.lazy)) {\n\t\t\t\t\t\tconst nestedRouterKey = [...lazyPath, nestedKey].join(\".\");\n\t\t\t\t\t\tlazy$1[nestedRouterKey] = createLazyLoader({\n\t\t\t\t\t\t\tref: nestedItem.ref,\n\t\t\t\t\t\t\tpath: lazyPath,\n\t\t\t\t\t\t\tkey: nestedKey,\n\t\t\t\t\t\t\taggregate: opts.aggregate[opts.key]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t};\n\t\t}\n\t\tfunction step(from, path = []) {\n\t\t\tconst aggregate = (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_1__.omitPrototype)({});\n\t\t\tfor (const [key, item] of Object.entries(from !== null && from !== void 0 ? from : {})) {\n\t\t\t\tif (isLazy(item)) {\n\t\t\t\t\tlazy$1[[...path, key].join(\".\")] = createLazyLoader({\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tref: item,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\taggregate\n\t\t\t\t\t});\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (isRouter(item)) {\n\t\t\t\t\taggregate[key] = step(item._def.record, [...path, key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!isProcedure(item)) {\n\t\t\t\t\taggregate[key] = step(item, [...path, key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst newPath = [...path, key].join(\".\");\n\t\t\t\tif (procedures[newPath]) throw new Error(`Duplicate key: ${newPath}`);\n\t\t\t\tprocedures[newPath] = item;\n\t\t\t\taggregate[key] = item;\n\t\t\t}\n\t\t\treturn aggregate;\n\t\t}\n\t\tconst record = step(input);\n\t\tconst _def = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({\n\t\t\t_config: config,\n\t\t\trouter: true,\n\t\t\tprocedures,\n\t\t\tlazy: lazy$1\n\t\t}, emptyRouter), {}, { record });\n\t\tconst router = (0, import_objectSpread2.default)((0, import_objectSpread2.default)({}, record), {}, {\n\t\t\t_def,\n\t\t\tcreateCaller: createCallerFactory()({ _def })\n\t\t});\n\t\treturn router;\n\t}\n\treturn createRouterInner;\n}\nfunction isProcedure(procedureOrRouter) {\n\treturn typeof procedureOrRouter === \"function\";\n}\n/**\n* @internal\n*/\nasync function getProcedureAtPath(router, path) {\n\tconst { _def } = router;\n\tlet procedure = _def.procedures[path];\n\twhile (!procedure) {\n\t\tconst key = Object.keys(_def.lazy).find((key$1) => path.startsWith(key$1));\n\t\tif (!key) return null;\n\t\tconst lazyRouter = _def.lazy[key];\n\t\tawait lazyRouter.load();\n\t\tprocedure = _def.procedures[path];\n\t}\n\treturn procedure;\n}\n/**\n* @internal\n*/\nasync function callProcedure(opts) {\n\tconst { type, path } = opts;\n\tconst proc = await getProcedureAtPath(opts.router, path);\n\tif (!proc || !isProcedure(proc) || proc._def.type !== type && !opts.allowMethodOverride) throw new TRPCError({\n\t\tcode: \"NOT_FOUND\",\n\t\tmessage: `No \"${type}\"-procedure on path \"${path}\"`\n\t});\n\t/* istanbul ignore if -- @preserve */\n\tif (proc._def.type !== type && opts.allowMethodOverride && proc._def.type === \"subscription\") throw new TRPCError({\n\t\tcode: \"METHOD_NOT_SUPPORTED\",\n\t\tmessage: `Method override is not supported for subscriptions`\n\t});\n\treturn proc(opts);\n}\nfunction createCallerFactory() {\n\treturn function createCallerInner(router) {\n\t\tconst { _def } = router;\n\t\treturn function createCaller(ctxOrCallback, opts) {\n\t\t\treturn (0,_getErrorShape_Uhlrl4Bk_mjs__WEBPACK_IMPORTED_MODULE_0__.createRecursiveProxy)(async ({ path, args }) => {\n\t\t\t\tconst fullPath = path.join(\".\");\n\t\t\t\tif (path.length === 1 && path[0] === \"_def\") return _def;\n\t\t\t\tconst procedure = await getProcedureAtPath(router, fullPath);\n\t\t\t\tlet ctx = void 0;\n\t\t\t\ttry {\n\t\t\t\t\tif (!procedure) throw new TRPCError({\n\t\t\t\t\t\tcode: \"NOT_FOUND\",\n\t\t\t\t\t\tmessage: `No procedure found on path \"${path}\"`\n\t\t\t\t\t});\n\t\t\t\t\tctx = (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_1__.isFunction)(ctxOrCallback) ? await Promise.resolve(ctxOrCallback()) : ctxOrCallback;\n\t\t\t\t\treturn await procedure({\n\t\t\t\t\t\tpath: fullPath,\n\t\t\t\t\t\tgetRawInput: async () => args[0],\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\ttype: procedure._def.type,\n\t\t\t\t\t\tsignal: opts === null || opts === void 0 ? void 0 : opts.signal\n\t\t\t\t\t});\n\t\t\t\t} catch (cause) {\n\t\t\t\t\tvar _opts$onError, _procedure$_def$type;\n\t\t\t\t\topts === null || opts === void 0 || (_opts$onError = opts.onError) === null || _opts$onError === void 0 || _opts$onError.call(opts, {\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\terror: getTRPCErrorFromUnknown(cause),\n\t\t\t\t\t\tinput: args[0],\n\t\t\t\t\t\tpath: fullPath,\n\t\t\t\t\t\ttype: (_procedure$_def$type = procedure === null || procedure === void 0 ? void 0 : procedure._def.type) !== null && _procedure$_def$type !== void 0 ? _procedure$_def$type : \"unknown\"\n\t\t\t\t\t});\n\t\t\t\t\tthrow cause;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t};\n}\nfunction mergeRouters(...routerList) {\n\tvar _routerList$;\n\tconst record = (0,_utils_DdbbrDku_mjs__WEBPACK_IMPORTED_MODULE_1__.mergeWithoutOverrides)({}, ...routerList.map((r) => r._def.record));\n\tconst errorFormatter = routerList.reduce((currentErrorFormatter, nextRouter) => {\n\t\tif (nextRouter._def._config.errorFormatter && nextRouter._def._config.errorFormatter !== defaultFormatter) {\n\t\t\tif (currentErrorFormatter !== defaultFormatter && currentErrorFormatter !== nextRouter._def._config.errorFormatter) throw new Error(\"You seem to have several error formatters\");\n\t\t\treturn nextRouter._def._config.errorFormatter;\n\t\t}\n\t\treturn currentErrorFormatter;\n\t}, defaultFormatter);\n\tconst transformer = routerList.reduce((prev, current) => {\n\t\tif (current._def._config.transformer && current._def._config.transformer !== defaultTransformer) {\n\t\t\tif (prev !== defaultTransformer && prev !== current._def._config.transformer) throw new Error(\"You seem to have several transformers\");\n\t\t\treturn current._def._config.transformer;\n\t\t}\n\t\treturn prev;\n\t}, defaultTransformer);\n\tconst router = createRouterFactory({\n\t\terrorFormatter,\n\t\ttransformer,\n\t\tisDev: routerList.every((r) => r._def._config.isDev),\n\t\tallowOutsideOfServer: routerList.every((r) => r._def._config.allowOutsideOfServer),\n\t\tisServer: routerList.every((r) => r._def._config.isServer),\n\t\t$types: (_routerList$ = routerList[0]) === null || _routerList$ === void 0 ? void 0 : _routerList$._def._config.$types\n\t})(record);\n\treturn router;\n}\n\n//#endregion\n//#region src/unstable-core-do-not-import/stream/tracked.ts\nconst trackedSymbol = Symbol();\n/**\n* Produce a typed server-sent event message\n* @deprecated use `tracked(id, data)` instead\n*/\nfunction sse(event) {\n\treturn tracked(event.id, event.data);\n}\nfunction isTrackedEnvelope(value) {\n\treturn Array.isArray(value) && value[2] === trackedSymbol;\n}\n/**\n* Automatically track an event so that it can be resumed from a given id if the connection is lost\n*/\nfunction tracked(id, data) {\n\tif (id === \"\") throw new Error(\"`id` must not be an empty string as empty string is the same as not setting the id at all\");\n\treturn [\n\t\tid,\n\t\tdata,\n\t\ttrackedSymbol\n\t];\n}\n\n//#endregion\n\n//# sourceMappingURL=tracked-gU3ttYjg.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@trpc/server/dist/utils-DdbbrDku.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@trpc/server/dist/utils-DdbbrDku.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRPC_ERROR_CODES_BY_KEY: () => (/* binding */ TRPC_ERROR_CODES_BY_KEY),\n/* harmony export */   TRPC_ERROR_CODES_BY_NUMBER: () => (/* binding */ TRPC_ERROR_CODES_BY_NUMBER),\n/* harmony export */   abortSignalsAnyPonyfill: () => (/* binding */ abortSignalsAnyPonyfill),\n/* harmony export */   assert: () => (/* binding */ assert),\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable),\n/* harmony export */   isFunction: () => (/* binding */ isFunction),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   mergeWithoutOverrides: () => (/* binding */ mergeWithoutOverrides),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   omitPrototype: () => (/* binding */ omitPrototype),\n/* harmony export */   retryableRpcCodes: () => (/* binding */ retryableRpcCodes),\n/* harmony export */   run: () => (/* binding */ run),\n/* harmony export */   sleep: () => (/* binding */ sleep)\n/* harmony export */ });\n//#region src/unstable-core-do-not-import/rpc/codes.ts\n/**\n* JSON-RPC 2.0 Error codes\n*\n* `-32000` to `-32099` are reserved for implementation-defined server-errors.\n* For tRPC we're copying the last digits of HTTP 4XX errors.\n*/\nconst TRPC_ERROR_CODES_BY_KEY = {\n\tPARSE_ERROR: -32700,\n\tBAD_REQUEST: -32600,\n\tINTERNAL_SERVER_ERROR: -32603,\n\tNOT_IMPLEMENTED: -32603,\n\tBAD_GATEWAY: -32603,\n\tSERVICE_UNAVAILABLE: -32603,\n\tGATEWAY_TIMEOUT: -32603,\n\tUNAUTHORIZED: -32001,\n\tPAYMENT_REQUIRED: -32002,\n\tFORBIDDEN: -32003,\n\tNOT_FOUND: -32004,\n\tMETHOD_NOT_SUPPORTED: -32005,\n\tTIMEOUT: -32008,\n\tCONFLICT: -32009,\n\tPRECONDITION_FAILED: -32012,\n\tPAYLOAD_TOO_LARGE: -32013,\n\tUNSUPPORTED_MEDIA_TYPE: -32015,\n\tUNPROCESSABLE_CONTENT: -32022,\n\tTOO_MANY_REQUESTS: -32029,\n\tCLIENT_CLOSED_REQUEST: -32099\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = {\n\t[-32700]: \"PARSE_ERROR\",\n\t[-32600]: \"BAD_REQUEST\",\n\t[-32603]: \"INTERNAL_SERVER_ERROR\",\n\t[-32001]: \"UNAUTHORIZED\",\n\t[-32002]: \"PAYMENT_REQUIRED\",\n\t[-32003]: \"FORBIDDEN\",\n\t[-32004]: \"NOT_FOUND\",\n\t[-32005]: \"METHOD_NOT_SUPPORTED\",\n\t[-32008]: \"TIMEOUT\",\n\t[-32009]: \"CONFLICT\",\n\t[-32012]: \"PRECONDITION_FAILED\",\n\t[-32013]: \"PAYLOAD_TOO_LARGE\",\n\t[-32015]: \"UNSUPPORTED_MEDIA_TYPE\",\n\t[-32022]: \"UNPROCESSABLE_CONTENT\",\n\t[-32029]: \"TOO_MANY_REQUESTS\",\n\t[-32099]: \"CLIENT_CLOSED_REQUEST\"\n};\n/**\n* tRPC error codes that are considered retryable\n* With out of the box SSE, the client will reconnect when these errors are encountered\n*/\nconst retryableRpcCodes = [\n\tTRPC_ERROR_CODES_BY_KEY.BAD_GATEWAY,\n\tTRPC_ERROR_CODES_BY_KEY.SERVICE_UNAVAILABLE,\n\tTRPC_ERROR_CODES_BY_KEY.GATEWAY_TIMEOUT,\n\tTRPC_ERROR_CODES_BY_KEY.INTERNAL_SERVER_ERROR\n];\n\n//#endregion\n//#region src/unstable-core-do-not-import/utils.ts\n/**\n* Ensures there are no duplicate keys when building a procedure.\n* @internal\n*/\nfunction mergeWithoutOverrides(obj1, ...objs) {\n\tconst newObj = Object.assign(Object.create(null), obj1);\n\tfor (const overrides of objs) for (const key in overrides) {\n\t\tif (key in newObj && newObj[key] !== overrides[key]) throw new Error(`Duplicate key ${key}`);\n\t\tnewObj[key] = overrides[key];\n\t}\n\treturn newObj;\n}\n/**\n* Check that value is object\n* @internal\n*/\nfunction isObject(value) {\n\treturn !!value && !Array.isArray(value) && typeof value === \"object\";\n}\nfunction isFunction(fn) {\n\treturn typeof fn === \"function\";\n}\n/**\n* Create an object without inheriting anything from `Object.prototype`\n* @internal\n*/\nfunction omitPrototype(obj) {\n\treturn Object.assign(Object.create(null), obj);\n}\nconst asyncIteratorsSupported = typeof Symbol === \"function\" && !!Symbol.asyncIterator;\nfunction isAsyncIterable(value) {\n\treturn asyncIteratorsSupported && isObject(value) && Symbol.asyncIterator in value;\n}\n/**\n* Run an IIFE\n*/\nconst run = (fn) => fn();\nfunction noop() {}\nfunction identity(it) {\n\treturn it;\n}\n/**\n* Generic runtime assertion function. Throws, if the condition is not `true`.\n*\n* Can be used as a slightly less dangerous variant of type assertions. Code\n* mistakes would be revealed at runtime then (hopefully during testing).\n*/\nfunction assert(condition, msg = \"no additional info\") {\n\tif (!condition) throw new Error(`AssertionError: ${msg}`);\n}\nfunction sleep(ms = 0) {\n\treturn new Promise((res) => setTimeout(res, ms));\n}\n/**\n* Ponyfill for\n* [`AbortSignal.any`](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/any_static).\n*/\nfunction abortSignalsAnyPonyfill(signals) {\n\tif (typeof AbortSignal.any === \"function\") return AbortSignal.any(signals);\n\tconst ac = new AbortController();\n\tfor (const signal of signals) {\n\t\tif (signal.aborted) {\n\t\t\ttrigger();\n\t\t\tbreak;\n\t\t}\n\t\tsignal.addEventListener(\"abort\", trigger, { once: true });\n\t}\n\treturn ac.signal;\n\tfunction trigger() {\n\t\tac.abort();\n\t\tfor (const signal of signals) signal.removeEventListener(\"abort\", trigger);\n\t}\n}\n\n//#endregion\n\n//# sourceMappingURL=utils-DdbbrDku.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdXRpbHMtRGRiYnJEa3UubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdGQUF3RixJQUFJO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELElBQUk7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsWUFBWTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUM0TjtBQUM1TiIsInNvdXJjZXMiOlsiL1VzZXJzL2JsYWluZWNvd2VuL0RvY3VtZW50cy9Qcm9qZWN0cy9ORkwtU3RhdC1RdWVyeS9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdXRpbHMtRGRiYnJEa3UubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vI3JlZ2lvbiBzcmMvdW5zdGFibGUtY29yZS1kby1ub3QtaW1wb3J0L3JwYy9jb2Rlcy50c1xuLyoqXG4qIEpTT04tUlBDIDIuMCBFcnJvciBjb2Rlc1xuKlxuKiBgLTMyMDAwYCB0byBgLTMyMDk5YCBhcmUgcmVzZXJ2ZWQgZm9yIGltcGxlbWVudGF0aW9uLWRlZmluZWQgc2VydmVyLWVycm9ycy5cbiogRm9yIHRSUEMgd2UncmUgY29weWluZyB0aGUgbGFzdCBkaWdpdHMgb2YgSFRUUCA0WFggZXJyb3JzLlxuKi9cbmNvbnN0IFRSUENfRVJST1JfQ09ERVNfQllfS0VZID0ge1xuXHRQQVJTRV9FUlJPUjogLTMyNzAwLFxuXHRCQURfUkVRVUVTVDogLTMyNjAwLFxuXHRJTlRFUk5BTF9TRVJWRVJfRVJST1I6IC0zMjYwMyxcblx0Tk9UX0lNUExFTUVOVEVEOiAtMzI2MDMsXG5cdEJBRF9HQVRFV0FZOiAtMzI2MDMsXG5cdFNFUlZJQ0VfVU5BVkFJTEFCTEU6IC0zMjYwMyxcblx0R0FURVdBWV9USU1FT1VUOiAtMzI2MDMsXG5cdFVOQVVUSE9SSVpFRDogLTMyMDAxLFxuXHRQQVlNRU5UX1JFUVVJUkVEOiAtMzIwMDIsXG5cdEZPUkJJRERFTjogLTMyMDAzLFxuXHROT1RfRk9VTkQ6IC0zMjAwNCxcblx0TUVUSE9EX05PVF9TVVBQT1JURUQ6IC0zMjAwNSxcblx0VElNRU9VVDogLTMyMDA4LFxuXHRDT05GTElDVDogLTMyMDA5LFxuXHRQUkVDT05ESVRJT05fRkFJTEVEOiAtMzIwMTIsXG5cdFBBWUxPQURfVE9PX0xBUkdFOiAtMzIwMTMsXG5cdFVOU1VQUE9SVEVEX01FRElBX1RZUEU6IC0zMjAxNSxcblx0VU5QUk9DRVNTQUJMRV9DT05URU5UOiAtMzIwMjIsXG5cdFRPT19NQU5ZX1JFUVVFU1RTOiAtMzIwMjksXG5cdENMSUVOVF9DTE9TRURfUkVRVUVTVDogLTMyMDk5XG59O1xuY29uc3QgVFJQQ19FUlJPUl9DT0RFU19CWV9OVU1CRVIgPSB7XG5cdFstMzI3MDBdOiBcIlBBUlNFX0VSUk9SXCIsXG5cdFstMzI2MDBdOiBcIkJBRF9SRVFVRVNUXCIsXG5cdFstMzI2MDNdOiBcIklOVEVSTkFMX1NFUlZFUl9FUlJPUlwiLFxuXHRbLTMyMDAxXTogXCJVTkFVVEhPUklaRURcIixcblx0Wy0zMjAwMl06IFwiUEFZTUVOVF9SRVFVSVJFRFwiLFxuXHRbLTMyMDAzXTogXCJGT1JCSURERU5cIixcblx0Wy0zMjAwNF06IFwiTk9UX0ZPVU5EXCIsXG5cdFstMzIwMDVdOiBcIk1FVEhPRF9OT1RfU1VQUE9SVEVEXCIsXG5cdFstMzIwMDhdOiBcIlRJTUVPVVRcIixcblx0Wy0zMjAwOV06IFwiQ09ORkxJQ1RcIixcblx0Wy0zMjAxMl06IFwiUFJFQ09ORElUSU9OX0ZBSUxFRFwiLFxuXHRbLTMyMDEzXTogXCJQQVlMT0FEX1RPT19MQVJHRVwiLFxuXHRbLTMyMDE1XTogXCJVTlNVUFBPUlRFRF9NRURJQV9UWVBFXCIsXG5cdFstMzIwMjJdOiBcIlVOUFJPQ0VTU0FCTEVfQ09OVEVOVFwiLFxuXHRbLTMyMDI5XTogXCJUT09fTUFOWV9SRVFVRVNUU1wiLFxuXHRbLTMyMDk5XTogXCJDTElFTlRfQ0xPU0VEX1JFUVVFU1RcIlxufTtcbi8qKlxuKiB0UlBDIGVycm9yIGNvZGVzIHRoYXQgYXJlIGNvbnNpZGVyZWQgcmV0cnlhYmxlXG4qIFdpdGggb3V0IG9mIHRoZSBib3ggU1NFLCB0aGUgY2xpZW50IHdpbGwgcmVjb25uZWN0IHdoZW4gdGhlc2UgZXJyb3JzIGFyZSBlbmNvdW50ZXJlZFxuKi9cbmNvbnN0IHJldHJ5YWJsZVJwY0NvZGVzID0gW1xuXHRUUlBDX0VSUk9SX0NPREVTX0JZX0tFWS5CQURfR0FURVdBWSxcblx0VFJQQ19FUlJPUl9DT0RFU19CWV9LRVkuU0VSVklDRV9VTkFWQUlMQUJMRSxcblx0VFJQQ19FUlJPUl9DT0RFU19CWV9LRVkuR0FURVdBWV9USU1FT1VULFxuXHRUUlBDX0VSUk9SX0NPREVTX0JZX0tFWS5JTlRFUk5BTF9TRVJWRVJfRVJST1Jcbl07XG5cbi8vI2VuZHJlZ2lvblxuLy8jcmVnaW9uIHNyYy91bnN0YWJsZS1jb3JlLWRvLW5vdC1pbXBvcnQvdXRpbHMudHNcbi8qKlxuKiBFbnN1cmVzIHRoZXJlIGFyZSBubyBkdXBsaWNhdGUga2V5cyB3aGVuIGJ1aWxkaW5nIGEgcHJvY2VkdXJlLlxuKiBAaW50ZXJuYWxcbiovXG5mdW5jdGlvbiBtZXJnZVdpdGhvdXRPdmVycmlkZXMob2JqMSwgLi4ub2Jqcykge1xuXHRjb25zdCBuZXdPYmogPSBPYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUobnVsbCksIG9iajEpO1xuXHRmb3IgKGNvbnN0IG92ZXJyaWRlcyBvZiBvYmpzKSBmb3IgKGNvbnN0IGtleSBpbiBvdmVycmlkZXMpIHtcblx0XHRpZiAoa2V5IGluIG5ld09iaiAmJiBuZXdPYmpba2V5XSAhPT0gb3ZlcnJpZGVzW2tleV0pIHRocm93IG5ldyBFcnJvcihgRHVwbGljYXRlIGtleSAke2tleX1gKTtcblx0XHRuZXdPYmpba2V5XSA9IG92ZXJyaWRlc1trZXldO1xuXHR9XG5cdHJldHVybiBuZXdPYmo7XG59XG4vKipcbiogQ2hlY2sgdGhhdCB2YWx1ZSBpcyBvYmplY3RcbiogQGludGVybmFsXG4qL1xuZnVuY3Rpb24gaXNPYmplY3QodmFsdWUpIHtcblx0cmV0dXJuICEhdmFsdWUgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIjtcbn1cbmZ1bmN0aW9uIGlzRnVuY3Rpb24oZm4pIHtcblx0cmV0dXJuIHR5cGVvZiBmbiA9PT0gXCJmdW5jdGlvblwiO1xufVxuLyoqXG4qIENyZWF0ZSBhbiBvYmplY3Qgd2l0aG91dCBpbmhlcml0aW5nIGFueXRoaW5nIGZyb20gYE9iamVjdC5wcm90b3R5cGVgXG4qIEBpbnRlcm5hbFxuKi9cbmZ1bmN0aW9uIG9taXRQcm90b3R5cGUob2JqKSB7XG5cdHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUobnVsbCksIG9iaik7XG59XG5jb25zdCBhc3luY0l0ZXJhdG9yc1N1cHBvcnRlZCA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAhIVN5bWJvbC5hc3luY0l0ZXJhdG9yO1xuZnVuY3Rpb24gaXNBc3luY0l0ZXJhYmxlKHZhbHVlKSB7XG5cdHJldHVybiBhc3luY0l0ZXJhdG9yc1N1cHBvcnRlZCAmJiBpc09iamVjdCh2YWx1ZSkgJiYgU3ltYm9sLmFzeW5jSXRlcmF0b3IgaW4gdmFsdWU7XG59XG4vKipcbiogUnVuIGFuIElJRkVcbiovXG5jb25zdCBydW4gPSAoZm4pID0+IGZuKCk7XG5mdW5jdGlvbiBub29wKCkge31cbmZ1bmN0aW9uIGlkZW50aXR5KGl0KSB7XG5cdHJldHVybiBpdDtcbn1cbi8qKlxuKiBHZW5lcmljIHJ1bnRpbWUgYXNzZXJ0aW9uIGZ1bmN0aW9uLiBUaHJvd3MsIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IGB0cnVlYC5cbipcbiogQ2FuIGJlIHVzZWQgYXMgYSBzbGlnaHRseSBsZXNzIGRhbmdlcm91cyB2YXJpYW50IG9mIHR5cGUgYXNzZXJ0aW9ucy4gQ29kZVxuKiBtaXN0YWtlcyB3b3VsZCBiZSByZXZlYWxlZCBhdCBydW50aW1lIHRoZW4gKGhvcGVmdWxseSBkdXJpbmcgdGVzdGluZykuXG4qL1xuZnVuY3Rpb24gYXNzZXJ0KGNvbmRpdGlvbiwgbXNnID0gXCJubyBhZGRpdGlvbmFsIGluZm9cIikge1xuXHRpZiAoIWNvbmRpdGlvbikgdGhyb3cgbmV3IEVycm9yKGBBc3NlcnRpb25FcnJvcjogJHttc2d9YCk7XG59XG5mdW5jdGlvbiBzbGVlcChtcyA9IDApIHtcblx0cmV0dXJuIG5ldyBQcm9taXNlKChyZXMpID0+IHNldFRpbWVvdXQocmVzLCBtcykpO1xufVxuLyoqXG4qIFBvbnlmaWxsIGZvclxuKiBbYEFib3J0U2lnbmFsLmFueWBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9BYm9ydFNpZ25hbC9hbnlfc3RhdGljKS5cbiovXG5mdW5jdGlvbiBhYm9ydFNpZ25hbHNBbnlQb255ZmlsbChzaWduYWxzKSB7XG5cdGlmICh0eXBlb2YgQWJvcnRTaWduYWwuYW55ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBBYm9ydFNpZ25hbC5hbnkoc2lnbmFscyk7XG5cdGNvbnN0IGFjID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuXHRmb3IgKGNvbnN0IHNpZ25hbCBvZiBzaWduYWxzKSB7XG5cdFx0aWYgKHNpZ25hbC5hYm9ydGVkKSB7XG5cdFx0XHR0cmlnZ2VyKCk7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cdFx0c2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCB0cmlnZ2VyLCB7IG9uY2U6IHRydWUgfSk7XG5cdH1cblx0cmV0dXJuIGFjLnNpZ25hbDtcblx0ZnVuY3Rpb24gdHJpZ2dlcigpIHtcblx0XHRhYy5hYm9ydCgpO1xuXHRcdGZvciAoY29uc3Qgc2lnbmFsIG9mIHNpZ25hbHMpIHNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgdHJpZ2dlcik7XG5cdH1cbn1cblxuLy8jZW5kcmVnaW9uXG5leHBvcnQgeyBUUlBDX0VSUk9SX0NPREVTX0JZX0tFWSwgVFJQQ19FUlJPUl9DT0RFU19CWV9OVU1CRVIsIGFib3J0U2lnbmFsc0FueVBvbnlmaWxsLCBhc3NlcnQsIGlkZW50aXR5LCBpc0FzeW5jSXRlcmFibGUsIGlzRnVuY3Rpb24sIGlzT2JqZWN0LCBtZXJnZVdpdGhvdXRPdmVycmlkZXMsIG5vb3AsIG9taXRQcm90b3R5cGUsIHJldHJ5YWJsZVJwY0NvZGVzLCBydW4sIHNsZWVwIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy1EZGJickRrdS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@trpc/server/dist/utils-DdbbrDku.mjs\n");

/***/ })

};
;